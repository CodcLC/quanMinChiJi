{"version":3,"sources":["assets\\scripts\\ui\\PrepareMap.js"],"names":["cc","Class","Component","properties","tiledMap","TiledMap","objectPrefab","Prefab","colliderPrefab","groundItemPrefab","waitLabel","Node","allObjectNode","allColliderNode","allGunNode","enemySpawnPosGroupNode","mapAtlas","SpriteAtlas","_timer0","_timer","readyToSort","onLoad","initMapShow","showPlayer","showEnemy","update","dt","sortAll","GameApp","dataManager","globalData","allRoleArr","allGunArr","wallLayer","getLayer","getObjectGroup","_objects","forEach","element","obj","instantiate","getComponent","Sprite","spriteFrame","getSpriteFrame","name","split","parent","desPos","getPositionAt","getTilePos","v2","x","y","setPosition","ddd","convertToNodeSpaceAR","convertToWorldSpaceAR","coli","PhysicsBoxCollider","size","width","height","offset","apply","addChild","tag","Tags","collider","_param","_type","ItemType","weapon","_kind","Tools","randomNum","init","push","posInPixel","mapSize","node","getContentSize","tileSize","getTileSize","Math","floor","uiManager","showGameObject","c","getUI","joystick","player","tempPosArr","standardArr","children","tagNum","enemy","i","userData","choosedSkinId","jsonData","RobotName","func","eventManager","emit","EventNames","EVENT_SHOW_ALLROLENUM_UI","bind","schedule","cloneObjArr","concat","tempDict","tempIndex","isInMapSight","index","sort","a","b","setSiblingIndex"],"mappings":";;;;;;AACAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAEJ,EAAE,CAACK,QADL;AAERC,IAAAA,YAAY,EAAEN,EAAE,CAACO,MAFT;AAGRC,IAAAA,cAAc,EAAER,EAAE,CAACO,MAHX;AAIRE,IAAAA,gBAAgB,EAAET,EAAE,CAACO,MAJb;AAMRG,IAAAA,SAAS,EAAEV,EAAE,CAACW,IANN;AAORC,IAAAA,aAAa,EAAEZ,EAAE,CAACW,IAPV;AAQRE,IAAAA,eAAe,EAAEb,EAAE,CAACW,IARZ;AASRG,IAAAA,UAAU,EAAEd,EAAE,CAACW,IATP;AAURI,IAAAA,sBAAsB,EAAEf,EAAE,CAACW,IAVnB;AAYRK,IAAAA,QAAQ,EAAEhB,EAAE,CAACiB,WAZL;AAcRC,IAAAA,OAAO,EAAE,GAdD;AAeRC,IAAAA,MAAM,EAAE,GAfA;AAgBRC,IAAAA,WAAW,EAAE;AAhBL,GAHP;AAuBLC,EAAAA,MAvBK,oBAuBI;AACL,SAAKC,WAAL;AACA,SAAKC,UAAL;AACA,SAAKC,SAAL;AACH,GA3BI;AA4BLC,EAAAA,MA5BK,kBA4BEC,EA5BF,EA4BM;AACP,QAAI,CAAC,KAAKN,WAAV,EAAuB;AACvB,SAAKD,MAAL,IAAeO,EAAf;;AACA,QAAI,KAAKP,MAAL,GAAc,CAAlB,EAAqB;AACjB,WAAKA,MAAL,GAAc,KAAKD,OAAnB;AACA,WAAKS,OAAL;AACH;AAEJ,GApCI;AAqCLL,EAAAA,WArCK,yBAqCS;AAAA;;AACVM,IAAAA,OAAO,CAACC,WAAR,CAAoBC,UAApB,CAA+BC,UAA/B,GAA4C,EAA5C;AACAH,IAAAA,OAAO,CAACC,WAAR,CAAoBC,UAApB,CAA+BE,SAA/B,GAA2C,EAA3C,CAFU,CAGV;;AACA,QAAIC,SAAS,GAAG,KAAK7B,QAAL,CAAc8B,QAAd,CAAuB,MAAvB,CAAhB;;AACA,SAAK9B,QAAL,CAAc+B,cAAd,CAA6B,SAA7B,EAAwCC,QAAxC,CAAiDC,OAAjD,CAAyD,UAAAC,OAAO,EAAI;AAChE,UAAIC,GAAG,GAAGvC,EAAE,CAACwC,WAAH,CAAe,KAAI,CAAClC,YAApB,CAAV;AACAiC,MAAAA,GAAG,CAACE,YAAJ,CAAiBzC,EAAE,CAAC0C,MAApB,EAA4BC,WAA5B,GAA0C,KAAI,CAAC3B,QAAL,CAAc4B,cAAd,CAA6BN,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAA7B,CAA1C;AACAP,MAAAA,GAAG,CAACQ,MAAJ,GAAa,KAAI,CAAClC,eAAlB;AACA,UAAImC,MAAM,GAAGf,SAAS,CAACgB,aAAV,CAAwB,KAAI,CAACC,UAAL,CAAgBlD,EAAE,CAACmD,EAAH,CAAMb,OAAO,CAACc,CAAd,EAAiBd,OAAO,CAACe,CAAzB,CAAhB,CAAxB,CAAb;AACAd,MAAAA,GAAG,CAACe,WAAJ,CAAgBN,MAAhB;;AACA,UAAIO,GAAG,GAAG,KAAI,CAAC3C,aAAL,CAAmB4C,oBAAnB,CAAwCjB,GAAG,CAACkB,qBAAJ,CAA0BzD,EAAE,CAACmD,EAAH,CAAM,CAAN,EAAS,CAAT,CAA1B,CAAxC,CAAV;;AACAZ,MAAAA,GAAG,CAACQ,MAAJ,GAAa,KAAI,CAACnC,aAAlB;AACA2B,MAAAA,GAAG,CAACe,WAAJ,CAAgBC,GAAhB;AACH,KATD;;AAUA,SAAKnD,QAAL,CAAc+B,cAAd,CAA6B,WAA7B,EAA0CC,QAA1C,CAAmDC,OAAnD,CAA2D,UAAAC,OAAO,EAAI;AAClE,UAAIC,GAAG,GAAGvC,EAAE,CAACwC,WAAH,CAAe,KAAI,CAAChC,cAApB,CAAV;AACA,UAAIkD,IAAI,GAAGnB,GAAG,CAACE,YAAJ,CAAiBzC,EAAE,CAAC2D,kBAApB,CAAX;AACAD,MAAAA,IAAI,CAACE,IAAL,GAAY5D,EAAE,CAAC4D,IAAH,CAAQtB,OAAO,CAACuB,KAAhB,EAAuBvB,OAAO,CAACwB,MAA/B,CAAZ;AACAJ,MAAAA,IAAI,CAACK,MAAL,GAAc/D,EAAE,CAACmD,EAAH,CAAMb,OAAO,CAACuB,KAAR,GAAgB,CAAtB,EAAyB,CAACvB,OAAO,CAACwB,MAAT,GAAkB,CAA3C,CAAd;AACAJ,MAAAA,IAAI,CAACM,KAAL;;AACA,MAAA,KAAI,CAACnD,eAAL,CAAqBoD,QAArB,CAA8B1B,GAA9B;;AACAA,MAAAA,GAAG,CAACe,WAAJ,CAAgBtD,EAAE,CAACmD,EAAH,CAAMb,OAAO,CAACc,CAAd,EAAiBd,OAAO,CAACe,CAAzB,CAAhB;AACAK,MAAAA,IAAI,CAACQ,GAAL,GAAWC,IAAI,CAACC,QAAhB;AACH,KATD;;AAUA,SAAKhE,QAAL,CAAc+B,cAAd,CAA6B,KAA7B,EAAoCC,QAApC,CAA6CC,OAA7C,CAAqD,UAAAC,OAAO,EAAI;AAC5D;AACA,UAAIC,GAAG,GAAGvC,EAAE,CAACwC,WAAH,CAAe,KAAI,CAAC/B,gBAApB,CAAV;AACA8B,MAAAA,GAAG,CAACQ,MAAJ,GAAa,KAAI,CAAClC,eAAlB;AACA,UAAImC,MAAM,GAAGf,SAAS,CAACgB,aAAV,CAAwB,KAAI,CAACC,UAAL,CAAgBlD,EAAE,CAACmD,EAAH,CAAMb,OAAO,CAACc,CAAd,EAAiBd,OAAO,CAACe,CAAzB,CAAhB,CAAxB,CAAb;AACAd,MAAAA,GAAG,CAACe,WAAJ,CAAgBN,MAAhB;;AACA,UAAIO,GAAG,GAAG,KAAI,CAACzC,UAAL,CAAgB0C,oBAAhB,CAAqCjB,GAAG,CAACkB,qBAAJ,CAA0BzD,EAAE,CAACmD,EAAH,CAAM,CAAN,EAAS,CAAT,CAA1B,CAArC,CAAV;;AACAZ,MAAAA,GAAG,CAACQ,MAAJ,GAAa,KAAI,CAACjC,UAAlB;AACAyB,MAAAA,GAAG,CAACe,WAAJ,CAAgBC,GAAhB;AACA,UAAIc,MAAM,GAAG;AACTC,QAAAA,KAAK,EAAEC,QAAQ,CAACC,MADP;AAETC,QAAAA,KAAK,EAAEC,KAAK,CAACC,SAAN,CAAgB,CAAhB,EAAmB,CAAnB;AAFE,OAAb;AAIApC,MAAAA,GAAG,CAACE,YAAJ,CAAiB,YAAjB,EAA+BmC,IAA/B,CAAoCP,MAApC;AACAzC,MAAAA,OAAO,CAACC,WAAR,CAAoBC,UAApB,CAA+BE,SAA/B,CAAyC6C,IAAzC,CAA8CtC,GAA9C;AACH,KAfD;AAiBH,GA/EI;AAgFL;AACAW,EAAAA,UAjFK,sBAiFM4B,UAjFN,EAiFkB;AACnB,QAAIC,OAAO,GAAG,KAAK3E,QAAL,CAAc4E,IAAd,CAAmBC,cAAnB,EAAd;AACA,QAAIC,QAAQ,GAAG,KAAK9E,QAAL,CAAc+E,WAAd,EAAf;AACA,QAAI/B,CAAC,GAAGgC,IAAI,CAACC,KAAL,CAAWP,UAAU,CAAC1B,CAAX,GAAe8B,QAAQ,CAACrB,KAAnC,CAAR;AACA,QAAIR,CAAC,GAAG+B,IAAI,CAACC,KAAL,CAAW,CAACN,OAAO,CAACjB,MAAR,GAAiBgB,UAAU,CAACzB,CAA7B,IAAkC6B,QAAQ,CAACpB,MAAtD,CAAR;AACA,WAAO9D,EAAE,CAACmD,EAAH,CAAMC,CAAN,EAASC,CAAT,CAAP;AACH,GAvFI;AAwFL9B,EAAAA,UAxFK,wBAwFQ;AAAA;;AACTK,IAAAA,OAAO,CAAC0D,SAAR,CAAkBC,cAAlB,CAAiC,QAAjC,EAA2C,UAACP,IAAD,EAAU;AACjD;AACA;AACA,UAAIQ,CAAC,GAAGR,IAAI,CAACvC,YAAL,CAAkB,QAAlB,CAAR;AACAb,MAAAA,OAAO,CAAC0D,SAAR,CAAkBG,KAAlB,CAAwB,WAAxB,EAAqChD,YAArC,CAAkD,WAAlD,EAA+DiD,QAA/D,CAAwEjD,YAAxE,CAAqF,UAArF,EAAiGkD,MAAjG,GAA0GH,CAA1G;AACAA,MAAAA,CAAC,CAACZ,IAAF;AACAhD,MAAAA,OAAO,CAACC,WAAR,CAAoBC,UAApB,CAA+BC,UAA/B,CAA0C8C,IAA1C,CAA+CW,CAA/C;AACA,MAAA,MAAI,CAACpE,WAAL,GAAmB,IAAnB;AACH,KARD,EAQG,KAAKR,aARR;AASH,GAlGI;AAmGLY,EAAAA,SAnGK,uBAmGO;AACR,QAAIoE,UAAU,GAAG,EAAjB;AACA,QAAIC,WAAW,GAAG,KAAK9E,sBAAL,CAA4B+E,QAA9C,CAFQ,CAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAIC,MAAM,GAAG5B,IAAI,CAAC6B,KAAlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,UAAIA,CAAC,GAAG,CAAJ,IAASrE,OAAO,CAACC,WAAR,CAAoBqE,QAApB,CAA6BC,aAA1C,EAAyD;AACrD;AACH;;AACDvE,MAAAA,OAAO,CAAC0D,SAAR,CAAkBC,cAAlB,CAAiC,OAAjC,EAA0C,UAACP,IAAD,EAAU;AAChD;AACAA,QAAAA,IAAI,CAACvC,YAAL,CAAkBzC,EAAE,CAAC2D,kBAArB,EAAyCO,GAAzC,GAA+C6B,MAAM,EAArD;AACAf,QAAAA,IAAI,CAAC1B,WAAL,CAAiBtD,EAAE,CAACmD,EAAH,CAAMuB,KAAK,CAACC,SAAN,CAAgBkB,WAAW,CAAC,CAAD,CAAX,CAAezC,CAA/B,EAAkCyC,WAAW,CAAC,CAAD,CAAX,CAAezC,CAAjD,CAAN,EAA2DsB,KAAK,CAACC,SAAN,CAAgBkB,WAAW,CAAC,CAAD,CAAX,CAAexC,CAA/B,EAAkCwC,WAAW,CAAC,CAAD,CAAX,CAAexC,CAAjD,CAA3D,CAAjB;AACA,YAAImC,CAAC,GAAGR,IAAI,CAACvC,YAAL,CAAkB,OAAlB,CAAR;AACA+C,QAAAA,CAAC,CAACZ,IAAF,CAAOqB,CAAC,GAAG,CAAX,EAAcrE,OAAO,CAACC,WAAR,CAAoBuE,QAApB,CAA6BC,SAA7B,CAAuCJ,CAAvC,CAAd;AACArE,QAAAA,OAAO,CAACC,WAAR,CAAoBC,UAApB,CAA+BC,UAA/B,CAA0C8C,IAA1C,CAA+CW,CAA/C;AACH,OAPD,EAOG,KAAK5E,aAPR;AAQH,KAjCO,CAkCR;;;AACA,QAAI0F,IAAI,GAAG,YAAY;AACnB,UAAIL,CAAC,IAAI,EAAT,EAAa;;AACb,UAAIA,CAAC,GAAG,CAAJ,IAASrE,OAAO,CAACC,WAAR,CAAoBqE,QAApB,CAA6BC,aAA1C,EAAyD,CAExD,CAFD,MAEO;AACHvE,QAAAA,OAAO,CAAC0D,SAAR,CAAkBC,cAAlB,CAAiC,OAAjC,EAA0C,UAACP,IAAD,EAAU;AAChD;AACAA,UAAAA,IAAI,CAACvC,YAAL,CAAkBzC,EAAE,CAAC2D,kBAArB,EAAyCO,GAAzC,GAA+C6B,MAAM,EAArD;AACAf,UAAAA,IAAI,CAAC1B,WAAL,CAAiBtD,EAAE,CAACmD,EAAH,CAAMuB,KAAK,CAACC,SAAN,CAAgBkB,WAAW,CAAC,CAAD,CAAX,CAAezC,CAA/B,EAAkCyC,WAAW,CAAC,CAAD,CAAX,CAAezC,CAAjD,CAAN,EAA2DsB,KAAK,CAACC,SAAN,CAAgBkB,WAAW,CAAC,CAAD,CAAX,CAAexC,CAA/B,EAAkCwC,WAAW,CAAC,CAAD,CAAX,CAAexC,CAAjD,CAA3D,CAAjB;AACA,cAAImC,CAAC,GAAGR,IAAI,CAACvC,YAAL,CAAkB,OAAlB,CAAR;AACA+C,UAAAA,CAAC,CAACZ,IAAF,CAAOqB,CAAC,GAAG,CAAX,EAAcrE,OAAO,CAACC,WAAR,CAAoBuE,QAApB,CAA6BC,SAA7B,CAAuCJ,CAAvC,CAAd;AACArE,UAAAA,OAAO,CAACC,WAAR,CAAoBC,UAApB,CAA+BC,UAA/B,CAA0C8C,IAA1C,CAA+CW,CAA/C;AACA5D,UAAAA,OAAO,CAAC2E,YAAR,CAAqBC,IAArB,CAA0BC,UAAU,CAACC,wBAArC;AACH,SARD,EAQG,KAAK9F,aARR;AASH;;AACDqF,MAAAA,CAAC;AACJ,KAhBU,CAgBTU,IAhBS,CAgBJ,IAhBI,CAAX;;AAiBA,SAAKC,QAAL,CAAcN,IAAd,EAAoB,GAApB,EAAyB,EAAzB,EAA6B,CAA7B,EApDQ,CAoDwB;AACnC,GAxJI;AAyJL3E,EAAAA,OAzJK,qBAyJK;AACN,QAAIkF,WAAW,GAAG,KAAKjG,aAAL,CAAmBkF,QAAnB,CAA4BgB,MAA5B,EAAlB;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIf,CAAT,IAAcY,WAAd,EAA2B;AACvB,UAAIjF,OAAO,CAAC0D,SAAR,CAAkB2B,YAAlB,CAA+BJ,WAAW,CAACZ,CAAD,CAA1C,CAAJ,EAAoD;AAChDc,QAAAA,QAAQ,CAAClC,IAAT,CAAc;AACVxB,UAAAA,CAAC,EAAEwD,WAAW,CAACZ,CAAD,CAAX,CAAe5C,CADR;AAEV6D,UAAAA,KAAK,EAAEjB;AAFG,SAAd;AAIAe,QAAAA,SAAS,CAACnC,IAAV,CAAeoB,CAAf;AACH;AACJ,KAZK,CAaN;;;AACAc,IAAAA,QAAQ,CAACI,IAAT,CAAc,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUA,CAAC,CAAChE,CAAF,GAAM+D,CAAC,CAAC/D,CAAlB;AAAA,KAAd;;AACA,SAAK,IAAI4C,EAAT,IAAcc,QAAd,EAAwB;AACpBF,MAAAA,WAAW,CAACE,QAAQ,CAACd,EAAD,CAAR,CAAYiB,KAAb,CAAX,CAA+BI,eAA/B,CAA+CN,SAAS,CAACf,EAAD,CAAxD;AACH,KAjBK,CAkBN;AACA;;AACH;AA7KI,CAAT","sourceRoot":"/","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        tiledMap: cc.TiledMap,\r\n        objectPrefab: cc.Prefab,\r\n        colliderPrefab: cc.Prefab,\r\n        groundItemPrefab: cc.Prefab,\r\n\r\n        waitLabel: cc.Node,\r\n        allObjectNode: cc.Node,\r\n        allColliderNode: cc.Node,\r\n        allGunNode: cc.Node,\r\n        enemySpawnPosGroupNode: cc.Node,\r\n\r\n        mapAtlas: cc.SpriteAtlas,\r\n\r\n        _timer0: 0.1,\r\n        _timer: 0.1,\r\n        readyToSort: false\r\n    },\r\n\r\n\r\n    onLoad() {\r\n        this.initMapShow()\r\n        this.showPlayer()\r\n        this.showEnemy()\r\n    },\r\n    update(dt) {\r\n        if (!this.readyToSort) return;\r\n        this._timer -= dt\r\n        if (this._timer < 0) {\r\n            this._timer = this._timer0\r\n            this.sortAll()\r\n        }\r\n\r\n    },\r\n    initMapShow() {\r\n        GameApp.dataManager.globalData.allRoleArr = []\r\n        GameApp.dataManager.globalData.allGunArr = []\r\n        // this.node.children[2].active = true\r\n        let wallLayer = this.tiledMap.getLayer(\"wall\")\r\n        this.tiledMap.getObjectGroup(\"dynamic\")._objects.forEach(element => {\r\n            let obj = cc.instantiate(this.objectPrefab)\r\n            obj.getComponent(cc.Sprite).spriteFrame = this.mapAtlas.getSpriteFrame(element.name.split('.')[0])\r\n            obj.parent = this.allColliderNode\r\n            let desPos = wallLayer.getPositionAt(this.getTilePos(cc.v2(element.x, element.y)))\r\n            obj.setPosition(desPos)\r\n            let ddd = this.allObjectNode.convertToNodeSpaceAR(obj.convertToWorldSpaceAR(cc.v2(0, 0)))\r\n            obj.parent = this.allObjectNode\r\n            obj.setPosition(ddd)\r\n        });\r\n        this.tiledMap.getObjectGroup(\"collision\")._objects.forEach(element => {\r\n            let obj = cc.instantiate(this.colliderPrefab)\r\n            let coli = obj.getComponent(cc.PhysicsBoxCollider)\r\n            coli.size = cc.size(element.width, element.height)\r\n            coli.offset = cc.v2(element.width / 2, -element.height / 2)\r\n            coli.apply()\r\n            this.allColliderNode.addChild(obj)\r\n            obj.setPosition(cc.v2(element.x, element.y))\r\n            coli.tag = Tags.collider\r\n        });\r\n        this.tiledMap.getObjectGroup(\"gun\")._objects.forEach(element => {\r\n            // var element = this.tiledMap.getObjectGroup(\"gun\")._objects[0]\r\n            let obj = cc.instantiate(this.groundItemPrefab)\r\n            obj.parent = this.allColliderNode\r\n            let desPos = wallLayer.getPositionAt(this.getTilePos(cc.v2(element.x, element.y)))\r\n            obj.setPosition(desPos)\r\n            let ddd = this.allGunNode.convertToNodeSpaceAR(obj.convertToWorldSpaceAR(cc.v2(0, 0)))\r\n            obj.parent = this.allGunNode\r\n            obj.setPosition(ddd)\r\n            let _param = {\r\n                _type: ItemType.weapon,\r\n                _kind: Tools.randomNum(0, 5)\r\n            }\r\n            obj.getComponent('GroundItem').init(_param)\r\n            GameApp.dataManager.globalData.allGunArr.push(obj)\r\n        });\r\n\r\n    },\r\n    //将像素坐标转化为瓦片坐标，posInPixel：目标节点的position\r\n    getTilePos(posInPixel) {\r\n        var mapSize = this.tiledMap.node.getContentSize();\r\n        var tileSize = this.tiledMap.getTileSize();\r\n        var x = Math.floor(posInPixel.x / tileSize.width);\r\n        var y = Math.floor((mapSize.height - posInPixel.y) / tileSize.height);\r\n        return cc.v2(x, y);\r\n    },\r\n    showPlayer() {\r\n        GameApp.uiManager.showGameObject('Player', (node) => {\r\n            // GameApp.dataManager.globalData.allRoleArr.push(node)\r\n            // node.setPosition(0, 0)\r\n            var c = node.getComponent(\"Player\")\r\n            GameApp.uiManager.getUI(\"PrepareUI\").getComponent(\"PrepareUI\").joystick.getComponent(\"Joystick\").player = c\r\n            c.init()\r\n            GameApp.dataManager.globalData.allRoleArr.push(c)\r\n            this.readyToSort = true\r\n        }, this.allObjectNode)\r\n    },\r\n    showEnemy() {\r\n        var tempPosArr = []\r\n        var standardArr = this.enemySpawnPosGroupNode.children\r\n        // var xRangeArr = []\r\n        // var eachSpaceX = (standardArr[1].x - standardArr[0].x) / 6\r\n        // for (let i = 0; i < 7; i++) {\r\n        //     xRangeArr.push(standardArr[0].x + eachSpaceX * i)\r\n        // }\r\n        // var yRangeArr = []\r\n        // var eachSpaceY = (standardArr[2].y - standardArr[0].y) / 5\r\n        // for (let i = 0; i < 6; i++) {\r\n        //     yRangeArr.push(standardArr[0].y + eachSpaceY * i)\r\n        // }\r\n        // for (let i = 0; i < xRangeArr.length; i++) {\r\n        //     for (let j = 0; j < yRangeArr.length; j++) {\r\n        //         tempPosArr.push(cc.v2(xRangeArr[i], yRangeArr[j]))\r\n        //     }\r\n        // }\r\n\r\n        // tempPosArr = Tools.getRandomAmountElementUnRepeat(tempPosArr, 30)\r\n        var tagNum = Tags.enemy\r\n        for (var i = 0; i < 5; i++) {\r\n            if (i + 1 == GameApp.dataManager.userData.choosedSkinId) {\r\n                continue;\r\n            }\r\n            GameApp.uiManager.showGameObject('Enemy', (node) => {\r\n                // GameApp.dataManager.globalData.allRoleArr.push(node)\r\n                node.getComponent(cc.PhysicsBoxCollider).tag = tagNum++\r\n                node.setPosition(cc.v2(Tools.randomNum(standardArr[0].x, standardArr[1].x), Tools.randomNum(standardArr[2].y, standardArr[0].y)))\r\n                var c = node.getComponent(\"Enemy\")\r\n                c.init(i + 1, GameApp.dataManager.jsonData.RobotName[i])\r\n                GameApp.dataManager.globalData.allRoleArr.push(c)\r\n            }, this.allObjectNode)\r\n        }\r\n        // var index = 0\r\n        var func = function () {\r\n            if (i == 30) return\r\n            if (i + 1 == GameApp.dataManager.userData.choosedSkinId) {\r\n\r\n            } else {\r\n                GameApp.uiManager.showGameObject('Enemy', (node) => {\r\n                    // GameApp.dataManager.globalData.allRoleArr.push(node)\r\n                    node.getComponent(cc.PhysicsBoxCollider).tag = tagNum++\r\n                    node.setPosition(cc.v2(Tools.randomNum(standardArr[0].x, standardArr[1].x), Tools.randomNum(standardArr[2].y, standardArr[0].y)))\r\n                    var c = node.getComponent(\"Enemy\")\r\n                    c.init(i + 1, GameApp.dataManager.jsonData.RobotName[i])\r\n                    GameApp.dataManager.globalData.allRoleArr.push(c)\r\n                    GameApp.eventManager.emit(EventNames.EVENT_SHOW_ALLROLENUM_UI)\r\n                }, this.allObjectNode)\r\n            }\r\n            i++\r\n        }.bind(this)\r\n        this.schedule(func, 0.5, 25, 0) // 0.5\r\n    },\r\n    sortAll() {\r\n        var cloneObjArr = this.allObjectNode.children.concat()\r\n        var tempDict = []\r\n        var tempIndex = []\r\n        for (let i in cloneObjArr) {\r\n            if (GameApp.uiManager.isInMapSight(cloneObjArr[i])) {\r\n                tempDict.push({\r\n                    y: cloneObjArr[i].y,\r\n                    index: i\r\n                })\r\n                tempIndex.push(i)\r\n            }\r\n        }\r\n        // console.log(tempDict)\r\n        tempDict.sort((a, b) => b.y - a.y)\r\n        for (let i in tempDict) {\r\n            cloneObjArr[tempDict[i].index].setSiblingIndex(tempIndex[i])\r\n        }\r\n        // console.log(tempDict)\r\n        // console.log(this.allObjectNode.children)\r\n    }\r\n});\r\n\r\n\r\n"]}