{"version":3,"sources":["assets\\scripts\\manager\\ConfigManager.js"],"names":["paths","ConfigManager","allConfigs","loadConfig","_name","_call","path","cc","loader","loadRes","err","res","console","log","error","message","tempData","bind","loadAllConfig","key","hasOwnProperty","getAllConfig","module","exports"],"mappings":";;;;;;AAAA,IAAMA,KAAK,GAAG;AACV,UAAQ;AADE,CAAd;AAIA,IAAIC,aAAa,GAAG;AAChBC,EAAAA,UAAU,EAAE,EADI;AAEhBC,EAAAA,UAAU,EAAE,oBAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AAEhC,QAAIC,IAAI,GAAGN,KAAK,CAACI,KAAD,CAAhB;AACAG,IAAAA,EAAE,CAACC,MAAH,CAAUC,OAAV,CAAkBH,IAAlB,EAAwB,UAAUI,GAAV,EAAeC,GAAf,EAAoB;AACxC,UAAID,GAAJ,EAAS;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,QAAAA,OAAO,CAACE,KAAR,CAAcJ,GAAG,CAACK,OAAJ,IAAeL,GAA7B;AACA;AACH;;AACD,UAAIM,QAAQ,GAAGL,GAAf;AAEA,WAAKT,UAAL,CAAgBE,KAAhB,IAAyBY,QAAzB;AACAX,MAAAA,KAAK,IAAIA,KAAK,EAAd,CATwC,CAUxC;AACH,KAXuB,CAWtBY,IAXsB,CAWjB,IAXiB,CAAxB;AAYH,GAjBe;AAkBhBC,EAAAA,aAAa,EAAE,uBAAUb,KAAV,EAAiB;AAC5B,SAAK,IAAMc,GAAX,IAAkBnB,KAAlB,EAAyB;AACrB,UAAIA,KAAK,CAACoB,cAAN,CAAqBD,GAArB,CAAJ,EAA+B;AAC3B;AACA,aAAKhB,UAAL,CAAgBgB,GAAhB,EAAqBd,KAArB;AACH;AACJ;AACJ,GAzBe;AA0BhBgB,EAAAA,YAAY,EAAE,wBAAY;AACtB,WAAO,KAAKnB,UAAZ;AACH;AA5Be,CAApB;AA+BAoB,MAAM,CAACC,OAAP,GAAiBtB,aAAjB","sourceRoot":"/","sourcesContent":["const paths = {\r\n    \"Skin\": 'data/skins.json',\r\n};\r\n\r\nvar ConfigManager = {\r\n    allConfigs: {},\r\n    loadConfig: function (_name, _call) {\r\n\r\n        var path = paths[_name];\r\n        cc.loader.loadRes(path, function (err, res) {\r\n            if (err) {\r\n                console.log(\"加载出错了\")\r\n                console.error(err.message || err);\r\n                return;\r\n            }\r\n            var tempData = res;\r\n\r\n            this.allConfigs[_name] = tempData;\r\n            _call && _call()\r\n            // console.log(JSON.parse(JSON.stringify(res)));\r\n        }.bind(this));\r\n    },\r\n    loadAllConfig: function (_call) {\r\n        for (const key in paths) {\r\n            if (paths.hasOwnProperty(key)) {\r\n                // const element = paths[key];\r\n                this.loadConfig(key, _call);\r\n            }\r\n        }\r\n    },\r\n    getAllConfig: function () {\r\n        return this.allConfigs;\r\n    },\r\n\r\n};\r\nmodule.exports = ConfigManager;"]}