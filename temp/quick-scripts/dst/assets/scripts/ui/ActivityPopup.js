
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/ActivityPopup.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '333caQGbP1Ar6WkFo6uBN3w', 'ActivityPopup');
// scripts/ui/ActivityPopup.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    page1: cc.Node,
    page2: cc.Node,
    btn1: cc.Node,
    btn2: cc.Node,
    activeProgress: cc.ProgressBar,
    progressBtnGroup: cc.Node,
    activeUI: cc.Label,
    curPageIndex: 0,
    onLineTaskNum: [],
    activityTaskNum: [],
    activityCoinNum: []
  },
  onLoad: function onLoad() {
    var a = GameApp.dataManager.globalData.onLineGiftCurNum;
    this.onLineTaskNum = [a - 10, a - 5, a];
    this.activityTaskNum = GameApp.dataManager.globalData.activityCurNum.concat();
    this.activityCoinNum = GameApp.dataManager.globalData.activityCurCoin.concat();
    this.btn1Click();
  },
  btn1Click: function btn1Click(eventTouch) {
    if (this.curPageIndex == 1 && eventTouch) return;
    this.curPageIndex = 1;
    eventTouch && GameApp.audioManager.playEffect('click');
    this.btn1.children[0].active = false;
    this.btn1.children[1].active = true;
    this.btn2.children[0].active = true;
    this.btn2.children[1].active = false;
    this.page2.active = false;
    this.showPage1();
  },
  btn2Click: function btn2Click(eventTouch) {
    if (this.curPageIndex == 2 && eventTouch) return;
    this.curPageIndex = 2;
    eventTouch && GameApp.audioManager.playEffect('click');
    this.btn1.children[0].active = true;
    this.btn1.children[1].active = false;
    this.btn2.children[0].active = false;
    this.btn2.children[1].active = true;
    this.page1.active = false;
    this.showPage2();
  },
  updateOnlineTask: function updateOnlineTask() {
    var finishAll = true;

    for (var i in this.page1.children) {
      if (GameApp.dataManager.getOnLineGiftsState(i) != 2) {
        finishAll = false;
        break;
      }
    }

    if (finishAll) {
      GameApp.dataManager.globalData.onLineGiftCurNum += 15;
      cc.sys.localStorage.setItem("EatChicken_onLineGiftCurNum", GameApp.dataManager.globalData.onLineGiftCurNum);
      var a = GameApp.dataManager.globalData.onLineGiftCurNum;
      this.onLineTaskNum = [a - 10, a - 5, a];
      GameApp.dataManager.setOnLineGiftsState(0, TaskState.Unfinish);
      GameApp.dataManager.setOnLineGiftsState(1, TaskState.Unfinish);
      GameApp.dataManager.setOnLineGiftsState(2, TaskState.Unfinish);
    }

    this.updateOnLineTaskShow();
  },
  updateOnLineTaskShow: function updateOnLineTaskShow() {
    for (var i in this.page1.children) {
      this.page1.children[i].children[0].children[0].getComponent(cc.Label).string = "累计游戏在线" + this.onLineTaskNum[i] + "分钟";
      this.page1.children[i].children[0].children[1].children[0].getComponent(cc.Label).string = this.onLineTaskNum[i];
    }

    this.updateOnlineTaskBtnShow();
  },
  updateOnlineTaskBtnShow: function updateOnlineTaskBtnShow() {
    var _minuteTime = GameApp.dataManager.getOnlineTimeMinute();

    for (var i in this.page1.children) {
      switch (GameApp.dataManager.getOnLineGiftsState(i)) {
        case 0:
          if (_minuteTime >= this.onLineTaskNum[i]) {
            GameApp.dataManager.setOnLineGiftsState(i, TaskState.Canget);
            this.page1.children[i].children[1].children[0].active = false;
            this.page1.children[i].children[1].children[1].active = true;
            this.page1.children[i].children[1].children[2].active = false;
          } else {
            this.page1.children[i].children[1].children[0].active = true;
            this.page1.children[i].children[1].children[1].active = false;
            this.page1.children[i].children[1].children[2].active = false;
          }

          break;

        case 1:
          this.page1.children[i].children[1].children[0].active = false;
          this.page1.children[i].children[1].children[1].active = true;
          this.page1.children[i].children[1].children[2].active = false;
          break;

        case 2:
          this.page1.children[i].children[1].children[0].active = false;
          this.page1.children[i].children[1].children[1].active = false;
          this.page1.children[i].children[1].children[2].active = true;
          break;
      }
    }
  },
  updateActivityTask: function updateActivityTask() {
    for (var i in this.activityTaskNum) {
      if (GameApp.dataManager.getActivityGiftsState(i) == 2) {
        GameApp.dataManager.globalData.activityCurNum[i] += GameApp.dataManager.globalData.activityAddNum[i];
        cc.sys.localStorage.setItem("EatChicken_activityCurNum", JSON.stringify(GameApp.dataManager.globalData.activityCurNum));
        GameApp.dataManager.globalData.activityCurCoin[i] += GameApp.dataManager.globalData.activityAddCoin[i];
        cc.sys.localStorage.setItem("EatChicken_activityCurCoin", JSON.stringify(GameApp.dataManager.globalData.activityCurCoin));
        GameApp.dataManager.setActivityGiftsState(i, TaskState.Unfinish);
      }
    }

    this.activityTaskNum = GameApp.dataManager.globalData.activityCurNum.concat();
    this.activityCoinNum = GameApp.dataManager.globalData.activityCurCoin.concat();
    this.updateActivityTaskShow();
  },
  updateActivityTaskShow: function updateActivityTaskShow() {
    var arr1 = ["累计使用手枪击杀" + this.activityTaskNum[0] + "人", "累计击杀" + this.activityTaskNum[1] + "人", "累计吃鸡" + this.activityTaskNum[2] + "局"];

    for (var i in this.activityTaskNum) {
      this.page2.children[i].children[0].children[0].getComponent(cc.Label).string = arr1[i];
      this.page2.children[i].children[0].children[1].children[0].getComponent(cc.Label).string = this.activityCoinNum[i];
    }

    this.updateActivityTaskBtnShow();
  },
  updateActivityTaskBtnShow: function updateActivityTaskBtnShow() {
    for (var i in this.activityTaskNum) {
      switch (GameApp.dataManager.getActivityGiftsState(i)) {
        case 0:
          if (GameApp.dataManager.globalData.activityNum[i] >= this.activityTaskNum[i]) {
            GameApp.dataManager.setActivityGiftsState(i, TaskState.Canget);
            this.page2.children[i].children[1].children[0].active = false;
            this.page2.children[i].children[1].children[1].active = true;
            this.page2.children[i].children[1].children[2].active = false;
          } else {
            this.page2.children[i].children[1].children[0].active = true;
            this.page2.children[i].children[1].children[1].active = false;
            this.page2.children[i].children[1].children[2].active = false;
          }

          break;

        case 1:
          this.page2.children[i].children[1].children[0].active = false;
          this.page2.children[i].children[1].children[1].active = true;
          this.page2.children[i].children[1].children[2].active = false;
          break;

        case 2:
          this.page2.children[i].children[1].children[0].active = false;
          this.page2.children[i].children[1].children[1].active = false;
          this.page2.children[i].children[1].children[2].active = true;
          break;
      }
    }
  },
  showPage1: function showPage1() {
    this.updateOnlineTask();
    this.page1.active = true;
  },
  showPage2: function showPage2() {
    this.updateActivityTask();
    this.updateProgressShow();
    this.updateProgressBtnShow();
    this.page2.active = true;
  },
  onLineTaskBtnClick: function onLineTaskBtnClick(eventTouch, customEventData) {
    var selectId = parseInt(customEventData);

    if (GameApp.dataManager.getOnLineGiftsState(selectId - 1) == 1) {
      GameApp.dataManager.setOnLineGiftsState(selectId - 1, TaskState.Got);
      GameApp.dataManager.addCoin(this.onLineTaskNum[selectId - 1]);
      GameApp.uiManager.showToast("获得金币*" + this.onLineTaskNum[selectId - 1]);
      this.updateOnlineTaskBtnShow();
    }
  },
  activityTaskBtnClick: function activityTaskBtnClick(eventTouch, customEventData) {
    var selectId = parseInt(customEventData);

    if (GameApp.dataManager.getActivityGiftsState(selectId - 1) == 1) {
      GameApp.dataManager.setActivityGiftsState(selectId - 1, TaskState.Got);
      GameApp.dataManager.addCoin(this.activityCoinNum[selectId - 1]);
      GameApp.dataManager.addActiveValue(20);
      this.updateProgressShow();
      GameApp.uiManager.showToast("获得金币*" + this.activityCoinNum[selectId - 1]);
      this.updateActivityTaskBtnShow();
    }
  },
  updateProgressShow: function updateProgressShow() {
    this.activeProgress.progress = GameApp.dataManager.globalData.activeValue / 120;
    this.activeUI.string = GameApp.dataManager.globalData.activeValue;
  },
  progressBtnClick: function progressBtnClick(eventTouch, customEventData) {
    var selectId = parseInt(customEventData);

    if (GameApp.dataManager.globalData.progressGifts[selectId - 1] == 1) {
      GameApp.audioManager.playEffect('click');
      var arr = [30, 60, 90, 120];
      var arr2 = [100, 200, 300, 400]; // if (GameApp.dataManager.activeValue >= arr[selectId - 1]) {

      GameApp.dataManager.addCoin(arr2[selectId - 1]);
      GameApp.uiManager.showToast("获得金币*" + arr2[selectId - 1]);
      GameApp.dataManager.setProgressGifts(selectId - 1, 2);
      this.updateProgressBtnShow(); // }
    }
  },
  updateProgressBtnShow: function updateProgressBtnShow() {
    var arr = [30, 60, 90, 120];

    for (var i in arr) {
      if (GameApp.dataManager.globalData.progressGifts[i] == 0) {
        if (GameApp.dataManager.globalData.activeValue >= arr[i]) {
          GameApp.dataManager.setProgressGifts(i, 1);
        }
      }
    }

    for (var i in this.progressBtnGroup.children) {
      if (GameApp.dataManager.globalData.progressGifts[i] == 2) {
        this.progressBtnGroup.children[i].children[0].active = false;
        this.progressBtnGroup.children[i].children[1].active = true;
      } else {
        this.progressBtnGroup.children[i].children[0].active = true;
        this.progressBtnGroup.children[i].children[1].active = false;
      }
    }
  },
  closeBtnClick: function closeBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.eventManager.emit(EventNames.EVENT_SHOW_ACTIVITYBTN);
    this.node.destroy();
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlcXEFjdGl2aXR5UG9wdXAuanMiXSwibmFtZXMiOlsiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJwYWdlMSIsIk5vZGUiLCJwYWdlMiIsImJ0bjEiLCJidG4yIiwiYWN0aXZlUHJvZ3Jlc3MiLCJQcm9ncmVzc0JhciIsInByb2dyZXNzQnRuR3JvdXAiLCJhY3RpdmVVSSIsIkxhYmVsIiwiY3VyUGFnZUluZGV4Iiwib25MaW5lVGFza051bSIsImFjdGl2aXR5VGFza051bSIsImFjdGl2aXR5Q29pbk51bSIsIm9uTG9hZCIsImEiLCJHYW1lQXBwIiwiZGF0YU1hbmFnZXIiLCJnbG9iYWxEYXRhIiwib25MaW5lR2lmdEN1ck51bSIsImFjdGl2aXR5Q3VyTnVtIiwiY29uY2F0IiwiYWN0aXZpdHlDdXJDb2luIiwiYnRuMUNsaWNrIiwiZXZlbnRUb3VjaCIsImF1ZGlvTWFuYWdlciIsInBsYXlFZmZlY3QiLCJjaGlsZHJlbiIsImFjdGl2ZSIsInNob3dQYWdlMSIsImJ0bjJDbGljayIsInNob3dQYWdlMiIsInVwZGF0ZU9ubGluZVRhc2siLCJmaW5pc2hBbGwiLCJpIiwiZ2V0T25MaW5lR2lmdHNTdGF0ZSIsInN5cyIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJzZXRPbkxpbmVHaWZ0c1N0YXRlIiwiVGFza1N0YXRlIiwiVW5maW5pc2giLCJ1cGRhdGVPbkxpbmVUYXNrU2hvdyIsImdldENvbXBvbmVudCIsInN0cmluZyIsInVwZGF0ZU9ubGluZVRhc2tCdG5TaG93IiwiX21pbnV0ZVRpbWUiLCJnZXRPbmxpbmVUaW1lTWludXRlIiwiQ2FuZ2V0IiwidXBkYXRlQWN0aXZpdHlUYXNrIiwiZ2V0QWN0aXZpdHlHaWZ0c1N0YXRlIiwiYWN0aXZpdHlBZGROdW0iLCJKU09OIiwic3RyaW5naWZ5IiwiYWN0aXZpdHlBZGRDb2luIiwic2V0QWN0aXZpdHlHaWZ0c1N0YXRlIiwidXBkYXRlQWN0aXZpdHlUYXNrU2hvdyIsImFycjEiLCJ1cGRhdGVBY3Rpdml0eVRhc2tCdG5TaG93IiwiYWN0aXZpdHlOdW0iLCJ1cGRhdGVQcm9ncmVzc1Nob3ciLCJ1cGRhdGVQcm9ncmVzc0J0blNob3ciLCJvbkxpbmVUYXNrQnRuQ2xpY2siLCJjdXN0b21FdmVudERhdGEiLCJzZWxlY3RJZCIsInBhcnNlSW50IiwiR290IiwiYWRkQ29pbiIsInVpTWFuYWdlciIsInNob3dUb2FzdCIsImFjdGl2aXR5VGFza0J0bkNsaWNrIiwiYWRkQWN0aXZlVmFsdWUiLCJwcm9ncmVzcyIsImFjdGl2ZVZhbHVlIiwicHJvZ3Jlc3NCdG5DbGljayIsInByb2dyZXNzR2lmdHMiLCJhcnIiLCJhcnIyIiwic2V0UHJvZ3Jlc3NHaWZ0cyIsImNsb3NlQnRuQ2xpY2siLCJldmVudE1hbmFnZXIiLCJlbWl0IiwiRXZlbnROYW1lcyIsIkVWRU5UX1NIT1dfQUNUSVZJVFlCVE4iLCJub2RlIiwiZGVzdHJveSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQUEsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLEtBQUssRUFBRUosRUFBRSxDQUFDSyxJQURGO0FBRVJDLElBQUFBLEtBQUssRUFBRU4sRUFBRSxDQUFDSyxJQUZGO0FBR1JFLElBQUFBLElBQUksRUFBRVAsRUFBRSxDQUFDSyxJQUhEO0FBSVJHLElBQUFBLElBQUksRUFBRVIsRUFBRSxDQUFDSyxJQUpEO0FBS1JJLElBQUFBLGNBQWMsRUFBRVQsRUFBRSxDQUFDVSxXQUxYO0FBTVJDLElBQUFBLGdCQUFnQixFQUFFWCxFQUFFLENBQUNLLElBTmI7QUFPUk8sSUFBQUEsUUFBUSxFQUFFWixFQUFFLENBQUNhLEtBUEw7QUFRUkMsSUFBQUEsWUFBWSxFQUFFLENBUk47QUFTUkMsSUFBQUEsYUFBYSxFQUFFLEVBVFA7QUFVUkMsSUFBQUEsZUFBZSxFQUFFLEVBVlQ7QUFXUkMsSUFBQUEs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Q0FBckMsRUFBd0MsQ0FBeEM7QUFDSDtBQUNKO0FBQ0o7O0FBR0QsU0FBSyxJQUFJQSxDQUFULElBQWMsS0FBSzNCLGdCQUFMLENBQXNCb0IsUUFBcEMsRUFBOEM7QUFDMUMsVUFBSVgsT0FBTyxDQUFDQyxXQUFSLENBQW9CQyxVQUFwQixDQUErQnlELGFBQS9CLENBQTZDekMsQ0FBN0MsS0FBbUQsQ0FBdkQsRUFBMEQ7QUFDdEQsYUFBSzNCLGdCQUFMLENBQXNCb0IsUUFBdEIsQ0FBK0JPLENBQS9CLEVBQWtDUCxRQUFsQyxDQUEyQyxDQUEzQyxFQUE4Q0MsTUFBOUMsR0FBdUQsS0FBdkQ7QUFDQSxhQUFLckIsZ0JBQUwsQ0FBc0JvQixRQUF0QixDQUErQk8sQ0FBL0IsRUFBa0NQLFFBQWxDLENBQTJDLENBQTNDLEVBQThDQyxNQUE5QyxHQUF1RCxJQUF2RDtBQUNILE9BSEQsTUFHTztBQUNILGFBQUtyQixnQkFBTCxDQUFzQm9CLFFBQXRCLENBQStCTyxDQUEvQixFQUFrQ1AsUUFBbEMsQ0FBMkMsQ0FBM0MsRUFBOENDLE1BQTlDLEdBQXVELElBQXZEO0FBQ0EsYUFBS3JCLGdCQUFMLENBQXNCb0IsUUFBdEIsQ0FBK0JPLENBQS9CLEVBQWtDUCxRQUFsQyxDQUEyQyxDQUEzQyxFQUE4Q0MsTUFBOUMsR0FBdUQsS0FBdkQ7QUFDSDtBQUNKO0FBQ0osR0FsT0k7QUFvT0xtRCxFQUFBQSxhQXBPSywyQkFvT1c7QUFDWi9ELElBQUFBLE9BQU8sQ0FBQ1MsWUFBUixDQUFxQkMsVUFBckIsQ0FBZ0MsT0FBaEM7QUFDQVYsSUFBQUEsT0FBTyxDQUFDZ0UsWUFBUixDQUFxQkMsSUFBckIsQ0FBMEJDLFVBQVUsQ0FBQ0Msc0JBQXJDO0FBQ0EsU0FBS0MsSUFBTCxDQUFVQyxPQUFWO0FBQ0g7QUF4T0ksQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgcGFnZTE6IGNjLk5vZGUsXHJcbiAgICAgICAgcGFnZTI6IGNjLk5vZGUsXHJcbiAgICAgICAgYnRuMTogY2MuTm9kZSxcclxuICAgICAgICBidG4yOiBjYy5Ob2RlLFxyXG4gICAgICAgIGFjdGl2ZVByb2dyZXNzOiBjYy5Qcm9ncmVzc0JhcixcclxuICAgICAgICBwcm9ncmVzc0J0bkdyb3VwOiBjYy5Ob2RlLFxyXG4gICAgICAgIGFjdGl2ZVVJOiBjYy5MYWJlbCxcclxuICAgICAgICBjdXJQYWdlSW5kZXg6IDAsXHJcbiAgICAgICAgb25MaW5lVGFza051bTogW10sXHJcbiAgICAgICAgYWN0aXZpdHlUYXNrTnVtOiBbXSxcclxuICAgICAgICBhY3Rpdml0eUNvaW5OdW06IFtdLFxyXG4gICAgfSxcclxuXHJcbiAgICBvbkxvYWQoKSB7XHJcbiAgICAgICAgbGV0IGEgPSBHYW1lQXBwLmRhdGFNYW5hZ2VyLmdsb2JhbERhdGEub25MaW5lR2lmdEN1ck51bVxyXG4gICAgICAgIHRoaXMub25MaW5lVGFza051bSA9IFthIC0gMTAsIGEgLSA1LCBhXVxyXG4gICAgICAgIHRoaXMuYWN0aXZpdHlUYXNrTnVtID0gR2FtZUFwcC5kYXRhTWFuYWdlci5nbG9iYWxEYXRhLmFjdGl2aXR5Q3VyTnVtLmNvbmNhdCgpXHJcbiAgICAgICAgdGhpcy5hY3Rpdml0eUNvaW5OdW0gPSBHYW1lQXBwLmRhdGFNYW5hZ2VyLmdsb2JhbERhdGEuYWN0aXZpdHlDdXJDb2luLmNvbmNhdCgpXHJcbiAgICAgICAgdGhpcy5idG4xQ2xpY2soKVxyXG4gICAgfSxcclxuICAgIGJ0bjFDbGljayhldmVudFRvdWNoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuY3VyUGFnZUluZGV4ID09IDEgJiYgZXZlbnRUb3VjaCkgcmV0dXJuXHJcbiAgICAgICAgdGhpcy5jdXJQYWdlSW5kZXggPSAxXHJcbiAgICAgICAgZXZlbnRUb3VjaCAmJiBHYW1lQXBwLmF1ZGlvTWFuYWdlci5wbGF5RWZmZWN0KCdjbGljaycpXHJcbiAgICAgICAgdGhpcy5idG4xLmNoaWxkcmVuWzBdLmFjdGl2ZSA9IGZhbHNlXHJcbiAgICAgICAgdGhpcy5idG4xLmNoaWxkcmVuWzFdLmFjdGl2ZSA9IHRydWVcclxuICAgICAgICB0aGlzLmJ0bjIuY2hpbGRyZW5bMF0uYWN0aXZlID0gdHJ1ZVxyXG4gICAgICAgIHRoaXMuYnRuMi5jaGlsZHJlblsxXS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgIHRoaXMucGFnZTIuYWN0aXZlID0gZmFsc2VcclxuICAgICAgICB0aGlzLnNob3dQYWdlMSgpXHJcbiAgICB9LFxyXG4gICAgYnRuMkNsaWNrKGV2ZW50VG91Y2gpIHtcclxuICAgICAgICBpZiAodGhpcy5jdXJQYWdlSW5kZXggPT0gMiAmJiBldmVudFRvdWNoKSByZXR1cm5cclxuICAgICAgICB0aGlzLmN1clBhZ2VJbmRleCA9IDJcclxuICAgICAgICBldmVudFRvdWNoICYmIEdhbWVBcHAuYXVkaW9NYW5hZ2VyLnBsYXlFZmZlY3QoJ2NsaWNrJylcclxuICAgICAgICB0aGlzLmJ0bjEuY2hpbGRyZW5bMF0uYWN0aXZlID0gdHJ1ZVxyXG4gICAgICAgIHRoaXMuYnRuMS5jaGlsZHJlblsxXS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgIHRoaXMuYnRuMi5jaGlsZHJlblswXS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgIHRoaXMuYnRuMi5jaGlsZHJlblsxXS5hY3RpdmUgPSB0cnVlXHJcbiAgICAgICAgdGhpcy5wYWdlMS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgIHRoaXMuc2hvd1BhZ2UyKClcclxuICAgIH0sXHJcbiAgICB1cGRhdGVPbmxpbmVUYXNrKCkge1xyXG4gICAgICAgIHZhciBmaW5pc2hBbGwgPSB0cnVlXHJcbiAgICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLnBhZ2UxLmNoaWxkcmVuKSB7XHJcbiAgICAgICAgICAgIGlmIChHYW1lQXBwLmRhdGFNYW5hZ2VyLmdldE9uTGluZUdpZnRzU3RhdGUoaSkgIT0gMikge1xyXG4gICAgICAgICAgICAgICAgZmluaXNoQWxsID0gZmFsc2VcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChmaW5pc2hBbGwpIHtcclxuICAgICAgICAgICAgR2FtZUFwcC5kYXRhTWFuYWdlci5nbG9iYWxEYXRhLm9uTGluZUdpZnRDdXJOdW0gKz0gMTVcclxuICAgICAgICAgICAgY2Muc3lzLmxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiRWF0Q2hpY2tlbl9vbkxpbmVHaWZ0Q3VyTnVtXCIsIEdhbWVBcHAuZGF0YU1hbmFnZXIuZ2xvYmFsRGF0YS5vbkxpbmVHaWZ0Q3VyTnVtKTtcclxuICAgICAgICAgICAgbGV0IGEgPSBHYW1lQXBwLmRhdGFNYW5hZ2VyLmdsb2JhbERhdGEub25MaW5lR2lmdEN1ck51bVxyXG4gICAgICAgICAgICB0aGlzLm9uTGluZVRhc2tOdW0gPSBbYSAtIDEwLCBhIC0gNSwgYV1cclxuICAgICAgICAgICAgR2FtZUFwcC5kYXRhTWFuYWdlci5zZXRPbkxpbmVHaWZ0c1N0YXRlKDAsIFRhc2tTdGF0ZS5VbmZpbmlzaClcclxuICAgICAgICAgICAgR2FtZUFwcC5kYXRhTWFuYWdlci5zZXRPbkxpbmVHaWZ0c1N0YXRlKDEsIFRhc2tTdGF0ZS5VbmZpbmlzaClcclxuICAgICAgICAgICAgR2FtZUFwcC5kYXRhTWFuYWdlci5zZXRPbkxpbmVHaWZ0c1N0YXRlKDIsIFRhc2tTdGF0ZS5VbmZpbmlzaClcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy51cGRhdGVPbkxpbmVUYXNrU2hvdygpXHJcbiAgICB9LFxyXG4gICAgdXBkYXRlT25MaW5lVGFza1Nob3coKSB7XHJcbiAgICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLnBhZ2UxLmNoaWxkcmVuKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGFnZTEuY2hpbGRyZW5baV0uY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF0uZ2V0Q29tcG9uZW50KGNjLkxhYmVsKS5zdHJpbmcgPSBcIue0r+iuoea4uOaIj+WcqOe6v1wiICsgdGhpcy5vbkxpbmVUYXNrTnVtW2ldICsgXCLliIbpkp9cIlxyXG4gICAgICAgICAgICB0aGlzLnBhZ2UxLmNoaWxkcmVuW2ldLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzBdLmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nID0gdGhpcy5vbkxpbmVUYXNrTnVtW2ldXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudXBkYXRlT25saW5lVGFza0J0blNob3coKVxyXG4gICAgfSxcclxuICAgIHVwZGF0ZU9ubGluZVRhc2tCdG5TaG93KCkge1xyXG4gICAgICAgIHZhciBfbWludXRlVGltZSA9IEdhbWVBcHAuZGF0YU1hbmFnZXIuZ2V0T25saW5lVGltZU1pbnV0ZSgpXHJcbiAgICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLnBhZ2UxLmNoaWxkcmVuKSB7XHJcbiAgICAgICAgICAgIHN3aXRjaCAoR2FtZUFwcC5kYXRhTWFuYWdlci5nZXRPbkxpbmVHaWZ0c1N0YXRlKGkpKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDA6XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKF9taW51dGVUaW1lID49IHRoaXMub25MaW5lVGFza051bVtpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLnNldE9uTGluZUdpZnRzU3RhdGUoaSwgVGFza1N0YXRlLkNhbmdldClcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWdlMS5jaGlsZHJlbltpXS5jaGlsZHJlblsxXS5jaGlsZHJlblswXS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2UxLmNoaWxkcmVuW2ldLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzFdLmFjdGl2ZSA9IHRydWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWdlMS5jaGlsZHJlbltpXS5jaGlsZHJlblsxXS5jaGlsZHJlblsyXS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFnZTEuY2hpbGRyZW5baV0uY2hpbGRyZW5bMV0uY2hpbGRyZW5bMF0uYWN0aXZlID0gdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2UxLmNoaWxkcmVuW2ldLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzFdLmFjdGl2ZSA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFnZTEuY2hpbGRyZW5baV0uY2hpbGRyZW5bMV0uY2hpbGRyZW5bMl0uYWN0aXZlID0gZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2UxLmNoaWxkcmVuW2ldLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzBdLmFjdGl2ZSA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWdlMS5jaGlsZHJlbltpXS5jaGlsZHJlblsxXS5jaGlsZHJlblsxXS5hY3RpdmUgPSB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWdlMS5jaGlsZHJlbltpXS5jaGlsZHJlblsxXS5jaGlsZHJlblsyXS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWdlMS5jaGlsZHJlbltpXS5jaGlsZHJlblsxXS5jaGlsZHJlblswXS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGFnZTEuY2hpbGRyZW5baV0uY2hpbGRyZW5bMV0uY2hpbGRyZW5bMV0uYWN0aXZlID0gZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2UxLmNoaWxkcmVuW2ldLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzJdLmFjdGl2ZSA9IHRydWVcclxuICAgICAgICAgICAgICAgICAgICBicmVha1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIHVwZGF0ZUFjdGl2aXR5VGFzaygpIHtcclxuICAgICAgICBmb3IgKHZhciBpIGluIHRoaXMuYWN0aXZpdHlUYXNrTnVtKSB7XHJcbiAgICAgICAgICAgIGlmIChHYW1lQXBwLmRhdGFNYW5hZ2VyLmdldEFjdGl2aXR5R2lmdHNTdGF0ZShpKSA9PSAyKSB7XHJcbiAgICAgICAgICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLmdsb2JhbERhdGEuYWN0aXZpdHlDdXJOdW1baV0gKz0gR2FtZUFwcC5kYXRhTWFuYWdlci5nbG9iYWxEYXRhLmFjdGl2aXR5QWRkTnVtW2ldXHJcbiAgICAgICAgICAgICAgICBjYy5zeXMubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJFYXRDaGlja2VuX2FjdGl2aXR5Q3VyTnVtXCIsIEpTT04uc3RyaW5naWZ5KEdhbWVBcHAuZGF0YU1hbmFnZXIuZ2xvYmFsRGF0YS5hY3Rpdml0eUN1ck51bSkpO1xyXG4gICAgICAgICAgICAgICAgR2FtZUFwcC5kYXRhTWFuYWdlci5nbG9iYWxEYXRhLmFjdGl2aXR5Q3VyQ29pbltpXSArPSBHYW1lQXBwLmRhdGFNYW5hZ2VyLmdsb2JhbERhdGEuYWN0aXZpdHlBZGRDb2luW2ldXHJcbiAgICAgICAgICAgICAgICBjYy5zeXMubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJFYXRDaGlja2VuX2FjdGl2aXR5Q3VyQ29pblwiLCBKU09OLnN0cmluZ2lmeShHYW1lQXBwLmRhdGFNYW5hZ2VyLmdsb2JhbERhdGEuYWN0aXZpdHlDdXJDb2luKSk7XHJcbiAgICAgICAgICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLnNldEFjdGl2aXR5R2lmdHNTdGF0ZShpLCBUYXNrU3RhdGUuVW5maW5pc2gpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuYWN0aXZpdHlUYXNrTnVtID0gR2FtZUFwcC5kYXRhTWFuYWdlci5nbG9iYWxEYXRhLmFjdGl2aXR5Q3VyTnVtLmNvbmNhdCgpXHJcbiAgICAgICAgdGhpcy5hY3Rpdml0eUNvaW5OdW0gPSBHYW1lQXBwLmRhdGFNYW5hZ2VyLmdsb2JhbERhdGEuYWN0aXZpdHlDdXJDb2luLmNvbmNhdCgpXHJcbiAgICAgICAgdGhpcy51cGRhdGVBY3Rpdml0eVRhc2tTaG93KClcclxuICAgIH0sXHJcbiAgICB1cGRhdGVBY3Rpdml0eVRhc2tTaG93KCkge1xyXG4gICAgICAgIHZhciBhcnIxID0gW1wi57Sv6K6h5L2/55So5omL5p6q5Ye75p2AXCIgKyB0aGlzLmFjdGl2aXR5VGFza051bVswXSArIFwi5Lq6XCIsXHJcbiAgICAgICAgXCLntK/orqHlh7vmnYBcIiArIHRoaXMuYWN0aXZpdHlUYXNrTnVtWzFdICsgXCLkurpcIixcclxuICAgICAgICBcIue0r+iuoeWQg+m4oVwiICsgdGhpcy5hY3Rpdml0eVRhc2tOdW1bMl0gKyBcIuWxgFwiXVxyXG4gICAgICAgIGZvciAodmFyIGkgaW4gdGhpcy5hY3Rpdml0eVRhc2tOdW0pIHtcclxuICAgICAgICAgICAgdGhpcy5wYWdlMi5jaGlsZHJlbltpXS5jaGlsZHJlblswXS5jaGlsZHJlblswXS5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IGFycjFbaV1cclxuICAgICAgICAgICAgdGhpcy5wYWdlMi5jaGlsZHJlbltpXS5jaGlsZHJlblswXS5jaGlsZHJlblsxXS5jaGlsZHJlblswXS5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IHRoaXMuYWN0aXZpdHlDb2luTnVtW2ldXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLnVwZGF0ZUFjdGl2aXR5VGFza0J0blNob3coKVxyXG4gICAgfSxcclxuICAgIHVwZGF0ZUFjdGl2aXR5VGFza0J0blNob3coKSB7XHJcbiAgICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLmFjdGl2aXR5VGFza051bSkge1xyXG4gICAgICAgICAgICBzd2l0Y2ggKEdhbWVBcHAuZGF0YU1hbmFnZXIuZ2V0QWN0aXZpdHlHaWZ0c1N0YXRlKGkpKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDA6XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKEdhbWVBcHAuZGF0YU1hbmFnZXIuZ2xvYmFsRGF0YS5hY3Rpdml0eU51bVtpXSA+PSB0aGlzLmFjdGl2aXR5VGFza051bVtpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLnNldEFjdGl2aXR5R2lmdHNTdGF0ZShpLCBUYXNrU3RhdGUuQ2FuZ2V0KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2UyLmNoaWxkcmVuW2ldLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzBdLmFjdGl2ZSA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFnZTIuY2hpbGRyZW5baV0uY2hpbGRyZW5bMV0uY2hpbGRyZW5bMV0uYWN0aXZlID0gdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2UyLmNoaWxkcmVuW2ldLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzJdLmFjdGl2ZSA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWdlMi5jaGlsZHJlbltpXS5jaGlsZHJlblsxXS5jaGlsZHJlblswXS5hY3RpdmUgPSB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFnZTIuY2hpbGRyZW5baV0uY2hpbGRyZW5bMV0uY2hpbGRyZW5bMV0uYWN0aXZlID0gZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWdlMi5jaGlsZHJlbltpXS5jaGlsZHJlblsxXS5jaGlsZHJlblsyXS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBicmVha1xyXG4gICAgICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGFnZTIuY2hpbGRyZW5baV0uY2hpbGRyZW5bMV0uY2hpbGRyZW5bMF0uYWN0aXZlID0gZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2UyLmNoaWxkcmVuW2ldLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzFdLmFjdGl2ZSA9IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2UyLmNoaWxkcmVuW2ldLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzJdLmFjdGl2ZSA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2UyLmNoaWxkcmVuW2ldLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzBdLmFjdGl2ZSA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWdlMi5jaGlsZHJlbltpXS5jaGlsZHJlblsxXS5jaGlsZHJlblsxXS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGFnZTIuY2hpbGRyZW5baV0uY2hpbGRyZW5bMV0uY2hpbGRyZW5bMl0uYWN0aXZlID0gdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgc2hvd1BhZ2UxKCkge1xyXG4gICAgICAgIHRoaXMudXBkYXRlT25saW5lVGFzaygpXHJcblxyXG4gICAgICAgIHRoaXMucGFnZTEuYWN0aXZlID0gdHJ1ZVxyXG4gICAgfSxcclxuICAgIHNob3dQYWdlMigpIHtcclxuICAgICAgICB0aGlzLnVwZGF0ZUFjdGl2aXR5VGFzaygpXHJcbiAgICAgICAgdGhpcy51cGRhdGVQcm9ncmVzc1Nob3coKVxyXG4gICAgICAgIHRoaXMudXBkYXRlUHJvZ3Jlc3NCdG5TaG93KClcclxuICAgICAgICB0aGlzLnBhZ2UyLmFjdGl2ZSA9IHRydWVcclxuICAgIH0sXHJcbiAgICBvbkxpbmVUYXNrQnRuQ2xpY2soZXZlbnRUb3VjaCwgY3VzdG9tRXZlbnREYXRhKSB7XHJcbiAgICAgICAgdmFyIHNlbGVjdElkID0gcGFyc2VJbnQoY3VzdG9tRXZlbnREYXRhKVxyXG4gICAgICAgIGlmIChHYW1lQXBwLmRhdGFNYW5hZ2VyLmdldE9uTGluZUdpZnRzU3RhdGUoc2VsZWN0SWQgLSAxKSA9PSAxKSB7XHJcbiAgICAgICAgICAgIEdhbWVBcHAuZGF0YU1hbmFnZXIuc2V0T25MaW5lR2lmdHNTdGF0ZShzZWxlY3RJZCAtIDEsIFRhc2tTdGF0ZS5Hb3QpXHJcbiAgICAgICAgICAgIEdhbWVBcHAuZGF0YU1hbmFnZXIuYWRkQ29pbih0aGlzLm9uTGluZVRhc2tOdW1bc2VsZWN0SWQgLSAxXSlcclxuICAgICAgICAgICAgR2FtZUFwcC51aU1hbmFnZXIuc2hvd1RvYXN0KFwi6I635b6X6YeR5biBKlwiICsgdGhpcy5vbkxpbmVUYXNrTnVtW3NlbGVjdElkIC0gMV0pXHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlT25saW5lVGFza0J0blNob3coKVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBhY3Rpdml0eVRhc2tCdG5DbGljayhldmVudFRvdWNoLCBjdXN0b21FdmVudERhdGEpIHtcclxuICAgICAgICB2YXIgc2VsZWN0SWQgPSBwYXJzZUludChjdXN0b21FdmVudERhdGEpXHJcbiAgICAgICAgaWYgKEdhbWVBcHAuZGF0YU1hbmFnZXIuZ2V0QWN0aXZpdHlHaWZ0c1N0YXRlKHNlbGVjdElkIC0gMSkgPT0gMSkge1xyXG4gICAgICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLnNldEFjdGl2aXR5R2lmdHNTdGF0ZShzZWxlY3RJZCAtIDEsIFRhc2tTdGF0ZS5Hb3QpXHJcbiAgICAgICAgICAgIEdhbWVBcHAuZGF0YU1hbmFnZXIuYWRkQ29pbih0aGlzLmFjdGl2aXR5Q29pbk51bVtzZWxlY3RJZCAtIDFdKVxyXG4gICAgICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLmFkZEFjdGl2ZVZhbHVlKDIwKVxyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVByb2dyZXNzU2hvdygpXHJcbiAgICAgICAgICAgIEdhbWVBcHAudWlNYW5hZ2VyLnNob3dUb2FzdChcIuiOt+W+l+mHkeW4gSpcIiArIHRoaXMuYWN0aXZpdHlDb2luTnVtW3NlbGVjdElkIC0gMV0pXHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlQWN0aXZpdHlUYXNrQnRuU2hvdygpXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIHVwZGF0ZVByb2dyZXNzU2hvdygpIHtcclxuICAgICAgICB0aGlzLmFjdGl2ZVByb2dyZXNzLnByb2dyZXNzID0gR2FtZUFwcC5kYXRhTWFuYWdlci5nbG9iYWxEYXRhLmFjdGl2ZVZhbHVlIC8gMTIwXHJcbiAgICAgICAgdGhpcy5hY3RpdmVVSS5zdHJpbmcgPSBHYW1lQXBwLmRhdGFNYW5hZ2VyLmdsb2JhbERhdGEuYWN0aXZlVmFsdWVcclxuICAgIH0sXHJcblxyXG4gICAgcHJvZ3Jlc3NCdG5DbGljayhldmVudFRvdWNoLCBjdXN0b21FdmVudERhdGEpIHtcclxuICAgICAgICB2YXIgc2VsZWN0SWQgPSBwYXJzZUludChjdXN0b21FdmVudERhdGEpXHJcbiAgICAgICAgaWYgKEdhbWVBcHAuZGF0YU1hbmFnZXIuZ2xvYmFsRGF0YS5wcm9ncmVzc0dpZnRzW3NlbGVjdElkIC0gMV0gPT0gMSkge1xyXG4gICAgICAgICAgICBHYW1lQXBwLmF1ZGlvTWFuYWdlci5wbGF5RWZmZWN0KCdjbGljaycpXHJcbiAgICAgICAgICAgIHZhciBhcnIgPSBbMzAsIDYwLCA5MCwgMTIwXVxyXG4gICAgICAgICAgICB2YXIgYXJyMiA9IFsxMDAsIDIwMCwgMzAwLCA0MDBdXHJcbiAgICAgICAgICAgIC8vIGlmIChHYW1lQXBwLmRhdGFNYW5hZ2VyLmFjdGl2ZVZhbHVlID49IGFycltzZWxlY3RJZCAtIDFdKSB7XHJcbiAgICAgICAgICAgIEdhbWVBcHAuZGF0YU1hbmFnZXIuYWRkQ29pbihhcnIyW3NlbGVjdElkIC0gMV0pXHJcbiAgICAgICAgICAgIEdhbWVBcHAudWlNYW5hZ2VyLnNob3dUb2FzdChcIuiOt+W+l+mHkeW4gSpcIiArIGFycjJbc2VsZWN0SWQgLSAxXSlcclxuICAgICAgICAgICAgR2FtZUFwcC5kYXRhTWFuYWdlci5zZXRQcm9ncmVzc0dpZnRzKHNlbGVjdElkIC0gMSwgMilcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVQcm9ncmVzc0J0blNob3coKVxyXG4gICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH0sXHJcbiAgICB1cGRhdGVQcm9ncmVzc0J0blNob3coKSB7XHJcbiAgICAgICAgdmFyIGFyciA9IFszMCwgNjAsIDkwLCAxMjBdXHJcbiAgICAgICAgZm9yICh2YXIgaSBpbiBhcnIpIHtcclxuICAgICAgICAgICAgaWYgKEdhbWVBcHAuZGF0YU1hbmFnZXIuZ2xvYmFsRGF0YS5wcm9ncmVzc0dpZnRzW2ldID09IDApIHtcclxuICAgICAgICAgICAgICAgIGlmIChHYW1lQXBwLmRhdGFNYW5hZ2VyLmdsb2JhbERhdGEuYWN0aXZlVmFsdWUgPj0gYXJyW2ldKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgR2FtZUFwcC5kYXRhTWFuYWdlci5zZXRQcm9ncmVzc0dpZnRzKGksIDEpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICBmb3IgKHZhciBpIGluIHRoaXMucHJvZ3Jlc3NCdG5Hcm91cC5jaGlsZHJlbikge1xyXG4gICAgICAgICAgICBpZiAoR2FtZUFwcC5kYXRhTWFuYWdlci5nbG9iYWxEYXRhLnByb2dyZXNzR2lmdHNbaV0gPT0gMikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9ncmVzc0J0bkdyb3VwLmNoaWxkcmVuW2ldLmNoaWxkcmVuWzBdLmFjdGl2ZSA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICB0aGlzLnByb2dyZXNzQnRuR3JvdXAuY2hpbGRyZW5baV0uY2hpbGRyZW5bMV0uYWN0aXZlID0gdHJ1ZVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9ncmVzc0J0bkdyb3VwLmNoaWxkcmVuW2ldLmNoaWxkcmVuWzBdLmFjdGl2ZSA9IHRydWVcclxuICAgICAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3NCdG5Hcm91cC5jaGlsZHJlbltpXS5jaGlsZHJlblsxXS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBjbG9zZUJ0bkNsaWNrKCkge1xyXG4gICAgICAgIEdhbWVBcHAuYXVkaW9NYW5hZ2VyLnBsYXlFZmZlY3QoJ2NsaWNrJylcclxuICAgICAgICBHYW1lQXBwLmV2ZW50TWFuYWdlci5lbWl0KEV2ZW50TmFtZXMuRVZFTlRfU0hPV19BQ1RJVklUWUJUTilcclxuICAgICAgICB0aGlzLm5vZGUuZGVzdHJveSgpXHJcbiAgICB9LFxyXG59KTtcclxuIl19