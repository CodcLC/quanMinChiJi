
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__qc_index__.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
require('./assets/migration/use_reversed_rotateBy');
require('./assets/migration/use_v2.1-2.2.1_cc.Toggle_event');
require('./assets/scripts/GameApp');
require('./assets/scripts/Launch/LaunchScript');
require('./assets/scripts/Protocol');
require('./assets/scripts/Tools');
require('./assets/scripts/Utils');
require('./assets/scripts/data/Consts');
require('./assets/scripts/data/JsonPath');
require('./assets/scripts/data/PrefabPath');
require('./assets/scripts/data/RouletteData');
require('./assets/scripts/game/Bullet');
require('./assets/scripts/game/DropBox');
require('./assets/scripts/game/Enemy');
require('./assets/scripts/game/GroundItem');
require('./assets/scripts/game/Joystick');
require('./assets/scripts/game/JoystickCommon');
require('./assets/scripts/game/ParatrooperEnemy');
require('./assets/scripts/game/ParatrooperPlayer');
require('./assets/scripts/game/Player');
require('./assets/scripts/manager/AudioManager');
require('./assets/scripts/manager/ConfigManager');
require('./assets/scripts/manager/DataManager');
require('./assets/scripts/manager/EventManager');
require('./assets/scripts/manager/UIManager');
require('./assets/scripts/ui/ActivityPopup');
require('./assets/scripts/ui/BoxUI');
require('./assets/scripts/ui/DailyPopup');
require('./assets/scripts/ui/GameMap');
require('./assets/scripts/ui/GameUI');
require('./assets/scripts/ui/GiftPopup');
require('./assets/scripts/ui/GunUI');
require('./assets/scripts/ui/LoginUI');
require('./assets/scripts/ui/OpenBoxPopup');
require('./assets/scripts/ui/OverPopup');
require('./assets/scripts/ui/PlaneUI');
require('./assets/scripts/ui/PrepareMap');
require('./assets/scripts/ui/PrepareUI');
require('./assets/scripts/ui/RankUI');
require('./assets/scripts/ui/SkinInfoPopup');
require('./assets/scripts/ui/SkinItem');
require('./assets/scripts/ui/SkinUI');
require('./assets/scripts/ui/SplashUI');
require('./assets/scripts/ui/ToastUI');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/manager/UIManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8a5d0r/JcRKyJq63bPbc7t9', 'UIManager');
// scripts/manager/UIManager.js

"use strict";

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var PREFAB_PATH = require('PrefabPath');

var JSON_PATH = require('JsonPath');

window.conMag = window.conMag || require("ConfigManager");
cc.Class({
  "extends": cc.Component,
  properties: {
    gameRoot: cc.Node,
    uiRoot: cc.Node,
    popupRoot: cc.Node,
    toastRoot: cc.Node,
    toastPrefab: cc.Prefab,
    loadingMask: cc.Node,
    loadingProgress: cc.ProgressBar,
    splashUI: cc.Node,
    _Prefabs: {
      "default": {}
    },
    _Jsons: {
      "default": {}
    },
    mapCamera: cc.Camera,
    mipmapCamera: cc.Camera,
    normalSkinData: sp.SkeletonData,
    advanceSkinDataGroup: [sp.SkeletonData],
    boxSkinDataGroup: [sp.SkeletonData],
    commonAtlas: cc.SpriteAtlas,
    gunSkinDataGroup: [sp.SkeletonData]
  },
  onLoad: function onLoad() {
    if (GameApp.uiManager !== null) {
      return this.node.destroy();
    }

    GameApp.uiManager = this;
    cc.game.addPersistRootNode(this.node);
    cc.director.getCollisionManager().enabled = true;
    cc.director.getCollisionManager().enabledDrawBoundingBox = true;
    cc.director.getCollisionManager().enabledDebugDraw = true;
    var manager = cc.director.getPhysicsManager();
    manager.enabled = true;
    manager.debugDrawFlags = cc.PhysicsManager.DrawBits.e_aabbBit | cc.PhysicsManager.DrawBits.e_pairBit | cc.PhysicsManager.DrawBits.e_centerOfMassBit | cc.PhysicsManager.DrawBits.e_jointBit | cc.PhysicsManager.DrawBits.e_shapeBit;
    var frameSize = cc.view.getFrameSize();
    var canvas = cc.game.canvas;
    canvas.width = frameSize.width * window.devicePixelRatio;
    canvas.height = frameSize.height * window.devicePixelRatio;
    this.setLoadingMaskVisible(false);
    this.loadingProgress.progress = 0; //开始加载;

    this.startLoading(); // window.conMag.loadAllConfig(() => {
    //     let all = window.conMag.getAllConfig()
    //     // console.log("这是读取的数据")
    //     // console.log(all["Config"])
    //     var skinJson = all["Skin"]
    //     console.log(skinJson.json['skins'])
    // })
  },
  startLoading: function startLoading() {
    console.log('开始加载');
    this.loadingProgress.node.active = true;
    this.loadAll(function (completedCount, totalCount) {
      var per = completedCount / totalCount;

      if (per && !isNaN(per)) {
        this.loadingProgress.progress = per;
      }
    }.bind(this), function () {
      this.loadingProgress.node.active = false;
      this.splashUI.active = false; //读取用户信息;

      var userData = cc.sys.localStorage.getItem("EatChicken_UserData");

      if (userData == null || userData == undefined || userData == '') {} else {
        GameApp.dataManager.userData = JSON.parse(userData); //console.log(GameApp.dataManager.userData);
      }

      this.showUI("LoginUI");
    }.bind(this));
  },

  /**
   *
   * @param cbProgress        加载中的回调
   * @param cbComplete        加载完成的回调
   */
  loadAll: function loadAll(cbProgress, cbComplete) {
    var paths = [];
    var ii = 0; //加载预制体配置路径文件;

    for (var name in PREFAB_PATH) {
      paths.push(PREFAB_PATH[name]);
      ii++;
    }

    var prefabCount = ii;
    var jj = 0; //加载JSON配置文件;

    for (var name2 in JSON_PATH) {
      paths.push(JSON_PATH[name2]);
      jj++;
    }

    var jsonCount = jj;
    cc.loader.loadResArray(paths, function (completedCount, totalCount) {
      // console.log(completedCount + '/' + totalCount)
      cbProgress(completedCount, totalCount);
    }, function (err, prefabs) {
      var names = Object.keys(PREFAB_PATH); //for (let i in prefabs) {

      for (var i = 0; i < prefabCount; i++) {
        this._Prefabs[names[i]] = prefabs[i];
      }

      var names2 = Object.keys(JSON_PATH); //for (let i in prefabs) {

      for (var j = 0; j < jsonCount; j++) {
        this._Jsons[names2[j]] = prefabs[prefabCount + j].json[names2[j]];
        GameApp.dataManager.jsonData[names2[j]] = this._Jsons[names2[j]];
      } // console.log(GameApp.dataManager.jsonData)


      cbComplete(); // let paths2 = ['data/skins.json'];
      // cc.loader.loadResArray(paths2, function (completedCount, totalCount) {
      //     cbProgress(completedCount, totalCount);
      // }, function (err, jsons) {
      //     // console.log(jsons[0].json.skins)
      //     GameApp.dataManager.skinsData = jsons[0].json.skins
      //     console.log(GameApp.dataManager.skinsData)
      //     cbComplete();
      // }.bind(this))
    }.bind(this));
  },
  load: function load(name, cb) {
    cc.loader.loadRes(PREFAB_PATH[name], function (err, prefab) {
      if (err) {
        cc.error(err.message || err);
        return;
      }

      this._Prefabs[name] = prefab;
      cb && cb(name);
    }.bind(this));
  },
  showGameObject: function showGameObject(name, cb, parentNode) {
    if (!this._Prefabs[name]) {
      this.load(name, function () {
        this.showGameObject(name, cb);
      }.bind(this));
      return;
    }

    var node = cc.instantiate(this._Prefabs[name]);
    parentNode && parentNode.addChild(node);
    cb && cb(node);
  },
  showGame: function showGame(name, cb) {
    //未加载
    if (this._curGameName == name) {
      console.log("---showGame.repeat----"); //允许刷新Game
      // return;
    }

    if (!this._Prefabs[name]) {
      this.load(name, function () {
        this.showGame(name, cb);
      }.bind(this));
      return;
    }

    var node = cc.instantiate(this._Prefabs[name]);
    this.gameRoot.addChild(node);
    this._curGameName = name;
    cb && cb(node);
  },
  showUI: function showUI(name, cb) {
    console.log('showUI'); //未加载

    if (this._curName == name) {
      console.log("---showUI.repeat----"); //不允许刷新UI

      return;
    }

    if (!this._Prefabs[name]) {
      this.load(name, function () {
        this.showUI(name, cb);
      }.bind(this));
      return;
    } //已加载 
    // this.uiRoot.destroyAllChildren();
    // this.clearPopups()


    this.clearGames(); //特殊处理的UI
    // for (let i = this.popupRoot.children.length - 1; i >= 0; i--) {
    //     if (this.popupRoot.children[i]._tag !== 10086) {
    //         this.popupRoot.children[i].destroy();
    //     }
    // }

    this.uiRoot.children.forEach(function (eachUI) {
      eachUI.runAction(cc.sequence(cc.fadeOut(0.1), cc.callFunc(function () {
        eachUI.destroy();
      })));
    });
    this.clearPopups();
    var node = cc.instantiate(this._Prefabs[name]);
    node.opacity = 0;
    this.uiRoot.addChild(node);
    node.runAction(cc.fadeIn(0.3));
    this._curName = name;
    cb && cb(node);
  },
  getUI: function getUI(name) {
    return this.uiRoot.getChildByName(name);
  },
  popUI: function popUI() {
    var uis = this.uiRoot.children;

    if (uis.length > 0) {
      uis[uis.length - 1].destroy();
    }
  },
  isInMapSight: function isInMapSight(_target) {
    var cameraWidth = this.mapCamera.node.width / 0.9;
    var cameraHeight = this.mapCamera.node.height / 0.9;
    var thePos = this.mapCamera.getWorldToScreenPoint(_target.convertToWorldSpaceAR(cc.v2(0, 0)));

    if (thePos.x < 0 || thePos.x > cameraWidth || thePos.y < 0 || thePos.y > cameraHeight) {
      return false;
    }

    return true;
  },
  // showTop(cb) {
  //     var name = "TopUI"
  //     //未加载
  //     if (!this._Prefabs[name]) {
  //         this.load(name, function () {
  //             this.showTop(name, cb);
  //         }.bind(this));
  //         return;
  //     }
  //     //已加载
  //     if (this.topRoot.childrenCount == 0) {
  //         let node = cc.instantiate(this._Prefabs[name]);
  //         this.topRoot.addChild(node);
  //     } else {
  //         this.topRoot.children[0].active = true
  //     }
  //     cb && cb(node);
  // },
  // getTop() {
  //     return this.topRoot.children[0];
  // },
  // hideTop() {
  //     (this.topRoot.childrenCount > 0) && (this.topRoot.children[0].active = false);
  // },
  showPopup: function showPopup(name, cb, clean) {
    if (clean === void 0) {
      clean = true;
    }

    if (this._curPopupName == name) {
      console.log("---showPopup.repeat----"); //允许刷新popup
      // return;
    } //未加载


    if (!this._Prefabs[name]) {
      this.load(name, function () {
        this.showPopup(name, cb);
      }.bind(this));
      return;
    }

    if (clean) {
      this.clearPopups();
    } //已加载


    var node = cc.instantiate(this._Prefabs[name]); // node.opacity = 0

    node.children[0].scaleX = 0;
    node.children[0].scaleY = 0;
    this.popupRoot.addChild(node);
    node.children[0].runAction(cc.scaleTo(0.5, 1).easing(cc.easeBounceOut(2)));
    this._curPopupName = name;
    cb && cb(node);
  },
  getPopup: function getPopup(name) {
    return this.popupRoot.getChildByName(name);
  },
  popPopup: function popPopup() {
    var popups = this.popupRoot.children;

    if (popups.length > 0) {
      popups[popups.length - 1].destroy();
    }
  },
  closePopup: function closePopup(name) {
    var _this = this;

    var _loop = function _loop() {
      var node = _step.value;

      if (node.name === name) {
        node.runAction(cc.sequence(cc.fadeOut(0.1), cc.callFunc(function () {
          _this._curPopupName = "";
          node.active = false;
          node.destroy();
        })));
        return "break";
      }
    };

    for (var _iterator = _createForOfIteratorHelperLoose(this.popupRoot.children), _step; !(_step = _iterator()).done;) {
      var _ret = _loop();

      if (_ret === "break") break;
    }
  },
  clearPopups: function clearPopups() {
    console.log('clearPopups');

    var _loop2 = function _loop2() {
      var node = _step2.value;
      node.runAction(cc.sequence(cc.fadeOut(0.1), cc.callFunc(function () {
        node.destroy();
      })));
    };

    for (var _iterator2 = _createForOfIteratorHelperLoose(this.popupRoot.children), _step2; !(_step2 = _iterator2()).done;) {
      _loop2();
    }

    this._curPopupName = ""; // this.popupRoot.destroyAllChildren();
  },
  getGame: function getGame(name) {
    return this.gameRoot.getChildByName(name);
  },
  clearGames: function clearGames() {
    this.gameRoot.destroyAllChildren();
    this._curGameName = "";
  },
  showToast: function showToast(s, callback, num) {
    if (!this.toastPrefab) return;
    var toast = cc.instantiate(this.toastPrefab);

    if (this.toastRoot.childrenCount > 0) {
      for (var i = this.toastRoot.childrenCount - 1; i >= 0; i--) {
        var moveUp = cc.moveBy(0.1, cc.v2(0, toast.height));
        this.toastRoot.children[i].runAction(moveUp);
      }
    }

    this.toastRoot.addChild(toast);
    toast.getComponent('ToastUI').show(s, callback, num);
  },
  setLoadingMaskVisible: function setLoadingMaskVisible(isShow) {
    if (isShow) {
      this.loadingMask.active = true;
    } else {
      this.loadingMask.active = false;
    }
  },
  //例外
  update: function update(dt) {
    GameApp.dataManager.globalData.onLineTime += dt;

    switch (GameApp.dataManager.globalData.recordState) {
      case RecordState.READY:
        GameApp.dataManager.globalData.recordTimer = 0;
        break;

      case RecordState.RECORD:
        GameApp.dataManager.globalData.recordTimer += dt;
        break;

      case RecordState.PAUSE:
        break;
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/LoginUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8f722V7x2lPAZMMnHF0xOA7', 'LoginUI');
// scripts/ui/LoginUI.js

"use strict";

var Utils = require("Utils");

cc.Class({
  "extends": cc.Component,
  properties: {
    coinUI: cc.Label,
    nameUI: cc.EditBox,
    curPlayerAnim: sp.Skeleton,
    onceClick: {
      "default": true,
      visible: false
    },
    moreBtn: cc.Node,
    moreSprites: [cc.SpriteFrame],
    spriteIndex: 0,
    activityBtnNode: cc.Node,
    originActivityBtnPos: null
  },
  onLoad: function onLoad() {
    GameApp.eventManager.on(EventNames.EVENT_SHOW_ACTIVITYBTN, this.showActivityBtn.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_UPDATE_COIN_SHOW, this.updateCoinShow.bind(this)); // if (window.tt) {
    //     const systemInfo = tt.getSystemInfoSync();
    //     if (systemInfo.platform !== "ios" && systemInfo.appName != "XiGua") {
    //         this.moreBtn.active = true
    //         Tools.scaleUpAndDowm(this.moreBtn)
    //         this.moreBtn.runAction(cc.sequence(cc.callFunc(() => {
    //             this.moreBtn.children[0].getComponent(cc.Sprite).spriteFrame = this.moreSprites[this.spriteIndex]
    //             this.spriteIndex++
    //             if (this.spriteIndex == this.moreSprites.length) {
    //                 this.spriteIndex = 0
    //             }
    //         }), cc.delayTime(2)).repeatForever())
    //     } else {
    //         this.moreBtn.active = false
    //     }
    // } else {
    //     this.moreBtn.active = true
    //     Tools.scaleUpAndDowm(this.moreBtn)
    //     this.moreBtn.runAction(cc.sequence(cc.callFunc(() => {
    //         this.moreBtn.children[0].getComponent(cc.Sprite).spriteFrame = this.moreSprites[this.spriteIndex]
    //         this.spriteIndex++
    //         if (this.spriteIndex == this.moreSprites.length) {
    //             this.spriteIndex = 0
    //         }
    //     }), cc.delayTime(2)).repeatForever())
    // }

    GameApp.dataManager.initSomeAttr();
    GameApp.dataManager.setChoosedSkinId(GameApp.dataManager.userData.choosedSkinId);
    this.updateCoinShow();
    this.updateNameShow();
    this.initSkinShow();
    this.originActivityBtnPos = this.activityBtnNode.position;
    this.showActivityBtn(); // if (window.tt) {
    //     var phone = tt.getSystemInfoSync();
    //     var w = phone.screenWidth
    //     var h = phone.screenHeight;
    //     Utils.addBanner("addBanner", {
    //         top: h - (200 * 9 / 16),
    //         left: w / 2 - 100,
    //         width: 200
    //     }, null, null)
    // }

    var passDays = cc.sys.localStorage.getItem("EatChicken_passDays");

    if (passDays == null || passDays == undefined || passDays == "") {
      passDays = 0;
      cc.sys.localStorage.setItem("EatChicken_passDays", 0);
    } else {
      passDays = parseInt(passDays);
    }

    var days = 0;
    var date = new Date();
    date = parseInt(date.getTime() / 1000);
    var dailyDate = cc.sys.localStorage.getItem("EatChicken_dailyDate");

    if (dailyDate == null || dailyDate == undefined || dailyDate == "") {
      cc.sys.localStorage.setItem("EatChicken_dailyDate", date);
      days = 1;
    } else {
      dailyDate = parseInt(dailyDate);
      console.log(date);
      console.log(dailyDate);

      if (date >= dailyDate) {
        var newDate = date - dailyDate;
        var newtime = Tools.toTimeString2(newDate);
        days = Math.floor(newtime.hour / 24) + 1;
      } else {
        console.log("现在时间比之前时间早，调时间了？");
        cc.sys.localStorage.setItem("EatChicken_dailyDate", date);
        days = 1;
        cc.sys.localStorage.setItem("EatChicken_passDays", 0);
        passDays = 0;
      }
    }

    if (days - passDays > 0) {
      console.log("执行了天数加一");
      passDays += days - passDays;
      GameApp.dataManager.globalData.curDailyGot = false;
      cc.sys.localStorage.setItem("EatChicken_dailyGotState", false);
      GameApp.dataManager.globalData.activeValue = 0;
      cc.sys.localStorage.setItem("EatChicken_activeValue", GameApp.dataManager.globalData.activeValue);
      GameApp.dataManager.globalData.progressGifts = [0, 0, 0, 0];
      cc.sys.localStorage.setItem("EatChicken_progressGifts", JSON.stringify(GameApp.dataManager.globalData.progressGifts));
    }

    cc.sys.localStorage.setItem("EatChicken_passDays", passDays);
    var des = passDays;
    des = des % 7;

    if (des == 0) {
      des = 7;
    }

    GameApp.dataManager.globalData.days = des;
    console.log(GameApp.dataManager.globalData.curDailyGot);

    if (!GameApp.dataManager.globalData.curDailyGot) {
      GameApp.uiManager.showPopup('DailyPopup');
    } // GameApp.uiManager.showPopup('DailyPopup')


    if (GameApp.dataManager.globalData.recordState == RecordState.READY) {
      Utils.startRecord(function () {
        GameApp.dataManager.changeRecordState(RecordState.RECORD);
      }, function (res) {
        GameApp.uiManager.showToast("已到录屏最大时长!");

        if (res.videoPath != null && res.videoPath != '') {
          GameApp.dataManager.globalData.recordPath = res.videoPath;
          Utils.recorder.stop();
        }
      });
    }
  },
  onDestroy: function onDestroy() {
    GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_ACTIVITYBTN);
    GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_COIN_SHOW);
  },
  // update (dt) {},
  soloBtnClick: function soloBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.showPopup('GiftPopup', function (node) {
      node.getComponent("GiftPopup").init("PrepareUI", 1);
    });
  },
  onNameChanged: function onNameChanged(event) {
    // GameApp.dataManager.setPlayerName(event.string)
    GameApp.dataManager.setPlayerName(Tools.getRandomElement(GameApp.dataManager.globalData.playerNameArr));
    this.updateNameShow();
  },
  updateCoinShow: function updateCoinShow() {
    this.coinUI.string = GameApp.dataManager.userData.coinNum;
  },
  updateNameShow: function updateNameShow() {
    // this.nameUI.string = GameApp.dataManager.userData.playerName
    this.nameUI.node.children[0].getComponent(cc.Label).string = GameApp.dataManager.userData.playerName;
  },
  initSkinShow: function initSkinShow() {
    var _this = this;

    if (GameApp.dataManager.userData.choosedSkinId < 21) {
      this.curPlayerAnim.skeletonData = GameApp.uiManager.normalSkinData;
      this.curPlayerAnim.setSkin(GameApp.dataManager.getSkinDataById(GameApp.dataManager.getChoosedSkinId()).skinname);
    } else {
      this.curPlayerAnim.skeletonData = GameApp.uiManager.advanceSkinDataGroup[GameApp.dataManager.userData.choosedSkinId - 21];
    }

    if (GameApp.dataManager.userData.choosedSkinId < 21) {
      this.curPlayerAnim.setAnimation(0, 'await', true);
    } else {
      this.curPlayerAnim.setAnimation(0, 'await_main_1', false);
      this.curPlayerAnim.setCompleteListener(function () {
        _this.curPlayerAnim.setAnimation(0, 'await_main_' + Tools.randomNum(1, 3), false);
      });
    }
  },
  coinBtnClick: function coinBtnClick() {
    if (window.wx) {
      GameApp.uiManager.showToast("暂未开放！");
      return;
    }

    if (!this.onceClick) return;
    this.onceClick = false;
    GameApp.audioManager.playEffect('click');
    var self = this;

    if (window.tt) {
      Utils.addVideo("addVideo", function () {
        //看完了
        self.onceClick = true;
        GameApp.uiManager.showToast("获得500金币");
        GameApp.dataManager.addCoin(500);
        self.updateCoinShow();
      }, function (_info) {
        //没看完
        self.onceClick = true;
        _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast("未看完视频！");
      });
    } else {
      self.onceClick = true;
      GameApp.uiManager.showToast("非真机,获得500金币");
      GameApp.dataManager.addCoin(500);
      self.updateCoinShow();
    }
  },
  skinBtnClick: function skinBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.showUI('SkinUI');
  },
  boxBtnClick: function boxBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.showUI('BoxUI');
  },
  rankBtnClick: function rankBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.showUI('RankUI');
  },
  weaponBtnClick: function weaponBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.showUI('GunUI');
  },
  shopBtnClick: function shopBtnClick() {
    GameApp.audioManager.playEffect('click');
  },
  shareBtnClick: function shareBtnClick() {
    GameApp.audioManager.playEffect('click');
    Utils.shareFromHomePage(function () {
      GameApp.uiManager.showToast("感谢您的支持，赠送50金币");
      GameApp.dataManager.addCoin(50);
    }, function () {
      GameApp.uiManager.showToast("分享失败!");
    });
  },
  moreGameBtnClick: function moreGameBtnClick() {
    this.showActivityBtn();

    if (window.tt) {
      var systemInfo = tt.getSystemInfoSync(); // iOS 不支持，建议先检测再使用

      if (systemInfo.platform !== "ios") {
        // 打开互跳弹窗
        tt.showMoreGamesModal({
          appLaunchOptions: [{
            appId: "ttXXXXXX",
            query: "foo=bar&baz=qux",
            extraData: {}
          } // {...}
          ],
          success: function success(res) {
            console.log("success", res.errMsg);
          },
          fail: function fail(res) {
            console.log("fail", res.errMsg);
          }
        });
      }
    }
  },
  showActivityBtn: function showActivityBtn() {
    var _this2 = this;

    this.activityBtnNode.getComponent(cc.Button).interactable = true;
    this.activityBtnNode.stopAllActions();
    this.activityBtnNode.runAction(cc.sequence(cc.moveTo(0.2, cc.v2(this.originActivityBtnPos).add(cc.v2(90, 0))).easing(cc.easeBackOut()), cc.callFunc(function () {
      _this2.activityBtnNode.runAction(cc.sequence(cc.moveBy(0.8, cc.v2(20, 0)).easing(cc.easeBounceOut(4)), cc.moveBy(0.2, cc.v2(-20, 0)), cc.moveBy(0.5, cc.v2(20, 0)).easing(cc.easeBounceOut(4)), cc.moveBy(0.2, cc.v2(-20, 0)), cc.delayTime(1)).repeatForever());
    })));
  },
  activityBtnClick: function activityBtnClick() {
    GameApp.audioManager.playEffect('click');
    this.activityBtnNode.getComponent(cc.Button).interactable = false;
    this.activityBtnNode.stopAllActions();
    this.activityBtnNode.runAction(cc.moveTo(0.2, this.originActivityBtnPos));
    GameApp.uiManager.showPopup("ActivityPopup");
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Launch/LaunchScript.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3bba0wL+YtCjqothlcKDRgB', 'LaunchScript');
// scripts/Launch/LaunchScript.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    Player: {
      "default": null,
      type: sp.Skeleton,
      displayName: '玩家动画'
    }
  },
  start: function start() {
    this.loadSkeletonDataResources();
  },
  loadSkeletonDataResources: function loadSkeletonDataResources() {// cc.loader.loadResDir("spine", sp.SkeletonData, function (err, assets) {
    //     if (!err) {
    //         cc.SkeletonData = assets;
    //         //console.log('加载动画文件成功:', cc.SkeletonData);
    //         let data = this.getSkeletonDataByName('player');
    //         console.log('玩家动画:', data);
    //         //this.Player.skeletonData = this.PlayerSkeletonData;
    //         this.Player.skeletonData = data;
    //         this.Player.setSkin("cook");
    //         this.Player.setAnimation(0, "await", true);
    //     }
    // }.bind(this));
  },
  getSkeletonDataByName: function getSkeletonDataByName(data) {
    for (var i = 0; i < cc.SkeletonData.length; i++) {
      var skeletonData = cc.SkeletonData[i];
      var name = skeletonData.name;

      if (name === data) {
        return skeletonData;
      }
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcTGF1bmNoXFxMYXVuY2hTY3JpcHQuanMiXSwibmFtZXMiOlsiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJQbGF5ZXIiLCJ0eXBlIiwic3AiLCJTa2VsZXRvbiIsImRpc3BsYXlOYW1lIiwic3RhcnQiLCJsb2FkU2tlbGV0b25EYXRhUmVzb3VyY2VzIiwiZ2V0U2tlbGV0b25EYXRhQnlOYW1lIiwiZGF0YSIsImkiLCJTa2VsZXRvbkRhdGEiLCJsZW5ndGgiLCJza2VsZXRvbkRhdGEiLCJuYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBQSxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsTUFBTSxFQUFFO0FBQ0osaUJBQVMsSUFETDtBQUVKQyxNQUFBQSxJQUFJLEVBQUVDLEVBQUUsQ0FBQ0MsUUFGTDtBQUdKQyxNQUFBQSxXQUFXLEVBQUU7QUFIVDtBQURBLEdBSFA7QUFXTEMsRUFBQUEsS0FYSyxtQkFXRztBQUNKLFNBQUtDLHlCQUFMO0FBQ0gsR0FiSTtBQWVMQSxFQUFBQSx5QkFmSyx1Q0FldUIsQ0FDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0gsR0E1Qkk7QUE4QkxDLEVBQUFBLHFCQTlCSyxpQ0E4QmlCQyxJQTlCakIsRUE4QnVCO0FBQ3hCLFNBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR2IsRUFBRSxDQUFDYyxZQUFILENBQWdCQyxNQUFwQyxFQUE0Q0YsQ0FBQyxFQUE3QyxFQUFpRDtBQUM3QyxVQUFJRyxZQUFZLEdBQUdoQixFQUFFLENBQUNjLFlBQUgsQ0FBZ0JELENBQWhCLENBQW5CO0FBQ0EsVUFBSUksSUFBSSxHQUFHRCxZQUFZLENBQUNDLElBQXhCOztBQUNBLFVBQUlBLElBQUksS0FBS0wsSUFBYixFQUFtQjtBQUNmLGVBQU9JLFlBQVA7QUFDSDtBQUNKO0FBQ0o7QUF0Q0ksQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY2MuQ2xhc3Moe1xuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcblxuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgUGxheWVyOiB7XG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxuICAgICAgICAgICAgdHlwZTogc3AuU2tlbGV0b24sXG4gICAgICAgICAgICBkaXNwbGF5TmFtZTogJ+eOqeWutuWKqOeUuydcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBzdGFydCgpIHtcbiAgICAgICAgdGhpcy5sb2FkU2tlbGV0b25EYXRhUmVzb3VyY2VzKCk7XG4gICAgfSxcblxuICAgIGxvYWRTa2VsZXRvbkRhdGFSZXNvdXJjZXMoKSB7XG4gICAgICAgIC8vIGNjLmxvYWRlci5sb2FkUmVzRGlyKFwic3BpbmVcIiwgc3AuU2tlbGV0b25EYXRhLCBmdW5jdGlvbiAoZXJyLCBhc3NldHMpIHtcbiAgICAgICAgLy8gICAgIGlmICghZXJyKSB7XG4gICAgICAgIC8vICAgICAgICAgY2MuU2tlbGV0b25EYXRhID0gYXNzZXRzO1xuICAgICAgICAvLyAgICAgICAgIC8vY29uc29sZS5sb2coJ+WKoOi9veWKqOeUu+aWh+S7tuaIkOWKnzonLCBjYy5Ta2VsZXRvbkRhdGEpO1xuICAgICAgICAvLyAgICAgICAgIGxldCBkYXRhID0gdGhpcy5nZXRTa2VsZXRvbkRhdGFCeU5hbWUoJ3BsYXllcicpO1xuICAgICAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKCfnjqnlrrbliqjnlLs6JywgZGF0YSk7XG4gICAgICAgIC8vICAgICAgICAgLy90aGlzLlBsYXllci5za2VsZXRvbkRhdGEgPSB0aGlzLlBsYXllclNrZWxldG9uRGF0YTtcbiAgICAgICAgLy8gICAgICAgICB0aGlzLlBsYXllci5za2VsZXRvbkRhdGEgPSBkYXRhO1xuICAgICAgICAvLyAgICAgICAgIHRoaXMuUGxheWVyLnNldFNraW4oXCJjb29rXCIpO1xuICAgICAgICAvLyAgICAgICAgIHRoaXMuUGxheWVyLnNldEFuaW1hdGlvbigwLCBcImF3YWl0XCIsIHRydWUpO1xuICAgICAgICAvLyAgICAgfVxuICAgICAgICAvLyB9LmJpbmQodGhpcykpO1xuICAgIH0sXG5cbiAgICBnZXRTa2VsZXRvbkRhdGFCeU5hbWUoZGF0YSkge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNjLlNrZWxldG9uRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbGV0IHNrZWxldG9uRGF0YSA9IGNjLlNrZWxldG9uRGF0YVtpXTtcbiAgICAgICAgICAgIGxldCBuYW1lID0gc2tlbGV0b25EYXRhLm5hbWU7XG4gICAgICAgICAgICBpZiAobmFtZSA9PT0gZGF0YSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBza2VsZXRvbkRhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59KTtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Utils.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4e007BguLFPRI4XSmgSly76', 'Utils');
// scripts/Utils.js

"use strict";

var util = {};
var bannerIdTab = {
  addBanner: "503khkj54l5m1j6i0i"
};
util.m_banner = null;
util.moregameBtn = null;
util.vedioAd = null;
util.recorder = null;
util.recordNatureStop = false;
var vedioIdTab = {
  addVideo: "i2nd08ki9p723pt2k4"
};
var baseurl = "https://ecwx-1257044218.cos.ap-chengdu.myqcloud.com/";
var shareImgUrl = baseurl + "bingoballshare.jpg"; // "http://img5.imgtn.bdimg.com/it/u=2001547842,1349217893&fm=26&gp=0.jpg"

var shareTxts = [{
  idx: 1,
  txt: "他拿起喷子一梭子就给我带走了。。。"
}, {
  idx: 2,
  txt: "老板有没有加特林，哒哒哒冒蓝火那种"
}, {
  idx: 3,
  txt: "鸡吃撑了，歇会儿"
}, {
  idx: 4,
  txt: "这里的妹子真Q弹，就是她了！"
}];

util._getShareObject = function (from, _callSuccess, _callFailed) {
  var title = "史上最难的游戏，玩过的人都说春运抢票不算难！";
  var query = null;
  var desc = null;
  var obj = Tools.getRandomElement(shareTxts);

  if (obj) {
    desc = obj.txt;
    query = "from=" + from + "&txt_id=" + title.idx;
  }

  return {
    title: title,
    desc: desc,
    query: query,
    imageUrl: shareImgUrl,
    success: function success() {
      console.log('分享成功');
      _callSuccess && _callSuccess();
    },
    fail: function fail(e) {
      console.log('分享失败');
      console.log(e);
      _callFailed && _callFailed();
    }
  };
};

util.shareFromHomePage = function (_callSuccess, _callFailed) {
  if (window.wx) {
    wx.shareAppMessage(util._getShareObject("home_page", _callSuccess, _callFailed));
  } else {
    _callSuccess && _callSuccess();
  }
};

util.shareRecord = function (path, _callSuccess, _callFailed) {
  if (window.tt) {
    // tt.shareAppMessage(util._getShareObject("home_page"))
    var title = "史上最难的游戏，玩过的人都说春运抢票不算难！";
    var query = null;
    var desc = null;
    var obj = Tools.getRandomElement(shareTxts);

    if (obj) {
      desc = obj.txt;
      query = "from=share" + "&txt_id=" + title.idx;
    }

    tt.shareAppMessage({
      channel: 'video',
      title: title,
      desc: desc,
      imageUrl: shareImgUrl,
      //放入与游戏相关的百度图片
      templateId: '',
      query: query,
      extra: {
        videoPath: path,
        // 换成录屏得到的视频地址
        videoTopics: ['全民刺激吃鸡', '小游戏'],
        createChallenge: true
      },
      success: function success() {
        console.log('分享视频成功');
        _callSuccess && _callSuccess();
      },
      fail: function fail(e) {
        console.log('分享视频失败');
        console.log(e);
        _callFailed && _callFailed();
      }
    });
  }
};

util.addBanner = function (_id, _sy, _WinHeight, _call) {
  if (window.tt == null) {
    return;
  }

  var phone = tt.getSystemInfoSync();
  var w = phone.screenWidth;
  var h = phone.screenHeight;

  if (util.m_banner) {
    util.m_banner.destroy();
    console.log("m_banner is has create");
  } else {
    console.log("m_banner is has not create");
  }

  var bannerAd = tt.createBannerAd({
    adUnitId: bannerIdTab[_id],
    style: _sy
  });
  util.m_banner = bannerAd;
  bannerAd.onLoad(function () {
    console.log("bannerAd 加载成功");
    util.m_banner.show().then(function () {
      console.log("广告显示成功");
    });
  }); // 尺寸调整时会触发回调
  // 注意：如果在回调里再次调整尺寸，要确保不要触发死循环！！！

  bannerAd.onResize(function (size) {
    // console.log("重置");
    // console.log(size.width, size.height);
    if (size.width == 0) return;
    if (size.height == 0) return; // 如果一开始设置的 banner 宽度超过了系统限制，可以在此处加以调整

    if (200 != size.width) {
      bannerAd.style.top = h - size.height;
      bannerAd.style.left = (w - size.width) / 2;
    }
  }); // util.m_banner.onError(err => {
  // 	console.log(err)
  // });
  // util.m_banner.show().catch(err => console.log(err)).then(() => {
  // 	console.log("banner show success");
  // 	if (_call) {
  // 		_call();
  // 	}
  // });
  // util.m_banner.onResize(res => {
  // 	console.log("bannerAd onResize bannerAd.style.realHeight:" + util.m_banner.style.realHeight)
  // 	console.log("bannerAd onResize bannerAd.style.top:" + util.m_banner.style.top)
  // 	util.m_banner.style.left = w - util.m_banner.style.realWidth / 2 + 0.1
  // 	util.m_banner.style.top = h - util.m_banner.style.realHeight - 10
  // 	util.m_banner.style.width = util.m_banner.style.realWidth
  // })
};

util.removeBanner = function () {
  if (window.tt == null) {
    return;
  }

  if (util.m_banner) {
    util.m_banner.hide();
    console.log("removeBanner");
  }
}; //不用


util.addMoreGameBtn = function (_url) {
  if (window.tt) {
    var phone = tt.getSystemInfoSync();
    var w = phone.screenWidth;
    var h = phone.screenHeight;
    util.moregameBtn = tt.createMoreGamesButton({
      type: "image",
      image: _url,
      style: {
        left: 20,
        top: 50,
        width: 50,
        height: 50,
        lineHeight: 50,
        backgroundColor: "",
        textColor: "",
        textAlign: "center",
        fontSize: 16,
        borderRadius: 0,
        borderWidth: 0,
        borderColor: ""
      },
      appLaunchOptions: [{
        appId: "ttXXXXXX",
        query: "foo=bar&baz=qux",
        extraData: {}
      } // {...}
      ],
      onNavigateToMiniGame: function onNavigateToMiniGame(res) {
        console.log("跳转其他小游戏", res);
      }
    });
    console.log(util.moregameBtn); // Tools.scaleUpAndDowm(util.moregameBtn.node)
    // btn.onTap(() => {
    // 	console.log("点击更多游戏");
    // });
  }
};

util.closeMoreGameBtn = function () {
  util.moregameBtn.destroy();
};

util.addVideo = function (_id, _callSuccess, _callFailed) {
  if (window.tt == null) {
    return;
  }

  util.vedioAd = tt.createRewardedVideoAd({
    adUnitId: vedioIdTab[_id]
  });

  try {
    if (util.vedioAd.errorFunc) {
      console.log("关闭了error");
      util.vedioAd.offError(util.vedioAd.errorFunc);
    }

    if (util.vedioAd.closeFunc) {
      console.log("关闭了close");
      util.vedioAd.offClose(util.vedioAd.closeFunc);
    }
  } catch (e) {
    console.warn("--------------videoAd offClose or offError error:");
    console.error(e);
  }

  util.vedioAd.errorFunc = function (err) {
    console.log(err);

    if (err.errCode == 1004) {
      _callSuccess && _callSuccess("无可观看视频");
    } else {
      _callSuccess && _callSuccess("视频服务器错误");
    }
  };

  util.vedioAd.onError(util.vedioAd.errorFunc);

  util.vedioAd.closeFunc = function (res) {
    console.log("执行了closeFunc");

    if (res && res.isEnded || res === undefined) {
      // util.vedioAd.offLoad()
      console.log("播放完了");
      _callSuccess && _callSuccess();
    } else {
      console.log('中途退出');
      _callFailed && _callFailed();
    }
  };

  util.vedioAd.onClose(util.vedioAd.closeFunc);
  util.vedioAd.show()["catch"](function () {
    // 失败重试
    util.vedioAd.load().then(function () {
      return util.vedioAd.show();
    })["catch"](function (err) {
      console.log('激励视频or广告显示失败');
    });
  });
};

util.startRecord = function (_call, _onNatureClose) {
  if (window.tt == null) {
    return;
  }

  util.recorder = tt.getGameRecorderManager();
  util.recorder.onStart(function (res) {
    console.log('录屏开始');
    util.recordNatureStop = false;
    _call && _call();
  });
  util.recorder.onStop(function (res) {
    console.log('录屏自然停止');
    util.recordNatureStop = true;
    _onNatureClose && _onNatureClose(res);
  });
  util.recorder.onError(function (res) {
    console.log('录屏错误');
  });
  util.recorder.start({
    duration: 1200
  });
};

util.pauseRecord = function (_call) {
  util.recorder.onPause(function (res) {
    console.log('录屏暂停');
    _call && _call();
  });
  util.recorder.pause();
};

util.resumeRecord = function (_call) {
  util.recorder.onResume(function (res) {
    console.log('录屏恢复');
    _call && _call();
  });
  util.recorder.resume();
};

util.stopRecord = function (_call) {
  if (util.recordNatureStop) {
    _call && _call();
    return;
  }

  util.recorder.onStop(function (res) {
    console.log('录屏停止'); // util.recordPath = res.videoPath;

    _call && _call(res);
  });
  util.recorder.stop();
};

module.exports = util;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/migration/use_reversed_rotateBy.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5ebc7f7TRdNcpFHkAPidfBw', 'use_reversed_rotateBy');
// migration/use_reversed_rotateBy.js

"use strict";

/*
 * This script is automatically generated by Cocos Creator and is only used for projects compatible with v2.1.0/v2.1.1/v2.3.0/v2.3.1/v2.3.2 versions.
 * You do not need to manually add this script in any other project.
 * If you don't use cc.Action in your project, you can delete this script directly.
 * If your project is hosted in VCS such as git, submit this script together.
 *
 * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0/v2.1.1/v2.3.0/v2.3.1/v2.3.2 版本的工程，
 * 你无需在任何其它项目中手动添加此脚本。
 * 如果你的项目中没用到 Action，可直接删除该脚本。
 * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。
 */
cc.RotateBy._reverse = true;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcbWlncmF0aW9uXFx1c2VfcmV2ZXJzZWRfcm90YXRlQnkuanMiXSwibmFtZXMiOlsiY2MiLCJSb3RhdGVCeSIsIl9yZXZlcnNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7OztBQVlBQSxFQUFFLENBQUNDLFFBQUgsQ0FBWUMsUUFBWixHQUF1QixJQUF2QiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogVGhpcyBzY3JpcHQgaXMgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgYnkgQ29jb3MgQ3JlYXRvciBhbmQgaXMgb25seSB1c2VkIGZvciBwcm9qZWN0cyBjb21wYXRpYmxlIHdpdGggdjIuMS4wL3YyLjEuMS92Mi4zLjAvdjIuMy4xL3YyLjMuMiB2ZXJzaW9ucy5cclxuICogWW91IGRvIG5vdCBuZWVkIHRvIG1hbnVhbGx5IGFkZCB0aGlzIHNjcmlwdCBpbiBhbnkgb3RoZXIgcHJvamVjdC5cclxuICogSWYgeW91IGRvbid0IHVzZSBjYy5BY3Rpb24gaW4geW91ciBwcm9qZWN0LCB5b3UgY2FuIGRlbGV0ZSB0aGlzIHNjcmlwdCBkaXJlY3RseS5cclxuICogSWYgeW91ciBwcm9qZWN0IGlzIGhvc3RlZCBpbiBWQ1Mgc3VjaCBhcyBnaXQsIHN1Ym1pdCB0aGlzIHNjcmlwdCB0b2dldGhlci5cclxuICpcclxuICog5q2k6ISa5pys55SxIENvY29zIENyZWF0b3Ig6Ieq5Yqo55Sf5oiQ77yM5LuF55So5LqO5YW85a65IHYyLjEuMC92Mi4xLjEvdjIuMy4wL3YyLjMuMS92Mi4zLjIg54mI5pys55qE5bel56iL77yMXHJcbiAqIOS9oOaXoOmcgOWcqOS7u+S9leWFtuWug+mhueebruS4reaJi+WKqOa3u+WKoOatpOiEmuacrOOAglxyXG4gKiDlpoLmnpzkvaDnmoTpobnnm67kuK3msqHnlKjliLAgQWN0aW9u77yM5Y+v55u05o6l5Yig6Zmk6K+l6ISa5pys44CCXHJcbiAqIOWmguaenOS9oOeahOmhueebruacieaJmOeuoeS6jiBnaXQg562J54mI5pys5bqT77yM6K+35bCG5q2k6ISa5pys5LiA5bm25LiK5Lyg44CCXHJcbiAqL1xyXG5cclxuY2MuUm90YXRlQnkuX3JldmVyc2UgPSB0cnVlO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/ActivityPopup.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '333caQGbP1Ar6WkFo6uBN3w', 'ActivityPopup');
// scripts/ui/ActivityPopup.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    page1: cc.Node,
    page2: cc.Node,
    btn1: cc.Node,
    btn2: cc.Node,
    activeProgress: cc.ProgressBar,
    progressBtnGroup: cc.Node,
    activeUI: cc.Label,
    curPageIndex: 0,
    onLineTaskNum: [],
    activityTaskNum: [],
    activityCoinNum: []
  },
  onLoad: function onLoad() {
    var a = GameApp.dataManager.globalData.onLineGiftCurNum;
    this.onLineTaskNum = [a - 10, a - 5, a];
    this.activityTaskNum = GameApp.dataManager.globalData.activityCurNum.concat();
    this.activityCoinNum = GameApp.dataManager.globalData.activityCurCoin.concat();
    this.btn1Click();
  },
  btn1Click: function btn1Click(eventTouch) {
    if (this.curPageIndex == 1 && eventTouch) return;
    this.curPageIndex = 1;
    eventTouch && GameApp.audioManager.playEffect('click');
    this.btn1.children[0].active = false;
    this.btn1.children[1].active = true;
    this.btn2.children[0].active = true;
    this.btn2.children[1].active = false;
    this.page2.active = false;
    this.showPage1();
  },
  btn2Click: function btn2Click(eventTouch) {
    if (this.curPageIndex == 2 && eventTouch) return;
    this.curPageIndex = 2;
    eventTouch && GameApp.audioManager.playEffect('click');
    this.btn1.children[0].active = true;
    this.btn1.children[1].active = false;
    this.btn2.children[0].active = false;
    this.btn2.children[1].active = true;
    this.page1.active = false;
    this.showPage2();
  },
  updateOnlineTask: function updateOnlineTask() {
    var finishAll = true;

    for (var i in this.page1.children) {
      if (GameApp.dataManager.getOnLineGiftsState(i) != 2) {
        finishAll = false;
        break;
      }
    }

    if (finishAll) {
      GameApp.dataManager.globalData.onLineGiftCurNum += 15;
      cc.sys.localStorage.setItem("EatChicken_onLineGiftCurNum", GameApp.dataManager.globalData.onLineGiftCurNum);
      var a = GameApp.dataManager.globalData.onLineGiftCurNum;
      this.onLineTaskNum = [a - 10, a - 5, a];
      GameApp.dataManager.setOnLineGiftsState(0, TaskState.Unfinish);
      GameApp.dataManager.setOnLineGiftsState(1, TaskState.Unfinish);
      GameApp.dataManager.setOnLineGiftsState(2, TaskState.Unfinish);
    }

    this.updateOnLineTaskShow();
  },
  updateOnLineTaskShow: function updateOnLineTaskShow() {
    for (var i in this.page1.children) {
      this.page1.children[i].children[0].children[0].getComponent(cc.Label).string = "累计游戏在线" + this.onLineTaskNum[i] + "分钟";
      this.page1.children[i].children[0].children[1].children[0].getComponent(cc.Label).string = this.onLineTaskNum[i];
    }

    this.updateOnlineTaskBtnShow();
  },
  updateOnlineTaskBtnShow: function updateOnlineTaskBtnShow() {
    var _minuteTime = GameApp.dataManager.getOnlineTimeMinute();

    for (var i in this.page1.children) {
      switch (GameApp.dataManager.getOnLineGiftsState(i)) {
        case 0:
          if (_minuteTime >= this.onLineTaskNum[i]) {
            GameApp.dataManager.setOnLineGiftsState(i, TaskState.Canget);
            this.page1.children[i].children[1].children[0].active = false;
            this.page1.children[i].children[1].children[1].active = true;
            this.page1.children[i].children[1].children[2].active = false;
          } else {
            this.page1.children[i].children[1].children[0].active = true;
            this.page1.children[i].children[1].children[1].active = false;
            this.page1.children[i].children[1].children[2].active = false;
          }

          break;

        case 1:
          this.page1.children[i].children[1].children[0].active = false;
          this.page1.children[i].children[1].children[1].active = true;
          this.page1.children[i].children[1].children[2].active = false;
          break;

        case 2:
          this.page1.children[i].children[1].children[0].active = false;
          this.page1.children[i].children[1].children[1].active = false;
          this.page1.children[i].children[1].children[2].active = true;
          break;
      }
    }
  },
  updateActivityTask: function updateActivityTask() {
    for (var i in this.activityTaskNum) {
      if (GameApp.dataManager.getActivityGiftsState(i) == 2) {
        GameApp.dataManager.globalData.activityCurNum[i] += GameApp.dataManager.globalData.activityAddNum[i];
        cc.sys.localStorage.setItem("EatChicken_activityCurNum", JSON.stringify(GameApp.dataManager.globalData.activityCurNum));
        GameApp.dataManager.globalData.activityCurCoin[i] += GameApp.dataManager.globalData.activityAddCoin[i];
        cc.sys.localStorage.setItem("EatChicken_activityCurCoin", JSON.stringify(GameApp.dataManager.globalData.activityCurCoin));
        GameApp.dataManager.setActivityGiftsState(i, TaskState.Unfinish);
      }
    }

    this.activityTaskNum = GameApp.dataManager.globalData.activityCurNum.concat();
    this.activityCoinNum = GameApp.dataManager.globalData.activityCurCoin.concat();
    this.updateActivityTaskShow();
  },
  updateActivityTaskShow: function updateActivityTaskShow() {
    var arr1 = ["累计使用手枪击杀" + this.activityTaskNum[0] + "人", "累计击杀" + this.activityTaskNum[1] + "人", "累计吃鸡" + this.activityTaskNum[2] + "局"];

    for (var i in this.activityTaskNum) {
      this.page2.children[i].children[0].children[0].getComponent(cc.Label).string = arr1[i];
      this.page2.children[i].children[0].children[1].children[0].getComponent(cc.Label).string = this.activityCoinNum[i];
    }

    this.updateActivityTaskBtnShow();
  },
  updateActivityTaskBtnShow: function updateActivityTaskBtnShow() {
    for (var i in this.activityTaskNum) {
      switch (GameApp.dataManager.getActivityGiftsState(i)) {
        case 0:
          if (GameApp.dataManager.globalData.activityNum[i] >= this.activityTaskNum[i]) {
            GameApp.dataManager.setActivityGiftsState(i, TaskState.Canget);
            this.page2.children[i].children[1].children[0].active = false;
            this.page2.children[i].children[1].children[1].active = true;
            this.page2.children[i].children[1].children[2].active = false;
          } else {
            this.page2.children[i].children[1].children[0].active = true;
            this.page2.children[i].children[1].children[1].active = false;
            this.page2.children[i].children[1].children[2].active = false;
          }

          break;

        case 1:
          this.page2.children[i].children[1].children[0].active = false;
          this.page2.children[i].children[1].children[1].active = true;
          this.page2.children[i].children[1].children[2].active = false;
          break;

        case 2:
          this.page2.children[i].children[1].children[0].active = false;
          this.page2.children[i].children[1].children[1].active = false;
          this.page2.children[i].children[1].children[2].active = true;
          break;
      }
    }
  },
  showPage1: function showPage1() {
    this.updateOnlineTask();
    this.page1.active = true;
  },
  showPage2: function showPage2() {
    this.updateActivityTask();
    this.updateProgressShow();
    this.updateProgressBtnShow();
    this.page2.active = true;
  },
  onLineTaskBtnClick: function onLineTaskBtnClick(eventTouch, customEventData) {
    var selectId = parseInt(customEventData);

    if (GameApp.dataManager.getOnLineGiftsState(selectId - 1) == 1) {
      GameApp.dataManager.setOnLineGiftsState(selectId - 1, TaskState.Got);
      GameApp.dataManager.addCoin(this.onLineTaskNum[selectId - 1]);
      GameApp.uiManager.showToast("获得金币*" + this.onLineTaskNum[selectId - 1]);
      this.updateOnlineTaskBtnShow();
    }
  },
  activityTaskBtnClick: function activityTaskBtnClick(eventTouch, customEventData) {
    var selectId = parseInt(customEventData);

    if (GameApp.dataManager.getActivityGiftsState(selectId - 1) == 1) {
      GameApp.dataManager.setActivityGiftsState(selectId - 1, TaskState.Got);
      GameApp.dataManager.addCoin(this.activityCoinNum[selectId - 1]);
      GameApp.dataManager.addActiveValue(20);
      this.updateProgressShow();
      GameApp.uiManager.showToast("获得金币*" + this.activityCoinNum[selectId - 1]);
      this.updateActivityTaskBtnShow();
    }
  },
  updateProgressShow: function updateProgressShow() {
    this.activeProgress.progress = GameApp.dataManager.globalData.activeValue / 120;
    this.activeUI.string = GameApp.dataManager.globalData.activeValue;
  },
  progressBtnClick: function progressBtnClick(eventTouch, customEventData) {
    var selectId = parseInt(customEventData);

    if (GameApp.dataManager.globalData.progressGifts[selectId - 1] == 1) {
      GameApp.audioManager.playEffect('click');
      var arr = [30, 60, 90, 120];
      var arr2 = [100, 200, 300, 400]; // if (GameApp.dataManager.activeValue >= arr[selectId - 1]) {

      GameApp.dataManager.addCoin(arr2[selectId - 1]);
      GameApp.uiManager.showToast("获得金币*" + arr2[selectId - 1]);
      GameApp.dataManager.setProgressGifts(selectId - 1, 2);
      this.updateProgressBtnShow(); // }
    }
  },
  updateProgressBtnShow: function updateProgressBtnShow() {
    var arr = [30, 60, 90, 120];

    for (var i in arr) {
      if (GameApp.dataManager.globalData.progressGifts[i] == 0) {
        if (GameApp.dataManager.globalData.activeValue >= arr[i]) {
          GameApp.dataManager.setProgressGifts(i, 1);
        }
      }
    }

    for (var i in this.progressBtnGroup.children) {
      if (GameApp.dataManager.globalData.progressGifts[i] == 2) {
        this.progressBtnGroup.children[i].children[0].active = false;
        this.progressBtnGroup.children[i].children[1].active = true;
      } else {
        this.progressBtnGroup.children[i].children[0].active = true;
        this.progressBtnGroup.children[i].children[1].active = false;
      }
    }
  },
  closeBtnClick: function closeBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.eventManager.emit(EventNames.EVENT_SHOW_ACTIVITYBTN);
    this.node.destroy();
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/data/RouletteData.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '87c70GyAa9DY7qwmvLhQogw', 'RouletteData');
// scripts/data/RouletteData.js

"use strict";

var RouletteData = {
  ALLROATE: 360,
  //360度
  num: 8,
  // 转盘格子数
  deviation: 5,
  // 偏移量(防止转盘指针正好指向两个格子中间)
  offset: 22.5,
  // 角度的偏移量
  //转盘角度数据
  zhuanpanData: {
    "default": {}
  },
  duration: 3,
  //转动持续时间
  rotateNum: 3,
  //转动圈数(n - 1)
  load: function load() {
    for (var i = 1; i < 9; i++) {
      this.zhuanpanData[i] = {
        start: (this.num - (9 - i)) * this.ALLROATE / this.num - this.offset + this.deviation,
        end: (this.num - (8 - i)) * this.ALLROATE / this.num - this.offset - this.deviation
      };
    }
  }
};
RouletteData.load();
module.exports = RouletteData;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcZGF0YVxcUm91bGV0dGVEYXRhLmpzIl0sIm5hbWVzIjpbIlJvdWxldHRlRGF0YSIsIkFMTFJPQVRFIiwibnVtIiwiZGV2aWF0aW9uIiwib2Zmc2V0Iiwiemh1YW5wYW5EYXRhIiwiZHVyYXRpb24iLCJyb3RhdGVOdW0iLCJsb2FkIiwiaSIsInN0YXJ0IiwiZW5kIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxZQUFZLEdBQUc7QUFDZkMsRUFBQUEsUUFBUSxFQUFFLEdBREs7QUFDRDtBQUNkQyxFQUFBQSxHQUFHLEVBQUUsQ0FGVTtBQUVQO0FBQ1JDLEVBQUFBLFNBQVMsRUFBRSxDQUhJO0FBR0Q7QUFDZEMsRUFBQUEsTUFBTSxFQUFFLElBSk87QUFJRDtBQUNkO0FBQ0FDLEVBQUFBLFlBQVksRUFBRTtBQUNWLGVBQVM7QUFEQyxHQU5DO0FBVWZDLEVBQUFBLFFBQVEsRUFBRSxDQVZLO0FBVUY7QUFDYkMsRUFBQUEsU0FBUyxFQUFFLENBWEk7QUFXRDtBQUVkQyxFQUFBQSxJQUFJLEVBQUUsZ0JBQVk7QUFDZCxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUcsQ0FBcEIsRUFBdUJBLENBQUMsRUFBeEIsRUFBNEI7QUFDeEIsV0FBS0osWUFBTCxDQUFrQkksQ0FBbEIsSUFBdUI7QUFDbkJDLFFBQUFBLEtBQUssRUFBRSxDQUFDLEtBQUtSLEdBQUwsSUFBWSxJQUFJTyxDQUFoQixDQUFELElBQXVCLEtBQUtSLFFBQTVCLEdBQXVDLEtBQUtDLEdBQTVDLEdBQWtELEtBQUtFLE1BQXZELEdBQWdFLEtBQUtELFNBRHpEO0FBQ29FUSxRQUFBQSxHQUFHLEVBQUUsQ0FBQyxLQUFLVCxHQUFMLElBQVksSUFBSU8sQ0FBaEIsQ0FBRCxJQUF1QixLQUFLUixRQUE1QixHQUF1QyxLQUFLQyxHQUE1QyxHQUFrRCxLQUFLRSxNQUF2RCxHQUFnRSxLQUFLRDtBQUQ5SSxPQUF2QjtBQUdIO0FBQ0o7QUFuQmMsQ0FBbkI7QUFxQkFILFlBQVksQ0FBQ1EsSUFBYjtBQUVBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJiLFlBQWpCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUm91bGV0dGVEYXRhID0ge1xyXG4gICAgQUxMUk9BVEU6IDM2MCwvLzM2MOW6plxyXG4gICAgbnVtOiA4LCAvLyDovaznm5jmoLzlrZDmlbBcclxuICAgIGRldmlhdGlvbjogNSwgLy8g5YGP56e76YePKOmYsuatoui9rOebmOaMh+mSiOato+WlveaMh+WQkeS4pOS4quagvOWtkOS4remXtClcclxuICAgIG9mZnNldDogMjIuNSwgLy8g6KeS5bqm55qE5YGP56e76YePXHJcbiAgICAvL+i9rOebmOinkuW6puaVsOaNrlxyXG4gICAgemh1YW5wYW5EYXRhOiB7XHJcbiAgICAgICAgZGVmYXVsdDoge31cclxuICAgIH0sXHJcblxyXG4gICAgZHVyYXRpb246IDMsIC8v6L2s5Yqo5oyB57ut5pe26Ze0XHJcbiAgICByb3RhdGVOdW06IDMsIC8v6L2s5Yqo5ZyI5pWwKG4gLSAxKVxyXG5cclxuICAgIGxvYWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8IDk7IGkrKykge1xyXG4gICAgICAgICAgICB0aGlzLnpodWFucGFuRGF0YVtpXSA9IHtcclxuICAgICAgICAgICAgICAgIHN0YXJ0OiAodGhpcy5udW0gLSAoOSAtIGkpKSAqIHRoaXMuQUxMUk9BVEUgLyB0aGlzLm51bSAtIHRoaXMub2Zmc2V0ICsgdGhpcy5kZXZpYXRpb24sIGVuZDogKHRoaXMubnVtIC0gKDggLSBpKSkgKiB0aGlzLkFMTFJPQVRFIC8gdGhpcy5udW0gLSB0aGlzLm9mZnNldCAtIHRoaXMuZGV2aWF0aW9uXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn07XHJcblJvdWxldHRlRGF0YS5sb2FkKCk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFJvdWxldHRlRGF0YTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/game/Enemy.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'db4d1xBOmVGm7LWfdofEM+7', 'Enemy');
// scripts/game/Enemy.js

"use strict";

var _JoystickCommon = require("JoystickCommon");

cc.Class({
  "extends": cc.Component,
  properties: {
    // from joystick
    moveDir: {
      "default": cc.v2(0, 0),
      displayName: 'Move Dir',
      tooltip: '移动方向'
    },
    _speedType: {
      "default": _JoystickCommon.SpeedType.STOP,
      displayName: 'Speed Type',
      type: _JoystickCommon.SpeedType,
      tooltip: '速度级别'
    },
    // from self
    _moveSpeed: {
      "default": 0,
      displayName: 'Move Speed',
      tooltip: '移动速度'
    },
    stopSpeed: {
      "default": 0,
      type: cc.Integer,
      tooltip: '停止时速度'
    },
    normalSpeed: {
      "default": 200,
      type: cc.Integer,
      tooltip: '正常速度'
    },
    fastSpeed: {
      "default": 200,
      type: cc.Integer,
      tooltip: '最快速度'
    },
    roleAnim: {
      "default": null,
      type: sp.Skeleton,
      tooltip: '角色的Spine动画组件'
    },
    _gunDir: {
      "default": cc.v2(1, 0)
    },
    gunAnim: {
      "default": null,
      type: sp.Skeleton,
      tooltip: '枪的Spine动画组件'
    },
    gunNode: {
      "default": null,
      type: cc.Node,
      tooltip: '枪节点'
    },
    _haveGun: false,
    _mapNoGun: false,
    _mapNoBox: true,
    thisName: "",
    gunData: {
      "default": {}
    },
    skinData: {
      "default": {}
    },
    _pbc: cc.PhysicsBoxCollider,
    nameUI: cc.Label,
    bulletPrefab: cc.Prefab,
    _choosedSkinId: 0,
    hpBar: cc.ProgressBar,
    amoBar: cc.ProgressBar,
    starNode: cc.Node,
    _maxHp: 100,
    _curHp: 100,
    _shootInterval: 0,
    _reloadInterval: 0,
    _maxAmoNum: 20,
    _curAmoNum: 20,
    _curDamage: 0,
    _curCrit: 0,
    _curSpeed: 200,
    _curCd: 0,
    _curDef: 0,
    _curRecovery: 0,
    getItemAttrArr: [],
    //伤害，防御，移速，暴击
    equipItemAttr: [],
    //(装备带来的属性)伤害，防御，移速，暴击
    _shootFlag: false,
    _shootTimer: 0.3,
    _reloadFlag: false,
    _reloadTimer: 0,
    lastHitBullet: null,
    _desTime: 0,
    //巡逻的变向频率
    _desTime2: 0,
    // 追踪或逃跑的变向频率
    _isAim: false,
    //瞄准状态，此状态下枪不可自主转向，避免鬼畜
    _aimDir: null,
    _aimTimer: 0,
    _aimInterval: 0.1,
    _isDie: false,
    _move: false,
    _isProtect: false,
    _isBlock: false,
    _isGas: false,
    _inGasTimer: 0,
    _inGasInterval: 0.5
  },
  onLoad: function onLoad() {
    this.getItemAttrArr = [{
      rank: 0,
      item: null
    }, {
      rank: 0,
      item: null
    }, {
      rank: 0,
      item: null
    }, {
      rank: 0,
      item: null
    }]; //伤害，防御，移速，暴击

    this.equipItemAttr = [0, 0, 0, 0]; //(装备带来的属性)伤害，防御，移速，暴击

    GameApp.eventManager.on(EventNames.EVENT_THEGAMESTART, this.theGameStart.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_NOTIFY_ENEMY_MAPBOX, this.notifyMapBox.bind(this)); // this._pbc = this.getComponent(cc.PhysicsBoxCollider)
    // this._pbc.tag = Tags.role

    this._pbc = this.getComponent(cc.PhysicsBoxCollider); // this._desTime = Tools.randomNum(1, 3)
  },
  onEnable: function onEnable() {},
  onDisable: function onDisable() {},
  onDestroy: function onDestroy() {
    GameApp.eventManager.removeListener(EventNames.EVENT_THEGAMESTART);
    GameApp.eventManager.removeListener(EventNames.EVENT_NOTIFY_ENEMY_MAPBOX);
  },
  init: function init(_index, _names) {
    // this.schedule(() => {
    //     console.log(GameApp.dataManager.userData.choosedSkinId)
    //     GameApp.dataManager.setSkinId(GameApp.dataManager.userData.choosedSkinId += 1)
    // }, 2);
    if (GameApp.dataManager.globalData.isInGame) {
      this.roleProtect();
    }

    this._choosedSkinId = _index;
    this.skinData = GameApp.dataManager.jsonData.SkinsData[_index - 1];
    this.addSkinAttr();
    this.initNameShow(_names);
    this.initSkinShow();
    this.setSpeedType(_JoystickCommon.SpeedType.FAST); // console.log(this._pbc.tag)
  },
  addSkinAttr: function addSkinAttr() {
    var curSkinData = this.skinData;
    this._maxHp = this._curHp = GameApp.dataManager.userData.baseHp + Math.floor(GameApp.dataManager.userData.baseHp * (curSkinData.att_hpmax / 100));
    this._curDamage = GameApp.dataManager.userData.baseDamage + curSkinData.att_damage / 100;
    this._curCrit = GameApp.dataManager.userData.baseCrit + curSkinData.att_crit / 10;
    this._curSpeed = GameApp.dataManager.userData.baseSpeed + Math.floor(GameApp.dataManager.userData.baseSpeed * (curSkinData.att_speed / 100));
    this._curCd = GameApp.dataManager.userData.baseCd + curSkinData.att_cd / 100;
    this._curDef = GameApp.dataManager.userData.baseDef + curSkinData.att_defense / 100;
    this._curRecovery = GameApp.dataManager.userData.baseRecovery + curSkinData.att_recovery / 100;
  },
  roleProtect: function roleProtect() {
    this._isProtect = true;
    this.node.opacity = 0;
  },
  theGameStart: function theGameStart() {
    this.node.opacity = 255;
    this._isProtect = false;
  },
  notifyMapBox: function notifyMapBox() {
    this._mapNoBox = false;
  },
  enemyEquipBoxItem: function enemyEquipBoxItem() {
    var arr = [0, 1, 2, 3];
    var _selectIndex = 0;

    while (this.getItemAttrArr[_selectIndex].rank == 3) {
      Tools.removeArray(arr, _selectIndex);

      if (arr.length == 0) {
        return;
      }

      _selectIndex = Tools.getRandomElement(arr);
    } // console.log("选择了" + _selectIndex)


    var _rank = this.getItemAttrArr[_selectIndex].rank + 1;

    this.getItemAttrArr[_selectIndex] = {
      rank: _rank,
      item: ItemAttr[_selectIndex][_rank - 1]
    };
    this.equipItemAttr[_selectIndex] = this.getItemAttrArr[_selectIndex].item.attr;
    this.updateStarShow();
  },
  updateStarShow: function updateStarShow() {
    var _sum = 0;

    for (var i = 0; i < 4; i++) {
      _sum += this.getItemAttrArr[i].rank;
    }

    if (_sum == 0) {
      this.starNode.active = false;
    } else {
      var level = parseInt((_sum - 1) / 3);
      var starNum = _sum - level * 3;
      this.starNode.children[0].getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame("level_bg_" + (level + 1));
      this.starNode.children[1].getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame("level_star_" + (level + 1) + "_" + starNum);
      this.starNode.active = true;
    }
  },
  initNameShow: function initNameShow(_names) {
    this.thisName = _names;
    this.nameUI.string = _names;

    if (!GameApp.dataManager.globalData.isInGame) {
      this.hpBar.node.active = false;
    } // var colorIndex = Math.floor((this.skinData.skinid - 1) / 5)
    // this.nameUI.node.color = new cc.Color().fromHEX(NameColor[colorIndex]);

  },
  initSkinShow: function initSkinShow() {
    if (this._choosedSkinId < 21) {
      this.roleAnim.skeletonData = GameApp.uiManager.normalSkinData;
      this.roleAnim.setSkin(this.skinData.skinname);
    } else {
      this.roleAnim.skeletonData = GameApp.uiManager.advanceSkinDataGroup[this._choosedSkinId - 21];
    }

    var arr = this._choosedSkinId < 21 ? ['await'] : ['await_fight_1'];
    this.roleAnim.setAnimation(0, arr[0], true);
  },
  // methods
  move: function move(dt) {
    // this.node.rotation = 90 - cc.misc.radiansToDegrees(
    //     Math.atan2(this.moveDir.y, this.moveDir.x)
    // );
    if (!this.moveDir) return;
    var theAngle = 90 - cc.misc.radiansToDegrees(Math.atan2(this.moveDir.y, this.moveDir.x));

    if (theAngle > 180 || theAngle < 0) {
      this.roleAnim.node.scaleX = -1;
    } else {
      this.roleAnim.node.scaleX = 1;
    }

    var newPos = this.node.position.add(this.moveDir.mul(this._moveSpeed * dt));
    this.node.setPosition(newPos); // this.roleAnim.node.setPosition(0, 0)
  },
  doParser: function doParser(dt) {
    this._desTime -= dt;
    this._desTime2 -= dt;

    if (this._isAim) {
      if (this._desTime2 < 0) {
        this._desTime2 = 1;

        if (this._haveGun) {
          // console.log("追踪")
          !this._isBlock && this.setDir(this._aimDir);
        } else {
          // console.log("逃跑")
          !this._isBlock && this.setDir(this._aimDir.rotate(180));
        }
      }

      return;
    }

    if (GameApp.dataManager.globalData.gasConfig != null) {
      var dir = cc.v2(GameApp.dataManager.globalData.gasConfig.safePosition).sub(cc.v2(this.node.position));
      var distance = dir.mag();

      if (GameApp.dataManager.globalData.gasConfig.gasCircle > 0 && distance > GameApp.dataManager.globalData.gasConfig.gasCircle / 2) {
        this._inGasTimer -= dt;

        if (this._inGasTimer < 0) {
          this._inGasTimer = this._inGasInterval;
          this.beDamage(5, -1);
        }

        this._isGas = true;
        !this._isBlock && this.setDir(dir.normalize());
        return;
      } else {
        this._isGas = false;
      }
    } else {
      this._isGas = false;
    }

    if (this._desTime < 0) {
      //1 1 不找  1 0 找  0 1 不找  0 0 不找
      if (!this._isGas && !this._mapNoGun && !this._haveGun) {
        this._desTime = 0.3; // console.log("找枪")

        !this._isBlock && this.searchGun();
      } else {
        if (!this._isGas && GameApp.dataManager.globalData.isInGame && !this._mapNoBox && this._haveGun) {
          this._desTime = 0.3; // console.log("找箱子")

          this.searchBox();
        } else {
          // console.log("巡逻")
          this._desTime = Tools.randomNum(1, 3);
          var desDir = cc.v2(0, 1).rotate(cc.misc.radiansToDegrees(Tools.randomNum(0, 360)));
          !this._isBlock && this.setDir(desDir);
        }
      }
    }
  },
  searchGun: function searchGun() {
    var allGunArr = GameApp.dataManager.globalData.allGunArr.concat();
    var minDis = 1000000;
    var index = -1;

    for (var i = 0; i < allGunArr.length; i++) {
      var distance = cc.v2(allGunArr[i].position).sub(cc.v2(this.node.position)).mag();

      if (distance < minDis) {
        if (GameApp.dataManager.globalData.gasConfig != null) {
          var dirDistance = cc.v2(GameApp.dataManager.globalData.gasConfig.safePosition).sub(cc.v2(allGunArr[i].position)).mag();

          if (dirDistance > GameApp.dataManager.globalData.gasConfig.gasCircle / 2) {
            continue;
          }
        }

        minDis = distance;
        index = i;
      }
    }

    var dir = null;

    if (index == -1) {
      this._mapNoGun = true;
    } else {
      var aimGun = allGunArr[index];
      dir = cc.v2(aimGun.position).sub(cc.v2(this.node.position)).normalize();
    }

    this.setDir(dir);
  },
  searchBox: function searchBox() {
    var allBoxArr = GameApp.dataManager.globalData.allBoxArr.concat();
    var minDis = 1000000;
    var index = -1;

    for (var i = 0; i < allBoxArr.length; i++) {
      var distance = cc.v2(allBoxArr[i].position).sub(cc.v2(this.node.position)).mag();

      if (distance < 10) {
        this.setDir(cc.v2(0, 0));
        return;
      }

      if (distance < minDis) {
        if (GameApp.dataManager.globalData.gasConfig != null) {
          var dirDistance = cc.v2(GameApp.dataManager.globalData.gasConfig.safePosition).sub(cc.v2(allBoxArr[i].position)).mag();

          if (dirDistance > GameApp.dataManager.globalData.gasConfig.gasCircle / 2) {
            continue;
          }
        }

        minDis = distance;
        index = i;
      }
    }

    var dir = cc.v2(0, 0);

    if (index == -1) {
      this._mapNoBox = true;
    } else {
      var aimBox = allBoxArr[index];
      dir = cc.v2(aimBox.position).sub(cc.v2(this.node.position)).normalize();
    }

    this.setDir(dir);
  },
  setSpeedType: function setSpeedType(_type) {
    if (this._isDie) return;

    if (this._speedType != _type) {
      this._speedType = _type;
      var arr = this._choosedSkinId < 21 ? ['await', 'run2', 'run2'] : ['await_fight_1', 'run', 'run'];
      this.roleAnim.setAnimation(0, arr[_type], true);
    }
  },
  setDir: function setDir(_dir) {
    if (this._isDie) return;

    if (_dir && _dir.mag() == 0) {
      this.setSpeedType(_JoystickCommon.SpeedType.STOP);
    } else {
      this.setSpeedType(_JoystickCommon.SpeedType.FAST);
    }

    this.moveDir = _dir;
    if (this._isAim) return;
    this.setGunDir(_dir);
  },
  setGunDir: function setGunDir(_dir) {
    if (_dir == null) {
      _dir = this.moveDir;
    }

    this._gunDir = _dir;
    this._aimDir = _dir;
    if (!this._haveGun) return;
    this.gunNode.rotation = -cc.misc.radiansToDegrees(Math.atan2(_dir.y, _dir.x));
    var theAngle = 90 - this.gunNode.rotation;

    if (theAngle > 180 || theAngle < 0) {
      this.gunNode.scaleY = -1;
    } else {
      this.gunNode.scaleY = 1;
    }
  },
  update: function update(dt) {
    if (this._isDie) return;
    this.doParser(dt);

    switch (this._speedType) {
      case _JoystickCommon.SpeedType.STOP:
        this._moveSpeed = this.stopSpeed;
        break;

      case _JoystickCommon.SpeedType.NORMAL:
        this._moveSpeed = this.normalSpeed; // this._moveSpeed = this.fastSpeed;

        break;

      case _JoystickCommon.SpeedType.FAST:
        this._moveSpeed = this._curSpeed + Math.floor(this._curSpeed * this.equipItemAttr[EquipType.speed]);
        break;

      default:
        break;
    }

    this.move(dt);
    if (this._isProtect) return;
    this._aimTimer -= dt;

    if (this._aimTimer < 0) {
      this._aimTimer = this._aimInterval;
      this.aimToNearest();
    }

    if (this._isAim) {
      this._shootTimer -= dt;

      if (this._shootTimer < 0 && !this._reloadFlag) {
        this._shootTimer = this._shootInterval;
        this.shoot();
      }
    }

    if (this._reloadFlag) {
      this._reloadTimer -= dt;

      if (this._reloadFlag && this._reloadTimer < 0) {
        this._reloadFlag = false;
        this.reloadAmo();
      }
    }
  },
  lateUpdate: function lateUpdate(dt) {// this.mainC.node.setPosition(this.player.position)
    // this.testC.node.setPosition(this.player.position)
    // GameApp.uiManager.mapCamera.node.setPosition(this.node.position)
    // this.mipmapCamera.node.setPosition(this.node.position)
  },
  aimToNearest: function aimToNearest() {
    // return
    if (!this._haveGun) {
      this.gunData.range = 400;
    }

    var allRoleArr = GameApp.dataManager.globalData.allRoleArr.concat(); // for (let i = 0; i < allRoleArr.length; i++) {
    //     if (allRoleArr[i].skinData.skinid == this.skinData.skinid) {
    //         allRoleArr.splice(i, 1)
    //         break
    //     }
    // }

    Tools.removeArray(allRoleArr, this.getComponent("Enemy"));
    var minDis = 1000000;
    var index = -1;

    for (var i = 0; i < allRoleArr.length; i++) {
      var distance = cc.v2(allRoleArr[i].node.position).sub(cc.v2(this.node.position)).mag();

      if (distance < minDis && distance < this.gunData.range * 1.4) {
        minDis = distance;
        index = i;
      }
    }

    var dir = null;

    if (index == -1) {
      this._isAim = false;
    } else {
      var aimEnemy = allRoleArr[index].node;
      dir = cc.v2(aimEnemy.position).sub(cc.v2(this.node.position)).normalize();
      this._isAim = true;
    }

    this.setGunDir(dir);
  },
  shoot: function shoot() {
    if (!this._haveGun) return;

    if (this.reduceAmo()) {
      this.gunAnim.setAnimation(0, 'attack_' + this.gunData.skinname, false);
      var power = Math.ceil(this.gunData.power * (this._curDamage + this.equipItemAttr[EquipType.damage]));
      var isCrit = false;

      if (Tools.isCrit(this._curCrit + this.equipItemAttr[EquipType.crit])) {
        power *= 2;
        isCrit = true;
      }

      if (this.gunData.weaponid == 1002) {
        GameApp.uiManager.isInMapSight(this.node) && GameApp.audioManager.playEffect('shot_shoot', 0.3, false);
        var bullet1 = cc.instantiate(this.bulletPrefab);
        var bullet2 = cc.instantiate(this.bulletPrefab);
        var bullet3 = cc.instantiate(this.bulletPrefab);
        var bulletPos = this.node.parent.parent.convertToNodeSpaceAR(this.gunNode.children[0].convertToWorldSpaceAR(cc.v2(0, 0)));
        bullet1.parent = bullet2.parent = bullet3.parent = this.node.parent.parent;
        bullet1.setPosition(bulletPos);
        bullet2.setPosition(bulletPos);
        bullet3.setPosition(bulletPos);
        bullet1.rotation = this.gunNode.rotation;
        bullet2.rotation = this.gunNode.rotation + 30;
        bullet3.rotation = this.gunNode.rotation - 30;
        var cloneGunDir = cc.v2(this._gunDir);
        var bulletC1 = bullet1.getComponent('Bullet');
        bulletC1._belongTag = this._pbc.tag;
        bulletC1._belongName = this.thisName;
        bulletC1._flyDir = cloneGunDir;
        bulletC1.init(this.gunData, power, isCrit);
        var bulletC2 = bullet2.getComponent('Bullet');
        bulletC2._belongTag = this._pbc.tag;
        bulletC2._belongName = this.thisName;
        bulletC2._flyDir = cloneGunDir.rotate(-cc.misc.degreesToRadians(30));
        bulletC2.init(this.gunData, power, isCrit);
        var bulletC3 = bullet3.getComponent('Bullet');
        bulletC3._belongTag = this._pbc.tag;
        bulletC3._belongName = this.thisName;
        bulletC3._flyDir = cloneGunDir.rotate(-cc.misc.degreesToRadians(-30));
        bulletC3.init(this.gunData, power, isCrit);
      } else {
        if (this.gunData.weaponid == 1003) {
          GameApp.uiManager.isInMapSight(this.node) && GameApp.audioManager.playEffect('charge_shoot', 0.3, false);
        } else if (this.gunData.weaponid == 1005) {
          GameApp.uiManager.isInMapSight(this.node) && GameApp.audioManager.playEffect('missile_shoot', 0.3, false);
        }

        var bullet = cc.instantiate(this.bulletPrefab);

        var _bulletPos = this.node.parent.parent.convertToNodeSpaceAR(this.gunNode.children[0].convertToWorldSpaceAR(cc.v2(0, 0)));

        bullet.parent = this.node.parent.parent;
        bullet.setPosition(_bulletPos);
        bullet.rotation = this.gunNode.rotation;
        var bulletC = bullet.getComponent('Bullet');
        bulletC._belongTag = this._pbc.tag;
        bulletC._belongName = this.thisName;
        bulletC._flyDir = this._gunDir;
        bulletC.init(this.gunData, power, isCrit);
      }

      this.updateAmoShow();
    } else {
      this.reload();
    }

    if (this._curAmoNum == 0) {
      this.reload();
    }
  },
  reduceAmo: function reduceAmo() {
    var a = this._curAmoNum - 1;

    if (a < 0) {
      this._curAmoNum = 0;
      this.updateAmoShow();
      return false;
    } else {
      this._curAmoNum = a;
      this.updateAmoShow();
      return true;
    }
  },
  reload: function reload() {
    if (!this._haveGun) return;
    if (this._reloadFlag) return;
    GameApp.uiManager.isInMapSight(this.node) && GameApp.audioManager.playEffect('reload', 0.6);
    this.gunAnim.setAnimation(0, 'reload_' + this.gunData.skinname, false);
    this._reloadTimer = this._reloadInterval;
    this._reloadFlag = true;
  },
  reloadAmo: function reloadAmo() {
    this._curAmoNum = this._maxAmoNum;
    this.updateAmoShow();
  },
  updateAmoShow: function updateAmoShow() {
    this.amoBar.progress = this._curAmoNum / this._maxAmoNum;
  },
  updateHpShow: function updateHpShow() {
    this.hpBar.progress = this._curHp / this._maxHp;
  },
  equipWeapon: function equipWeapon(_kind) {
    GameApp.uiManager.isInMapSight(this.node) && GameApp.audioManager.playEffect('pick_item', 0.6);
    this.gunData = GameApp.dataManager.jsonData.WeaponData[_kind];
    this._shootInterval = this.gunData.shootdelay;
    this._reloadInterval = this.gunData.reloaddelay;
    this._maxAmoNum = this.gunData.clipnum;
    this.reloadAmo();
    this.gunNode.active = true;

    if (_kind < 3) {
      this.gunAnim.skeletonData = GameApp.uiManager.gunSkinDataGroup[0];
    } else {
      this.gunAnim.skeletonData = GameApp.uiManager.gunSkinDataGroup[1];
    }

    this.gunAnim.setSkin(this.gunData.skinname);
    this._haveGun = true;
    this.setGunDir(this.moveDir); // this.gunAnim.setAnimation(0, 'attack_' + this.gunData.skinname, false)
  },
  getItem: function getItem() {},
  onBeginContact: function onBeginContact(contact, self, other) {
    var _this = this;

    if (this._isDie) return;
    if (self.tag == Tags.empty) return;

    if (other.tag == Tags.item) {
      var groundItem = other.node.getComponent('GroundItem');

      if (groundItem.itemType._type == ItemType.weapon) {
        var _kind = groundItem.itemType._kind;

        if (!this._haveGun) {
          Tools.removeArray(GameApp.dataManager.globalData.allGunArr, other.node);
          this.equipWeapon(_kind);
          other.node.destroy();
        } else {} // let _param = {
        //     _type: ItemType.weapon,
        //     _kind: GameApp.dataManager.jsonData.WeaponData.indexOf(this.gunData)
        // }
        // groundItem.init(_param)
        // this.equipWeapon(_kind)

      } else if (groundItem.itemType._type == ItemType.item) {
        this.getItem();
      }
    } else if (other.tag == Tags.bullet) {
      if (!GameApp.dataManager.globalData.isInGame) return;
      var bC = other.node.getComponent('Bullet');
      if (bC._belongTag == self.tag) return;
      if (other.node == this.lastHitBullet) return;
      this.lastHitBullet = other.node;
      this.beDamage(bC._power, bC._belongTag, bC._belongName, bC._isCrit, bC.gunData.weaponid);
    } else if (other.tag == Tags.collider) {
      this._isBlock = true;
      this.moveDir && this.moveDir.rotateSelf(cc.misc.degreesToRadians(Tools.randomNum(90, 180)));
      this.scheduleOnce(function () {
        _this._isBlock = false;
      }, 0.5);
    } else if (other.tag == Tags.boom) {
      this.beDamage(999, -2);
    }
  },
  reduceHp: function reduceHp(_num) {
    var a = this._curHp - _num;

    if (a <= 0) {
      this._curHp = 0;
      this.updateHpShow();
      return false;
    } else {
      this._curHp = a;
      this.updateHpShow();
      return true;
    }
  },
  beDamage: function beDamage(_power, _belongIndex, _belongName, _isCrit, _weaponid) {
    var _this2 = this;

    GameApp.uiManager.isInMapSight(this.node) && GameApp.uiManager.showGameObject("InfoLabel", function (node) {
      var originPos = node.parent.convertToNodeSpaceAR(_this2.node.convertToWorldSpaceAR(cc.v2(0.5, 0.5)));
      node.setPosition(originPos);

      var _isDef = Math.ceil(_power * _this2._curDef) + Math.ceil(_power * _this2.equipItemAttr[EquipType.def]);

      _power -= _isDef;
      var str = "<color=red>-" + _power + "</color>";

      if (_isCrit) {
        str = "<color=red>暴击-" + _power + "</color>";
      }

      if (_isDef) {
        str += "<color=#0fffff>减伤" + _isDef + "</color>";
      }

      node.getComponent(cc.RichText).string = "<b>" + str + "</b>";
      var desPos = cc.v2(Tools.randomNum(60, 100), Tools.randomNum(60, 100));
      var bezier = [originPos, cc.v2(originPos.x + desPos.x - 20, originPos.y + desPos.y + 20), originPos.add(desPos)];
      var seq = cc.sequence(cc.spawn(cc.fadeIn(0.2), cc.scaleTo(0.3, 1.5), cc.bezierTo(0.3, bezier)), cc.delayTime(0.5), cc.fadeOut(0.3), cc.callFunc(function () {
        node.destroy();
      }));
      node.runAction(seq);
    }, this.node.parent.parent); // console.log(GameApp.dataManager.globalData.allRoleArr)

    if (this.reduceHp(_power)) {} else {
      GameApp.uiManager.isInMapSight(this.node) && GameApp.audioManager.playEffect('maleDeath', 0.5);
      this.node.parent = GameApp.uiManager.getGame("GameMap").getChildByName("DeadObjectNode");
      this._pbc.enabled = false;
      this._isDie = true;

      if (_belongIndex == -1) {
        GameApp.uiManager.showToast(this.thisName + " 被毒出局");
      } else if (_belongIndex == -2) {
        GameApp.uiManager.showToast(this.thisName + " 被轰炸出局");
      } else {
        var killNum = GameApp.dataManager.addKillNum(_belongIndex, _belongName);

        if (_belongName == GameApp.dataManager.userData.playerName) {
          _belongName = "<color=#0fffff>" + _belongName + "</color>";
        }

        if (killNum > 1) {
          var soundIndex = killNum > 5 ? 5 : killNum;
          GameApp.audioManager.playEffect('kill' + soundIndex, 0.5);
          GameApp.uiManager.showToast(_belongName, null, killNum);
        } else {
          GameApp.uiManager.showToast(_belongName + " 击杀了 " + this.thisName);
        } //任务相关


        if (_belongIndex == 1) {
          cc.log("玩家杀人了");
          GameApp.dataManager.addActivityNum(1, 1);

          if (_weaponid == 1102) {
            GameApp.dataManager.addActivityNum(0, 1);
          }
        }
      }

      if (this._haveGun) {
        var theParentC = GameApp.uiManager.gameRoot.children[0].getComponent("GameMap");
        GameApp.uiManager.showGameObject("GroundItem", function (node) {
          var ddd = theParentC.allGunNode.convertToNodeSpaceAR(_this2.node.convertToWorldSpaceAR(cc.v2(0, 0)));
          node.parent = theParentC.allGunNode;
          node.setPosition(ddd);
          var _param = {
            _type: ItemType.weapon,
            _kind: Tools.getIndex(GameApp.dataManager.jsonData.WeaponData, _this2.gunData)
          }; // console.log(_param._kind)

          node.getComponent('GroundItem').init(_param);
          GameApp.dataManager.globalData.allGunArr.push(node);
        });
      }

      this.node.stopActionByTag(1); // for (var i in GameApp.dataManager.globalData.allRoleArr) {
      //     if (GameApp.dataManager.globalData.allRoleArr[i].skinData.skinid == this.skinData.skinid) {
      //         GameApp.dataManager.globalData.allRoleArr.splice(i, 1)
      //         break;
      //     }
      // }

      var arr = this._choosedSkinId < 21 ? ['dead'] : ['dead2'];
      this.roleAnim.setAnimation(0, arr[0], false);
      this.gunNode.active = false;
      Tools.removeArray(GameApp.dataManager.globalData.allRoleArr, this.node.getComponent('Enemy'));
      GameApp.eventManager.emit(EventNames.EVENT_SHOW_ALLROLENUM_UI);
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/GameUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '22560Ckc7ZILqFwWW4hovUj', 'GameUI');
// scripts/ui/GameUI.js

"use strict";

var Utils = require("Utils");

cc.Class({
  "extends": cc.Component,
  properties: {
    joystick: {
      "default": null,
      type: cc.Node,
      tooltip: '摇杆的脚本'
    },
    btnArr: {
      "default": [],
      type: [cc.Node]
    },
    soundNode: cc.Node,
    gameUIPanel: cc.Node,
    shootBtn: cc.Node,
    reloadBtnNode: cc.Node,
    amoUI: cc.Label,
    allRoleNumUI: cc.Label,
    weaponBtnNode: cc.Node,
    mipmapNode: cc.Node,
    prepareTopNode: cc.Node,
    // readActSp: cc.SpriteFrame,
    countDownSpGroup: [cc.SpriteFrame],
    rankGroup: [cc.Node],
    _shootFlag: false,
    _shootTimer: 0,
    _reloadFlag: false,
    _reloadTimer: 0,
    _theGameBegin: false,
    _protectTimeCountDown: 8,
    _onceCountDownAnim: false,
    _onceGasCountDownAnim: false,
    gasNodeUI: cc.Node,
    safeNode: cc.Node,
    gasNode: cc.Node,
    boomNode: cc.Node,
    _gasState: 0,
    //0是不动圈,不现时。1是画圈,倒计时。2是缩圈,提示字。
    _gasCountDownTimer: 40,
    _gasCountDownInterval: 20,
    safeCircle: 150,
    _boxCountDownTimer: 20,
    _boxCountDownInterval: 50,
    _dropTime: 0,
    _boomCountDownTimer: 30,
    _boomCountDownInterval: 50,
    tipNode: cc.Node,
    flashBtn: cc.Node,
    flashCDUI: cc.Label,
    healthBtn: cc.Node,
    healthCDUI: cc.Label,
    _flashTimer: 0,
    _flashInCD: false,
    _healthTimer: 0,
    _healthInCD: false,
    mipNode: cc.Node,
    _mipBoxGroup: [],
    boxAttrNodeGroup: [cc.Node],
    equipAttrNodeGroup: [cc.Node]
  },
  onLoad: function onLoad() {
    this._gasState = 0;
    this._gasCountDownTimer = 40;
    this._gasCountDownInterval = 20;
    this.safeCircle = 150;
    this._boxCountDownTimer = 20;
    this._boxCountDownInterval = 50;
    this._boomCountDownTimer = 30;
    this._boomCountDownInterval = 50;
    GameApp.eventManager.on(EventNames.EVENT_UPDATE_AMO_SHOW, this.updateAmoShow.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_SHOW_GUN_UI, this.updateGunUIShow.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_SHOW_RELOAD_UI, this.updateReloadUIShow.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_SHOW_ALLROLENUM_UI, this.updateAllRoleNumUIShow.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_GAME_BEGIN, this.gameBegin.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_UPDATE_MIPMAP_PLAYER, this.updateMipmapPlayer.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_UPDATE_RANK_SHOW, this.updateRankShow.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_NOTYFY_BOX_DISMISS, this.notifyBoxDismiss.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_NOTYFY_BOOM_DISMISS, this.notifyBoomDismiss.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_SHOW_BOXITEM, this.showBoxItemUI.bind(this));
    this.shootBtn.on(cc.Node.EventType.TOUCH_START, this.onTouchBegin, this);
    this.shootBtn.on(cc.Node.EventType.TOUCH_END, this.onTouchLeave, this);
    this.shootBtn.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchLeave, this);
    this.weaponBtnNode.children[0].runAction(cc.rotateBy(0.2, 90).repeatForever());

    if (GameApp.dataManager.userData.isFirstPlay) {
      this.tipNode.active = true;
      this.tipNode.children[0].runAction(cc.sequence(cc.moveTo(0.5, cc.v2(0, 10)), cc.moveTo(0.5, cc.v2(0, -10))).repeatForever());
    }

    this.updateSoundBtnShow();
  },
  onDestroy: function onDestroy() {
    GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_AMO_SHOW);
    GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_GUN_UI);
    GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_RELOAD_UI);
    GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_ALLROLENUM_UI);
    GameApp.eventManager.removeListener(EventNames.EVENT_GAME_BEGIN);
    GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_MIPMAP_PLAYER);
    GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_RANK_SHOW);
    GameApp.eventManager.removeListener(EventNames.EVENT_NOTYFY_BOX_DISMISS);
    GameApp.eventManager.removeListener(EventNames.EVENT_NOTYFY_BOOM_DISMISS);
    GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_BOXITEM);
  },
  init: function init(_chooseType, _bili, _speedUpJump) {
    GameApp.uiManager.showGame('GameMap', function (node) {
      node.getComponent("GameMap").init(_chooseType, _bili, _speedUpJump);
    });
    GameApp.uiManager.showToast("落地后请尽快寻找枪械");
  },
  gameBegin: function gameBegin() {
    this._theGameBegin = true;
    this.gameUIPanel.active = true;
  },
  update: function update(dt) {
    this._shootTimer -= dt;

    if (this._shootFlag && this._shootTimer < 0 && !this._reloadFlag) {
      this._shootTimer = GameApp.dataManager.globalData.shootInterval;
      this.shoot();
    }

    if (this._reloadFlag) {
      this._reloadTimer -= dt;

      if (this._reloadFlag && this._reloadTimer < 0) {
        this._reloadFlag = false;
        GameApp.dataManager.reloadAmo();
      }
    }

    this.gasCountDown(dt);
    this.boxCountDown(dt);
    this.boomCountDown(dt);
    this.duleFlash(dt);
    this.duleHealth(dt);
    if (!this._theGameBegin) return;
    this.protectCcountDown(dt);
  },
  duleFlash: function duleFlash(dt) {
    this._flashTimer -= dt;

    if (this._flashTimer < 0) {
      this._flashInCD = false;
      this.flashBtn.children[0].active = true;
      this.flashBtn.children[1].active = false;
    }

    if (this._flashInCD) {
      this.flashCDUI.string = Math.floor(this._flashTimer);
    } else {
      this.flashCDUI.string = "";
    }
  },
  duleHealth: function duleHealth(dt) {
    this._healthTimer -= dt;

    if (this._healthTimer < 0) {
      this._healthInCD = false;
      this.healthBtn.children[0].active = true;
      this.healthBtn.children[1].active = false;
    }

    if (this._healthInCD) {
      this.healthCDUI.string = Math.floor(this._healthTimer);
    } else {
      this.healthCDUI.string = "";
    }
  },
  protectCcountDown: function protectCcountDown(dt) {
    this._protectTimeCountDown -= dt;

    if (this._protectTimeCountDown < 6) {
      this.prepareTopNode.children[1].active = true;
      this.protectCcountDownAnim();
      this.prepareTopNode.children[1].getComponent(cc.Sprite).spriteFrame = this.countDownSpGroup[Math.floor(this._protectTimeCountDown - 1)];
    }

    if (Math.floor(this._protectTimeCountDown) <= 0) {
      GameApp.eventManager.emit(EventNames.EVENT_THEGAMESTART);
      this.prepareTopNode.active = false;
      this._theGameBegin = false;
    }
  },
  protectCcountDownAnim: function protectCcountDownAnim() {
    var _this = this;

    if (this._onceCountDownAnim) return;
    this._onceCountDownAnim = true;
    GameApp.audioManager.playEffect('waitSceneCutDown');
    var seq = cc.sequence(cc.scaleTo(0.2, 1.5), cc.scaleTo(0.3, 1), cc.delayTime(0.5), cc.callFunc(function () {
      _this._onceCountDownAnim = false;
    }));
    this.prepareTopNode.children[1].runAction(seq);
  },
  gasCountDown: function gasCountDown(dt) {
    this._gasCountDownTimer -= dt; //0是不动圈,不现时。1是画圈,倒计时。2是缩圈,提示字。

    switch (this._gasState) {
      case 0:
        this.quietGasState();
        break;

      case 1:
        this.refreshCircleAndCD(dt);
        break;

      case 2:
        this.reduceCircleAndTip(dt);
        break;
    }
  },
  quietGasState: function quietGasState() {
    if (this._gasCountDownTimer < 16) {
      this.gasNodeUI.children[0].active = true;
      this.gasNodeUI.children[1].active = true;
      this.gasNodeUI.children[2].active = false;
      this.gasNodeUI.children[3].getComponent(cc.RichText).string = "毒气倒计时";
      this.gasNodeUI.active = true;
      this.safeNode.children[0].active = true;
      this.safeNode.children[0].width = this.safeNode.children[0].height = this.safeCircle + 5;
      var theWidth = this.gasNode.width;

      if (theWidth == 300) {
        theWidth = 204;
      }

      if (this.safeCircle == 0) {
        this.safeNode.setPosition(this.gasNode.position);
      } else {
        this.safeNode.setPosition(Tools.pointOfRandom(this.safeNode.position, theWidth / 2, this.safeCircle / 2));
      }

      this.safeNode.width = this.safeNode.height = this.safeCircle;
      GameApp.audioManager.playEffect('gasAlert');
      GameApp.audioManager.playEffect('noticeGasComing');
      this.safeNode.children[0].runAction(cc.sequence(cc.spawn(cc.scaleTo(0, 1), cc.fadeIn(0)), cc.spawn(cc.scaleTo(1, 1.3), cc.fadeOut(1))).repeat(2));
      this._gasState = 1; // GameApp.eventManager.emit(EventNames.EVENT_UPDATE_GAS_SHOW, 1, this.safeCircle)
    }
  },
  refreshCircleAndCD: function refreshCircleAndCD(dt) {
    this.gasNodeUI.children[0].getComponent(cc.RichText).string = Math.floor(this._gasCountDownTimer) + "秒";

    if (this._gasCountDownTimer < 0) {
      this.gasNodeUI.children[0].active = false;
      this.gasNodeUI.children[1].active = false;
      this.gasNodeUI.children[2].active = true;
      this.gasNodeUI.children[3].getComponent(cc.RichText).string = "<color=#0fffff>毒气正在扩散</color>";
      GameApp.audioManager.playEffect('noticeGasDiffusion');
      this.gasNodeUI.children[2].runAction(cc.sequence(cc.fadeOut(0.3), cc.fadeIn(0.5)).repeatForever());
      this._gasState = 2;
      GameApp.eventManager.emit(EventNames.EVENT_UPDATE_GAS_SHOW, 2, {
        safeCircle: this.safeCircle,
        safePosition: this.safeNode.position
      });
    }
  },
  reduceCircleAndTip: function reduceCircleAndTip(dt) {
    if (this.safeCircle < 0) {
      return;
    }

    if (this.gasNode.width <= this.safeCircle) {
      this._gasCountDownTimer = this._gasCountDownInterval;
      this.gasNode.width = this.gasNode.height = this.safeCircle;
      this.safeCircle -= 50;
      this.gasNodeUI.active = false;

      if (this.safeCircle < 0) {
        GameApp.audioManager.playEffect('noticeGasNoWay');
        return;
      }

      this._gasState = 0;
      return;
    }

    this.gasNode.width -= dt * 10;
    this.gasNode.height -= dt * 10;
    if (this.safeCircle == 0) return;

    if (!Tools.isIntersect(this.gasNode.position, this.gasNode.width / 2, this.safeNode.position, this.safeCircle / 2)) {} else {
      if (Math.abs(this.gasNode.width - this.safeCircle) > 0.05) //外圈和内圈圆心重合,半径相同
        {
          // k = y/x
          // y = kx
          // x^2+y^2 = 1
          // x^2 = 1/(k^2+1)
          var k = (this.gasNode.y - this.safeNode.y) / (this.gasNode.x - this.safeNode.x);
          var x_off = dt * 10 * parseFloat(Math.sqrt(1 / (k * k + 1))); // 通过mPoint_outer和mPoint_inner的x坐标来判断此时外圆圆心要移动的是该 + x_off（x轴偏移量）还是 -x_off

          this.gasNode.x += 1 * (this.gasNode.x < this.safeNode.x ? 1 : -1) * x_off; // 知道变化后的外圈圆心的x坐标，和直线方程来求对应的y坐标

          this.gasNode.y = k * (this.gasNode.x - this.safeNode.x) + this.safeNode.y;
        }
    }
  },
  boxCountDown: function boxCountDown(dt) {
    if (this._dropTime >= 2) return;
    this._boxCountDownTimer -= dt;

    if (this._boxCountDownTimer < 0) {
      this._boxCountDownTimer = this._boxCountDownInterval;
      this.dropBox();
    }
  },
  boomCountDown: function boomCountDown(dt) {
    if (this._dropTime >= 2) return;
    this._boomCountDownTimer -= dt;

    if (this._boomCountDownTimer < 0) {
      this._boomCountDownTimer = this._boomCountDownInterval;
      this.dropBoom();
    }
  },
  dropBox: function dropBox() {
    var _this2 = this;

    GameApp.audioManager.playEffect('noticeExpShow');
    var theNumArr = [10, 6, 3, 2];

    var _loop = function _loop(i) {
      GameApp.uiManager.showGameObject("MipBox", function (node) {
        _this2._mipBoxGroup.push(node);

        var thePos = Tools.pointOfRandom(_this2.safeNode.position, _this2.safeCircle / 2, 0);
        node.setPosition(thePos);

        var paramPos = _this2.mipNode.convertToNodeSpaceAR(node.convertToWorldSpaceAR(cc.v2(0.5, 0.5)));

        GameApp.eventManager.emit(EventNames.EVENT_DROP_BOX, paramPos, _this2._dropTime + "" + i);
        node.children[0].runAction(cc.sequence(cc.scaleTo(1, 4), cc.scaleTo(0, 1), cc.fadeOut(0)).repeat(2)); // node.getComponent("DropBox").init()
      }, _this2.mipNode);
    };

    for (var i = 0; i < theNumArr[this._dropTime]; i++) {
      _loop(i);
    }

    this._dropTime++; // GameApp.eventManager.emit(EventNames.EVENT_DROP_BOX, this.safeCircle)
  },
  dropBoom: function dropBoom() {
    if (this.safeCircle <= 0) return;
    GameApp.audioManager.playEffect('noticeBoomComing');
    this.boomNode.active = true;
    this.boomNode.setPosition(Tools.pointOfRandom(this.safeNode.position, this.safeCircle / 2, this.boomNode.width / 2));
    GameApp.eventManager.emit(EventNames.EVENT_DROP_BOOM, this.mipNode.convertToNodeSpaceAR(this.boomNode.convertToWorldSpaceAR(cc.v2(0.5, 0.5))), this.boomNode.width);
  },
  notifyBoxDismiss: function notifyBoxDismiss(_index) {
    this._mipBoxGroup[parseInt(_index)].destroy();
  },
  notifyBoomDismiss: function notifyBoomDismiss(_index) {
    this.boomNode.active = false;
  },
  showBoxItemUI: function showBoxItemUI() {
    var _this3 = this;

    this.boxAttrNodeGroup.forEach(function (element) {
      element.active = false;
    });
    var arr = [0, 1, 2, 3];
    var randNum = Tools.randomNum(3, 4);
    var randArr = Tools.getRandomAmountElementUnRepeat(arr, randNum).nodeArr; // console.log(randArr)

    randArr.forEach(function (element) {
      var _rank = GameApp.dataManager.globalData.getItemAttrArr[element].rank;

      if (_rank == 3) {
        // console.log(element + "号关闭了")
        _this3.boxAttrNodeGroup[element].active = false;
      } else {
        var param = {
          rank: _rank + 1,
          item: ItemAttr[element][_rank]
        };
        _this3.boxAttrNodeGroup[element].children[0].getComponent(cc.Label).string = param.rank + "级";
        _this3.boxAttrNodeGroup[element].children[1].getComponent(cc.Label).string = param.item.des;

        _this3.boxAttrNodeGroup[element].children[2].runAction(cc.rotateBy(0.2, 90).repeatForever());

        _this3.boxAttrNodeGroup[element].active = true; // console.log(element + "号打开了")
      }
    });
  },
  boxItemUIBtnClick: function boxItemUIBtnClick(eventTouch, customEventData) {
    var _selectIndex = parseInt(customEventData) - 1; // console.log("选择了" + _selectIndex + "号装备")


    GameApp.dataManager.equipBoxItem(_selectIndex);
    this.boxAttrNodeGroup.forEach(function (element) {
      element.active = false;
    });
    this.updateEquipShowUI();
  },
  updateEquipShowUI: function updateEquipShowUI() {
    var arr = GameApp.dataManager.getEquipShowAttr();

    for (var i in this.equipAttrNodeGroup) {
      if (arr[i] == null) {
        this.equipAttrNodeGroup[i].active = false;
      } else {
        this.equipAttrNodeGroup[i].children[0].getComponent(cc.Label).string = arr[i].rank + "级";
        this.equipAttrNodeGroup[i].children[1].getComponent(cc.Label).string = arr[i].item.des;
        this.equipAttrNodeGroup[i].active = true;
      }
    }
  },
  // gasCountDownAnim() {
  //     if (this._onceGasCountDownAnim) return
  //     this._onceGasCountDownAnim = true
  // },
  onTouchBegin: function onTouchBegin(event) {
    this._shootFlag = true;
  },
  onTouchLeave: function onTouchLeave(event) {
    this._shootFlag = false;
    GameApp.eventManager.emit(EventNames.EVENT_AIM, false);
  },
  shoot: function shoot() {
    GameApp.eventManager.emit(EventNames.EVENT_AIM, true);
    GameApp.eventManager.emit(EventNames.EVENT_PLAYER_SHOOT);
  },
  updateAmoShow: function updateAmoShow() {
    this.amoUI.string = GameApp.dataManager.globalData.curAmoNum;
    GameApp.eventManager.emit(EventNames.EVENT_UPDATE_TOPBAR_SHOW);
  },
  updateGunUIShow: function updateGunUIShow(event, _gunData) {
    if (_gunData) {
      this.weaponBtnNode.getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame("ui_weapon_" + _gunData.weaponid);
      this.weaponBtnNode.children[1].children[0].getComponent(cc.Label).string = _gunData.name;
    }

    this.weaponBtnNode.active = event;
  },
  updateReloadUIShow: function updateReloadUIShow(event) {
    this.reloadBtnNode.active = event;
  },
  updateAllRoleNumUIShow: function updateAllRoleNumUIShow() {
    var theRank = GameApp.dataManager.globalData.allRoleArr.length;

    if (theRank == 1) {
      var theRole = GameApp.dataManager.globalData.allRoleArr[0];

      if (theRole._pbc.tag == Tags.player) {
        GameApp.uiManager.getPopup("OverPopup") == null && GameApp.uiManager.showPopup("OverPopup", function (node) {
          node.getComponent("OverPopup").init(true, theRank);
        });
      }
    }

    this.allRoleNumUI.string = theRank + "人存活";
  },
  updateMipmapPlayer: function updateMipmapPlayer(event) {
    this.mipmapNode.children[2].setPosition(event);
  },
  updateMipmapBox: function updateMipmapBox(event) {},
  updateRankShow: function updateRankShow() {
    var theArr = GameApp.dataManager.globalData.inGameKillNum.concat();
    theArr.sort(function (a, b) {
      return b._killNum - a._killNum;
    });

    for (var i = 0; i < 5; i++) {
      var theName = theArr[i]._belongName;

      if (theName == GameApp.dataManager.userData.playerName) {
        theName = "<color=#0fffff>" + theArr[i]._belongName + "</color>";
      }

      this.rankGroup[i].children[0].getComponent(cc.RichText).string = theName;
      this.rankGroup[i].children[1].getComponent(cc.Label).string = theArr[i]._killNum;
    }
  },
  reloadBtnClick: function reloadBtnClick() {
    GameApp.audioManager.playEffect('click');
    if (this._reloadFlag) return;
    this._reloadTimer = GameApp.dataManager.globalData.reloadInterval;
    this._reloadFlag = true;
    GameApp.eventManager.emit(EventNames.EVENT_PLAYER_RELOAD);
  },
  weaponBtnClick: function weaponBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.eventManager.emit(EventNames.EVENT_PICKUP_WEAPON);
  },
  flashBtnClick: function flashBtnClick() {
    if (this._flashInCD) {
      GameApp.uiManager.showToast("技能正在冷却中");
    } else {
      this.tipNode.active = false;
      GameApp.eventManager.emit(EventNames.EVENT_FLASH);
      this.flashBtn.children[0].active = false;
      this.flashBtn.children[1].active = true;
      this._flashTimer = GameApp.dataManager.getSkillCD();
      this._flashInCD = true;
    }
  },
  healthBtnClick: function healthBtnClick() {
    GameApp.audioManager.playEffect('click');

    if (this._healthInCD) {
      GameApp.uiManager.showToast("技能正在冷却中");
    } else {
      GameApp.eventManager.emit(EventNames.EVENT_RESUME_HEALTH);
      this.healthBtn.children[0].active = false;
      this.healthBtn.children[1].active = true;
      this._healthTimer = GameApp.dataManager.getSkillCD();
      this._healthInCD = true;
    }
  },
  backBtnClick: function backBtnClick() {
    GameApp.uiManager.showUI('LoginUI');
  },
  soundBtnClick: function soundBtnClick() {
    GameApp.audioManager.playEffect('click');
    var onoff = !GameApp.audioManager._effectOn;
    GameApp.audioManager.setEffect(onoff); // GameApp.audioManager.setEffect(onoff)

    this.updateSoundBtnShow();
  },
  updateSoundBtnShow: function updateSoundBtnShow() {
    this.soundNode.children[0].active = GameApp.audioManager._effectOn;
    this.soundNode.children[1].active = !GameApp.audioManager._effectOn;
  },
  updateRecordBtnShow: function updateRecordBtnShow() {
    this.btnArr[0].active = GameApp.dataManager.globalData.recordState == RecordState.RECORD;
    this.btnArr[1].active = GameApp.dataManager.globalData.recordState == RecordState.PAUSE || GameApp.dataManager.globalData.recordState == RecordState.READY;
  },
  recordBtnClick: function recordBtnClick() {
    GameApp.audioManager.playEffect('click');
    var self = this;

    switch (GameApp.dataManager.globalData.recordState) {
      case RecordState.RECORD:
        Utils.pauseRecord(function () {
          GameApp.dataManager.changeRecordState(RecordState.PAUSE);
          self.updateRecordBtnShow();
        });
        break;

      case RecordState.PAUSE:
        Utils.resumeRecord(function () {
          GameApp.dataManager.changeRecordState(RecordState.RECORD);
          self.updateRecordBtnShow();
        });
        break;
      //预备bug情况

      case RecordState.READY:
        console.log("录屏bug了");
        break;
    }
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/manager/DataManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8ad44fXOFxB4J34LEZZE1b8', 'DataManager');
// scripts/manager/DataManager.js

"use strict";

/**录屏状态 */
window.RecordState = cc.Enum({
  READY: 0,
  RECORD: 1,
  PAUSE: 2
});
cc.Class({
  name: "DataManager",
  properties: {
    MD5Code: null,
    userData: {
      "default": {}
    }
  },
  ctor: function ctor() {
    this.userData = {
      isFirstPlay: true,
      playerName: "菠萝吹雪",
      coinNum: 0,
      choosedSkinId: 1,
      //21~30是独立的spine文件
      unLockedSkinIdArr: [1],
      playedVideoNum: 0,
      havePieceNum: {
        26: 0,
        27: 0,
        28: 0,
        29: 0,
        30: 0
      },
      box1NeedCoinNum: 100,
      box1RewardCoinNum: [50, 150],
      box2RewardCoinNum: [250, 500],
      //下面是人物基础属性
      baseHp: 100,
      baseDamage: 1,
      baseCrit: 0,
      baseSpeed: 200,
      baseCd: 0,
      baseDef: 0,
      baseRecovery: 1,
      //下面是战绩统计
      alDieNum: 0,
      allKillNum: 0,
      allPlayNum: 0,
      winNum: 0,
      top5Num: 0,
      winRate: 0,
      kd: 0,
      avgRank: 0,
      mostKill: 0,
      avgLifeTime: 0
    };
    this.globalData = {
      days: 1,
      curDailyGot: false,
      shootInterval: 0,
      reloadInterval: 0,
      maxAmoNum: 20,
      curAmoNum: 20,
      maxHp: 100,
      curHp: 100,
      curDamage: 0,
      curCrit: 0,
      curSpeed: 200,
      curCd: 0,
      curDef: 0,
      curRecovery: 0,
      allRoleArr: [],
      allGunArr: [],
      allBoxArr: [],
      isInGame: false,
      //用于区分准备场景和游戏场景，准备场景是不会造成伤害的，也不显示一些UI
      inGameKillNum: [],
      gasConfig: null,
      getItemAttrArr: [{
        rank: 0,
        item: null
      }, {
        rank: 0,
        item: null
      }, {
        rank: 0,
        item: null
      }, {
        rank: 0,
        item: null
      }],
      //伤害，防御，移速，暴击
      equipItemAttr: [0, 0, 0, 0],
      //(装备带来的属性)伤害，防御，移速，暴击
      lifeTime: 0,
      //在线相关
      onLineTime: 0,
      //累计在线时长
      onLineGifts: [2, 2, 2],
      //0未完成，1可领取，2已领取
      onLineGiftCurNum: 0,
      //当前一批任务最大金币数和所需在线时长(+5)
      //活跃相关
      activeValue: 0,
      //活跃值
      activityGifts: [2, 2, 2],
      //0未完成，1可领取，2已领取
      activityNum: [0, 0, 0],
      //当前三个任务完成数量
      activityCurNum: [0, 0, 0],
      activityCurCoin: [0, 0, 0],
      progressGifts: [0, 0, 0, 0],
      //0是未达成，1是可领取，2是已领取
      activityAddNum: [1, 3, 1],
      //每阶段任务增量
      activityAddCoin: [50, 100, 100],
      //每阶段金币增量
      //////
      playerNameArr: ["隋晗蕾", "驹夏之", "壬紫雪", "华清涵", "厍岚彩", "依雪兰", "俟骊婧", "声采珊", "愈成济", "暴雨", "党雁丝", "柴俊郎", "潜春芳", "衷亦巧", "越世敏", "祈桐", "菅昆锐", "卑绍钧", "浑秀英", "牛俊悟", "汲永康", "虎胤文", "宿巧春", "海合瑞", "朋曾", "哈蝶", "宏睿文", "黎泰然"],
      recordPath: null,
      recordTimer: 0,
      recordState: RecordState.READY
    }; //皮肤

    this.jsonData = {
      SkinsData: [],
      WeaponData: [],
      RobotName: []
    };
  },
  initSomeAttr: function initSomeAttr() {
    var _this = this;

    cc.game.on(cc.game.EVENT_HIDE, function () {
      console.log("进入后台前存储了数据");
      cc.sys.localStorage.setItem("EatChicken_onLineTime", parseInt(_this.globalData.onLineTime));
    });
    var getState = cc.sys.localStorage.getItem("EatChicken_dailyGotState");

    if (getState == "true" || getState == true) {
      this.globalData.curDailyGot = true;
    } else {
      this.globalData.curDailyGot = false;
    }

    var tempOnLinetime = cc.sys.localStorage.getItem("EatChicken_onLineTime");

    if (tempOnLinetime == null || tempOnLinetime == undefined || tempOnLinetime == "") {
      tempOnLinetime = 0;
      cc.sys.localStorage.setItem("EatChicken_onLineTime", 0);
    } else {
      tempOnLinetime = parseInt(tempOnLinetime);
    }

    this.globalData.onLineTime = tempOnLinetime;
    var tempOnLineGifts = cc.sys.localStorage.getItem("EatChicken_onLineGifts");

    if (tempOnLineGifts == null || tempOnLineGifts == undefined || tempOnLineGifts == "") {
      tempOnLineGifts = [2, 2, 2];
      cc.sys.localStorage.setItem("EatChicken_onLineGifts", JSON.stringify(tempOnLineGifts));
    } else {
      tempOnLineGifts = JSON.parse(tempOnLineGifts);
    }

    this.globalData.onLineGifts = tempOnLineGifts;
    var tempOnLineGiftCurNum = cc.sys.localStorage.getItem("EatChicken_onLineGiftCurNum");

    if (tempOnLineGiftCurNum == null || tempOnLineGiftCurNum == undefined || tempOnLineGiftCurNum == "") {
      tempOnLineGiftCurNum = 0;
      cc.sys.localStorage.setItem("EatChicken_onLineGiftCurNum", 0);
    } else {
      tempOnLineGiftCurNum = parseInt(tempOnLineGiftCurNum);
    }

    this.globalData.onLineGiftCurNum = tempOnLineGiftCurNum;
    var tempactiveValue = cc.sys.localStorage.getItem("EatChicken_activeValue");

    if (tempactiveValue == null || tempactiveValue == undefined || tempactiveValue == "") {
      tempactiveValue = 0;
      cc.sys.localStorage.setItem("EatChicken_activeValue", 0);
    } else {
      tempactiveValue = parseInt(tempactiveValue);
    }

    this.globalData.activeValue = tempactiveValue;
    var tempactivityGifts = cc.sys.localStorage.getItem("EatChicken_activityGifts");

    if (tempactivityGifts == null || tempactivityGifts == undefined || tempactivityGifts == "") {
      tempactivityGifts = [2, 2, 2];
      cc.sys.localStorage.setItem("EatChicken_activityGifts", JSON.stringify(tempactivityGifts));
    } else {
      tempactivityGifts = JSON.parse(tempactivityGifts);
    }

    this.globalData.activityGifts = tempactivityGifts;
    var tempactivityNum = cc.sys.localStorage.getItem("EatChicken_activityNum");

    if (tempactivityNum == null || tempactivityNum == undefined || tempactivityNum == "") {
      tempactivityNum = [0, 0, 0];
      cc.sys.localStorage.setItem("EatChicken_activityNum", JSON.stringify(tempactivityNum));
    } else {
      tempactivityNum = JSON.parse(tempactivityNum);
    }

    this.globalData.activityNum = tempactivityNum;
    var tempactivityCurNum = cc.sys.localStorage.getItem("EatChicken_activityCurNum");

    if (tempactivityCurNum == null || tempactivityCurNum == undefined || tempactivityCurNum == "") {
      tempactivityCurNum = [0, 0, 0];
      cc.sys.localStorage.setItem("EatChicken_activityCurNum", JSON.stringify(tempactivityCurNum));
    } else {
      tempactivityCurNum = JSON.parse(tempactivityCurNum);
    }

    this.globalData.activityCurNum = tempactivityCurNum;
    var tempactivityCurCoin = cc.sys.localStorage.getItem("EatChicken_activityCurCoin");

    if (tempactivityCurCoin == null || tempactivityCurCoin == undefined || tempactivityCurCoin == "") {
      tempactivityCurCoin = [0, 0, 0];
      cc.sys.localStorage.setItem("EatChicken_activityCurCoin", JSON.stringify(tempactivityCurCoin));
    } else {
      tempactivityCurCoin = JSON.parse(tempactivityCurCoin);
    }

    this.globalData.activityCurCoin = tempactivityCurCoin;
    var tempprogressGifts = cc.sys.localStorage.getItem("EatChicken_progressGifts");

    if (tempprogressGifts == null || tempprogressGifts == undefined || tempprogressGifts == "") {
      tempprogressGifts = [0, 0, 0, 0];
      cc.sys.localStorage.setItem("EatChicken_progressGifts", JSON.stringify(tempprogressGifts));
    } else {
      tempprogressGifts = JSON.parse(tempprogressGifts);
    }

    this.globalData.progressGifts = tempprogressGifts;
    this.globalData.allRoleArr = [];
    this.globalData.allGunArr = [];
    this.globalData.allBoxArr = [];
    this.globalData.inGameKillNum = [];
    this.globalData.gasConfig = null;
    this.globalData.getItemAttrArr = [{
      rank: 0,
      item: null
    }, {
      rank: 0,
      item: null
    }, {
      rank: 0,
      item: null
    }, {
      rank: 0,
      item: null
    }]; //伤害，防御，移速，暴击

    this.globalData.equipItemAttr = [0, 0, 0, 0];
    this.globalData.maxHp = this.globalData.curHp = this.userData.baseHp;
    this.globalData.curDamage = this.userData.baseDamage;
    this.globalData.curCrit = this.userData.baseCrit;
    this.globalData.curSpeed = this.userData.baseSpeed;
    this.globalData.curCd = this.userData.baseCd;
    this.globalData.curDef = this.userData.baseDef;
    this.globalData.curRecovery = this.userData.baseRecovery; // for (let i = 0; i < 30; i++) {
    //     this.globalData.inGameKillNum.push({
    //         _killNum: 0,
    //         _belongName: ""
    //     })
    // }
  },
  setPlayerName: function setPlayerName(_name) {
    this.userData.playerName = _name;
    this.save();
  },
  addCoin: function addCoin(_num) {
    this.userData.coinNum += _num;
    GameApp.eventManager.emit(EventNames.EVENT_UPDATE_COIN_SHOW);
    this.save();
  },
  reduceCoin: function reduceCoin(_num) {
    var a = this.userData.coinNum - _num;

    if (a < 0) {
      return false;
    } else {
      this.userData.coinNum = a;
      GameApp.eventManager.emit(EventNames.EVENT_UPDATE_COIN_SHOW);
      this.save();
      return true;
    }
  },
  unLockSkin: function unLockSkin(_skinId) {
    if (this.userData.unLockedSkinIdArr.indexOf(_skinId) == -1) {
      this.userData.unLockedSkinIdArr.push(_skinId);
    }
  },
  addPieceNum: function addPieceNum(_pieceIndex, _num) {
    var _this2 = this;

    this.userData.havePieceNum[_pieceIndex] += _num;
    var arr = [26, 27, 28, 29, 30];
    arr.forEach(function (index) {
      if (_this2.userData.havePieceNum[index] >= _this2.getSkinDataById(index).needpiece) {
        _this2.unLockSkin(index);
      }
    });
    this.save();
  },
  addPlayedVideoNum: function addPlayedVideoNum() {
    var _this3 = this;

    this.userData.playedVideoNum++;
    var arr = [21, 22, 23, 24, 25];
    arr.forEach(function (index) {
      if (_this3.userData.playedVideoNum >= _this3.getSkinDataById(index).needgem) {
        _this3.unLockSkin(index);
      }
    });
    this.save();
  },
  getSkinDataById: function getSkinDataById(_skinId) {
    return this.jsonData.SkinsData[_skinId - 1];
  },
  setChoosedSkinId: function setChoosedSkinId(_val) {
    _val > 30 && (_val = 1);
    _val < 1 && (_val = 30);
    this.userData.choosedSkinId = _val;
    this.addSkinAttr();
    this.save();
  },
  addSkinAttr: function addSkinAttr() {
    var curSkinData = this.getSkinDataById(this.userData.choosedSkinId);
    this.globalData.maxHp = this.globalData.curHp = this.userData.baseHp + Math.floor(this.userData.baseHp * (curSkinData.att_hpmax / 100));
    this.globalData.curDamage = this.userData.baseDamage + curSkinData.att_damage / 100;
    this.globalData.curCrit = this.userData.baseCrit + curSkinData.att_crit / 10;
    this.globalData.curSpeed = this.userData.baseSpeed + Math.floor(this.userData.baseSpeed * (curSkinData.att_speed / 100));
    this.globalData.curCd = this.userData.baseCd + curSkinData.att_cd / 100;
    this.globalData.curDef = this.userData.baseDef + curSkinData.att_defense / 100;
    this.globalData.curRecovery = this.userData.baseRecovery + curSkinData.att_recovery / 100;
  },
  getChoosedSkinId: function getChoosedSkinId() {
    return this.userData.choosedSkinId;
  },
  reduceHp: function reduceHp(_num) {
    var a = this.globalData.curHp - _num;

    if (a <= 0) {
      this.globalData.curHp = 0;
      GameApp.eventManager.emit(EventNames.EVENT_UPDATE_TOPBAR_SHOW);
      return false;
    } else {
      this.globalData.curHp = a;
      GameApp.eventManager.emit(EventNames.EVENT_UPDATE_TOPBAR_SHOW);
      return true;
    }
  },
  getResumeHealthNum: function getResumeHealthNum() {
    return 10 * this.globalData.curRecovery;
  },
  getSkillCD: function getSkillCD() {
    return 10 * (1 - this.globalData.curCd);
  },
  addHp: function addHp(_num) {
    var a = this.globalData.curHp + _num;

    if (a > this.globalData.maxHp) {
      this.globalData.curHp = this.globalData.maxHp;
    } else {
      this.globalData.curHp = a;
    }

    GameApp.eventManager.emit(EventNames.EVENT_UPDATE_TOPBAR_SHOW);
  },
  reduceAmo: function reduceAmo() {
    var a = this.globalData.curAmoNum - 1;

    if (a < 0) {
      this.globalData.curAmoNum = 0;
      GameApp.eventManager.emit(EventNames.EVENT_UPDATE_AMO_SHOW);
      return false;
    } else {
      this.globalData.curAmoNum = a;
      GameApp.eventManager.emit(EventNames.EVENT_UPDATE_AMO_SHOW);
      return true;
    }
  },
  reloadAmo: function reloadAmo() {
    this.globalData.curAmoNum = this.globalData.maxAmoNum;
    GameApp.eventManager.emit(EventNames.EVENT_UPDATE_AMO_SHOW);
  },
  addKillNum: function addKillNum(_index, _belongName) {
    if (_index == 1) {
      _index = 0;
    } else {
      _index -= 9;
    }

    this.globalData.inGameKillNum[_index]._killNum++;
    this.globalData.inGameKillNum[_index]._belongName = _belongName;
    GameApp.eventManager.emit(EventNames.EVENT_UPDATE_RANK_SHOW);
    return this.globalData.inGameKillNum[_index]._killNum;
  },
  equipBoxItem: function equipBoxItem(_index) {
    var _rank = this.globalData.getItemAttrArr[_index].rank + 1;

    this.globalData.getItemAttrArr[_index] = {
      rank: _rank,
      item: ItemAttr[_index][_rank - 1]
    }; // var _num = 1
    // if (_index == 3) {
    //     _num = 0
    // }

    this.globalData.equipItemAttr[_index] = this.globalData.getItemAttrArr[_index].item.attr;
    GameApp.eventManager.emit(EventNames.EVENT_UPDATE_STAR_SHOW);
  },
  getEquipItemAttr: function getEquipItemAttr(_index) {
    return this.globalData.equipItemAttr[_index];
  },
  getEquipShowAttr: function getEquipShowAttr() {
    var arr = [];

    for (var i in this.globalData.getItemAttrArr) {
      var _rank = this.globalData.getItemAttrArr[i].rank;

      if (_rank == 0) {
        arr.push(null);
      } else {
        arr.push(this.globalData.getItemAttrArr[i]);
      }
    }

    return arr;
  },
  getOnLineGiftsState: function getOnLineGiftsState(_index) {
    return this.globalData.onLineGifts[_index];
  },
  getActivityGiftsState: function getActivityGiftsState(_index) {
    return this.globalData.activityGifts[_index];
  },
  setOnLineGiftsState: function setOnLineGiftsState(_index, _state) {
    this.globalData.onLineGifts[_index] = _state;
    cc.sys.localStorage.setItem("EatChicken_onLineGifts", JSON.stringify(this.globalData.onLineGifts));
  },
  setActivityGiftsState: function setActivityGiftsState(_index, _state) {
    this.globalData.activityGifts[_index] = _state;
    cc.sys.localStorage.setItem("EatChicken_activityGifts", JSON.stringify(this.globalData.activityGifts));
  },
  getOnlineTimeMinute: function getOnlineTimeMinute() {
    var minuteTime = 0;
    var newtime = Tools.toTimeString2(this.globalData.onLineTime);
    minuteTime = Math.floor(newtime.hour * 60 + newtime.minute);
    return minuteTime;
  },
  addActiveValue: function addActiveValue(_num) {
    var a = this.globalData.activeValue + _num;

    if (a > 120) {
      a = 120;
    }

    this.globalData.activeValue = a;
    var arr = [30, 60, 90, 120];

    for (var i in arr) {
      if (this.globalData.progressGifts[i] == 0) {
        if (this.globalData.activeValue >= arr[i]) {
          this.setProgressGifts(i, 1);
        }
      }
    }

    cc.sys.localStorage.setItem("EatChicken_activeValue", this.globalData.activeValue);
  },
  addActivityNum: function addActivityNum(_index, _num) {
    //更新对应任务完成数量
    this.globalData.activityNum[_index] += _num;
    cc.sys.localStorage.setItem("EatChicken_activityNum", JSON.stringify(this.globalData.activityNum));
  },
  setProgressGifts: function setProgressGifts(_index, _state) {
    this.globalData.progressGifts[_index] = _state;
    cc.sys.localStorage.setItem("EatChicken_progressGifts", JSON.stringify(this.globalData.progressGifts));
  },
  save: function save() {
    cc.sys.localStorage.setItem("EatChicken_UserData", JSON.stringify(this.userData));
  },
  //////////////////////////////////////////////////////////下卖弄是通用的
  changeRecordState: function changeRecordState(state) {
    this.globalData.recordState = state;
  },
  setMD5Code: function setMD5Code(_data) {
    this.MD5Code = _data;
  },
  getMD5Code: function getMD5Code() {
    return this.MD5Code;
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/GameMap.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fc94bOW2txGwZfe6BFh7ITa', 'GameMap');
// scripts/ui/GameMap.js

"use strict";

var _properties;

cc.Class({
  "extends": cc.Component,
  properties: (_properties = {
    tiledMap: cc.TiledMap,
    objectPrefab: cc.Prefab,
    colliderPrefab: cc.Prefab,
    groundItemPrefab: cc.Prefab,
    allObjectNode: cc.Node,
    allColliderNode: cc.Node,
    allGunNode: cc.Node,
    otherGunPos: cc.Node,
    enemySpawnPosGroupNode: cc.Node,
    paratrooperNode: cc.Node,
    cloudNode: cc.Node,
    mapAtlas: cc.SpriteAtlas,
    _timer0: 0.1,
    _timer: 0.1,
    readyToSort: false,
    gasPanel: cc.Node,
    dropPanel: cc.Node,
    boomPanel: cc.Node,
    safeCircle: 10240,
    safePosition: cc.v2(0, 0),
    _gasState: 0
  }, _properties["safeCircle"] = 0, _properties._dropTime = 0, _properties._mipBoxGroup = [], _properties),
  onLoad: function onLoad() {
    GameApp.eventManager.on(EventNames.EVENT_UPDATE_GAS_SHOW, this.updateGasShow.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_DROP_BOX, this.dropBox.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_NOTYFY_BOX_DISMISS, this.notifyBoxDismiss.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_DROP_BOOM, this.dropBoom.bind(this));
    this.initMapShow(); // this.showCloud()
    // this.showPlayer()
    // this.showEnemy()
  },
  onDestroy: function onDestroy() {
    GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_GAS_SHOW);
    GameApp.eventManager.removeListener(EventNames.EVENT_DROP_BOX);
    GameApp.eventManager.removeListener(EventNames.EVENT_NOTYFY_BOX_DISMISS);
    GameApp.eventManager.removeListener(EventNames.EVENT_DROP_BOOM);
  },
  init: function init(_chooseType, _bili, _speedUpJump) {
    var _this = this;

    this.showCloud(_speedUpJump);
    this.showParatrooperPlayer(_chooseType, _bili);
    this.schedule(function () {
      _this.showParatrooperEnemy(_chooseType, Tools.randomNum(0, 100) / 100);
    }, 0.1, 29, 0.5);
    this.initGas();
  },
  update: function update(dt) {
    this.gasCountDown(dt);
    if (!this.readyToSort) return;
    this._timer -= dt;

    if (this._timer < 0) {
      this._timer = this._timer0;
      this.sortAll();
    }
  },
  initGas: function initGas() {
    this.gasPanel.children[1].width = this.gasPanel.children[1].height = 10240 * (300 / 204); // this.gasPanel.children[0].width = this.gasPanel.children[0].height = this.gasPanel.children[1].width / 0.98

    this.gasPanel.children[1].runAction(cc.sequence(cc.fadeTo(1, 200), cc.fadeTo(0.8, 255)).repeatForever());
  },
  updateGasShow: function updateGasShow(_state, event) {
    this._gasState = _state;
    this.safeCircle = 10240 * (event.safeCircle / 204);
    this.safePosition.x = 10240 * (event.safePosition.x / 204);
    this.safePosition.y = 10240 * (event.safePosition.y / 204);
    GameApp.dataManager.globalData.gasConfig = {
      safePosition: this.gasPanel.children[1].position,
      gasCircle: this.gasPanel.children[1].width
    };
  },
  gasCountDown: function gasCountDown(dt) {
    if (this.safeCircle < 0) {
      return;
    }

    if (this._gasState == 2) {
      // console.log(this.gasPanel.children[1].width)
      if (this.gasPanel.children[1].width <= this.safeCircle) {
        this.gasPanel.children[1].width = this.gasPanel.children[1].height = this.safeCircle; // this.gasPanel.children[0].width = this.gasPanel.children[0].height = this.safeCircle / 0.98

        if (this.safeCircle <= 0) {
          this.safeCircle -= 50; //为了变成负数

          return;
        }

        return;
      }

      var delt = dt * (10 / 204 * 10240);
      this.gasPanel.children[1].width -= delt;
      this.gasPanel.children[1].height -= delt; // this.gasPanel.children[0].width -= delt
      // this.gasPanel.children[0].height -= delt

      GameApp.dataManager.globalData.gasConfig = {
        safePosition: this.gasPanel.children[1].position,
        gasCircle: this.gasPanel.children[1].width
      };
      if (this.safeCircle == 50) return;

      if (!Tools.isIntersect(this.gasPanel.children[1].position, this.gasPanel.children[1].width / 2, this.safePosition, this.safeCircle / 2)) {} else {
        if (Math.abs(this.gasPanel.children[1].width - this.safeCircle) > 0.01) //外圈和内圈圆心重合,半径相同
          {
            // k = y/x
            // y = kx
            // x^2+y^2 = 1
            // x^2 = 1/(k^2+1)
            var k = (this.gasPanel.children[1].y - this.safePosition.y) / (this.gasPanel.children[1].x - this.safePosition.x);
            var x_off = delt * parseFloat(Math.sqrt(1 / (k * k + 1))); // 通过mPoint_outer和mPoint_inner的x坐标来判断此时外圆圆心要移动的是该 + x_off（x轴偏移量）还是 -x_off

            this.gasPanel.children[1].x += 1 * (this.gasPanel.children[1].x < this.safePosition.x ? 1 : -1) * x_off; // 知道变化后的外圈圆心的x坐标，和直线方程来求对应的y坐标

            this.gasPanel.children[1].y = k * (this.gasPanel.children[1].x - this.safePosition.x) + this.safePosition.y; // // 通过mPoint_outer和mPoint_inner的x坐标来判断此时外圆圆心要移动的是该 + x_off（x轴偏移量）还是 -x_off
            // this.gasPanel.children[0].x += 1 * (this.gasPanel.children[1].x < this.safePosition.x ? 1 : -1) * x_off;
            // // 知道变化后的外圈圆心的x坐标，和直线方程来求对应的y坐标
            // this.gasPanel.children[0].y = k * (this.gasPanel.children[1].x - this.safePosition.x) + this.safePosition.y;

            GameApp.dataManager.globalData.gasConfig = {
              safePosition: this.gasPanel.children[1].position,
              gasCircle: this.gasPanel.children[1].width
            };
          }
      }
    }
  },
  dropBox: function dropBox(_thePos, _index) {
    var _this2 = this;

    _thePos = _thePos.div(204).mul(10240);
    GameApp.uiManager.showGameObject("DropBox", function (node) {
      _this2._mipBoxGroup.push(node);

      GameApp.dataManager.globalData.allBoxArr.push(node);
      node.setPosition(_thePos);
      node.getComponent("DropBox").init(Tools.getIndex(_this2._mipBoxGroup, node));
      GameApp.eventManager.emit(EventNames.EVENT_NOTIFY_ENEMY_MAPBOX);
    }, this.dropPanel);
  },
  notifyBoxDismiss: function notifyBoxDismiss(_index) {
    Tools.removeArray(GameApp.dataManager.globalData.allBoxArr, this._mipBoxGroup[parseInt(_index)]);

    this._mipBoxGroup[parseInt(_index)].destroy();
  },
  dropBoom: function dropBoom(_thePos, _theWidth) {
    _thePos = _thePos.div(204).mul(10240);
    _theWidth = 10240 * _theWidth / 204;
    var boomArr = [];

    for (var i = 0; i < 10; i++) {
      boomArr.push(Tools.pointOfRandom(_thePos, _theWidth / 2, 0));
    }

    this.dropItBoom(boomArr, 0);
  },
  dropItBoom: function dropItBoom(boomArr, _index) {
    var _this3 = this;

    if (_index >= boomArr.length) {
      GameApp.eventManager.emit(EventNames.EVENT_NOTYFY_BOOM_DISMISS);
      return;
    }

    var _delay = Tools.randomNum(0, 2, true);

    this.node.runAction(cc.sequence(cc.delayTime(_delay), cc.callFunc(function () {
      GameApp.uiManager.showGameObject("Boom", function (node) {
        // console.log(boomArr[_index])
        node.setPosition(boomArr[_index]);
        node.children[0].getComponent(sp.Skeleton).setAnimation(0, "animation", true);
        node.children[0].runAction(cc.sequence(cc.moveBy(1, cc.v2(0, -220)), cc.fadeOut(0)));
        node.children[1].runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function () {
          GameApp.audioManager.playEffect('boom');
          var coli = node.getComponent(cc.PhysicsBoxCollider);
          coli.enabled = true;
          var theAnim = node.children[1].getComponent(sp.Skeleton);
          theAnim.setAnimation(0, "boom1", false);
          theAnim.setCompleteListener(function () {
            coli.enabled = false;
            node.destroy();
          });
        })));
      }, _this3.boomPanel);

      _this3.dropItBoom(boomArr, ++_index);
    })));
  },
  initMapShow: function initMapShow() {
    var _this4 = this;

    GameApp.dataManager.globalData.allRoleArr = [];
    GameApp.dataManager.globalData.allGunArr = []; // this.node.children[2].active = true

    var wallLayer = this.tiledMap.getLayer("wall");

    this.tiledMap.getObjectGroup("dynamic")._objects.forEach(function (element) {
      var obj = cc.instantiate(_this4.objectPrefab);
      obj.getComponent(cc.Sprite).spriteFrame = _this4.mapAtlas.getSpriteFrame(element.name.split('.')[0]);
      obj.parent = _this4.allColliderNode;
      var desPos = wallLayer.getPositionAt(_this4.getTilePos(cc.v2(element.x, element.y)));
      obj.setPosition(desPos);

      var ddd = _this4.allObjectNode.convertToNodeSpaceAR(obj.convertToWorldSpaceAR(cc.v2(0, 0)));

      obj.parent = _this4.allObjectNode;
      obj.setPosition(ddd);
    });

    this.tiledMap.getObjectGroup("collision")._objects.forEach(function (element) {
      var obj = cc.instantiate(_this4.colliderPrefab);
      var coli = obj.getComponent(cc.PhysicsBoxCollider);
      coli.size = cc.size(element.width, element.height);
      coli.offset = cc.v2(element.width / 2, -element.height / 2);
      coli.apply();

      _this4.allColliderNode.addChild(obj);

      obj.setPosition(cc.v2(element.x, element.y));
      coli.tag = Tags.collider;
    });
  },
  showParatrooperPlayer: function showParatrooperPlayer(_chooseType, _bili) {
    var _this5 = this;

    GameApp.uiManager.showGameObject('ParatrooperPlayer', function (node) {
      var pC = node.getComponent('ParatrooperPlayer');
      pC.init(_this5.enemySpawnPosGroupNode.children);
      GameApp.uiManager.getUI("GameUI").getComponent("GameUI").joystick.getComponent("Joystick").player = pC;
      var theX = 0;
      var theY = 0;

      if (_chooseType == 0) {
        theX = (_this5.enemySpawnPosGroupNode.children[3].x - _this5.enemySpawnPosGroupNode.children[0].x) * _bili - _this5.enemySpawnPosGroupNode.children[3].x;
        theY = (_this5.enemySpawnPosGroupNode.children[3].y - _this5.enemySpawnPosGroupNode.children[0].y) * _bili - _this5.enemySpawnPosGroupNode.children[3].y;
      } else {
        theX = (_this5.enemySpawnPosGroupNode.children[1].x - _this5.enemySpawnPosGroupNode.children[2].x) * _bili - _this5.enemySpawnPosGroupNode.children[1].x;
        theY = (_this5.enemySpawnPosGroupNode.children[1].y - _this5.enemySpawnPosGroupNode.children[2].y) * _bili - _this5.enemySpawnPosGroupNode.children[1].y;
      }

      node.setPosition(theX, theY);
    }, this.paratrooperNode);
  },
  showParatrooperEnemy: function showParatrooperEnemy(_chooseType, _bili) {
    var _this6 = this;

    GameApp.uiManager.showGameObject('ParatrooperEnemy', function (node) {
      node.getComponent('ParatrooperEnemy').init(_this6.enemySpawnPosGroupNode.children);
      var theX = 0;
      var theY = 0;

      if (_chooseType == 0) {
        theX = (_this6.enemySpawnPosGroupNode.children[3].x - _this6.enemySpawnPosGroupNode.children[0].x) * _bili - _this6.enemySpawnPosGroupNode.children[3].x;
        theY = (_this6.enemySpawnPosGroupNode.children[0].y - _this6.enemySpawnPosGroupNode.children[3].y) * _bili - _this6.enemySpawnPosGroupNode.children[0].y;
      } else {
        theX = (_this6.enemySpawnPosGroupNode.children[1].x - _this6.enemySpawnPosGroupNode.children[2].x) * _bili - _this6.enemySpawnPosGroupNode.children[1].x;
        theY = (_this6.enemySpawnPosGroupNode.children[1].y - _this6.enemySpawnPosGroupNode.children[2].y) * _bili - _this6.enemySpawnPosGroupNode.children[1].y;
      }

      node.setPosition(theX, theY);
      var desDir = cc.v2(0, 10).rotate(cc.misc.radiansToDegrees(Tools.randomNum(0, 360))); // var randTime = Tools.randomNum(2, 4)

      node.runAction(cc.repeatForever(cc.moveBy(0.1, desDir)));
    }, this.paratrooperNode);
  },
  showCloud: function showCloud(_speedUpJump) {
    var _this7 = this;

    var _jumpTime = 2;

    if (_speedUpJump) {
      _jumpTime = 1;
    }

    GameApp.uiManager.mapCamera.zoomRatio = 0.3;
    var each0_05 = 0.3 / (3.6 + _jumpTime * 3) / 100 * 5;
    var act = cc.sequence(cc.callFunc(function () {
      if (GameApp.uiManager.mapCamera.zoomRatio >= 0.8) {
        GameApp.uiManager.mapCamera.zoomRatio = 0.8;
        return;
      }

      GameApp.uiManager.mapCamera.zoomRatio += each0_05; //0.0015625
    }), cc.delayTime(0.05)).repeatForever();
    this.cloudNode.runAction(act);
    _jumpTime = _jumpTime ? _jumpTime : 2;
    this.cloudNode.runAction(cc.sequence(cc.callFunc(function () {
      _this7.cloudNode.children[0].active = true;
    }), cc.delayTime(0.3), cc.callFunc(function () {
      GameApp.audioManager.playEffect('skydivingBegin', null, 1);
      _this7.cloudNode.children[1].active = true;
    }), cc.delayTime(0.3), cc.callFunc(function () {
      _this7.cloudNode.children[2].active = true;
    }), cc.delayTime(0.3), cc.callFunc(function () {
      _this7.cloudNode.children[3].active = true;
    }), cc.delayTime(_jumpTime), cc.callFunc(function () {
      GameApp.audioManager.playEffect('skydivingWind', null, 2);
      _this7.cloudNode.children[0].active = false;
    }), cc.delayTime(0.3), cc.callFunc(function () {
      _this7.cloudNode.children[1].active = true;
    }), cc.delayTime(0.3), cc.callFunc(function () {
      _this7.cloudNode.children[2].active = true;
    }), cc.delayTime(0.3), cc.callFunc(function () {
      _this7.cloudNode.children[3].active = true;
    }), cc.delayTime(_jumpTime), cc.callFunc(function () {
      _this7.cloudNode.children[0].active = false;
    }), cc.delayTime(0.3), cc.callFunc(function () {
      _this7.cloudNode.children[1].active = false;
    }), cc.delayTime(0.3), cc.callFunc(function () {
      _this7.cloudNode.children[2].active = true;
    }), cc.delayTime(0.3), cc.callFunc(function () {
      _this7.cloudNode.children[3].active = true;
    }), cc.delayTime(_jumpTime), cc.callFunc(function () {
      _this7.cloudNode.children[0].active = false;
    }), cc.delayTime(0.3), cc.callFunc(function () {
      _this7.cloudNode.children[1].active = false;
    }), cc.delayTime(0.3), cc.callFunc(function () {
      _this7.cloudNode.children[2].active = false;
    }), cc.delayTime(0.3), cc.callFunc(function () {
      _this7.cloudNode.children[3].active = true;
    }), cc.delayTime(_jumpTime), cc.callFunc(function () {
      // console.log(GameApp.uiManager.mapCamera.zoomRatio)
      _this7.gameBegin(_speedUpJump);
    })));
  },
  gameBegin: function gameBegin(_speedUpJump) {
    var _this8 = this;

    GameApp.dataManager.globalData.isInGame = true;
    this.cloudNode.destroy();
    GameApp.uiManager.mapCamera.zoomRatio = 0.8;
    GameApp.audioManager.playEffect('skydivingToGround', null, 1);
    GameApp.eventManager.emit(EventNames.EVENT_GAME_BEGIN);
    var landUpPos = this.paratrooperNode.children[0].position;
    this.paratrooperNode.destroyAllChildren();
    this.showGun();
    this.showPlayer(landUpPos);

    if (_speedUpJump) {
      this.node.runAction(cc.sequence(cc.delayTime(5), cc.callFunc(function () {
        _this8.showEnemy();
      })));
    } else {
      this.showEnemy();
    }
  },
  showGun: function showGun() {
    var _this9 = this;

    var wallLayer = this.tiledMap.getLayer("wall");

    this.tiledMap.getObjectGroup("grass")._objects.forEach(function (element) {
      // var element = this.tiledMap.getObjectGroup("gun")._objects[0]
      var obj = cc.instantiate(_this9.groundItemPrefab);
      obj.parent = _this9.allColliderNode;
      var desPos = wallLayer.getPositionAt(_this9.getTilePos(cc.v2(element.x, element.y)));
      obj.setPosition(desPos);

      var ddd = _this9.allGunNode.convertToNodeSpaceAR(obj.convertToWorldSpaceAR(cc.v2(0, 0)));

      obj.parent = _this9.allGunNode;
      obj.setPosition(ddd);
      var _param = {
        _type: ItemType.weapon,
        _kind: Tools.randomNum(0, 5)
      };
      obj.getComponent('GroundItem').init(_param);
      GameApp.dataManager.globalData.allGunArr.push(obj);
    });

    this.otherGunPos.children.forEach(function (posNode) {
      var obj = cc.instantiate(_this9.groundItemPrefab);

      var ddd = _this9.allGunNode.convertToNodeSpaceAR(posNode.convertToWorldSpaceAR(cc.v2(0, 0)));

      obj.parent = _this9.allGunNode;
      obj.setPosition(ddd);
      var _param = {
        _type: ItemType.weapon,
        _kind: Tools.randomNum(0, 5)
      };
      obj.getComponent('GroundItem').init(_param);
      GameApp.dataManager.globalData.allGunArr.push(obj);
    });
  },
  //将像素坐标转化为瓦片坐标，posInPixel：目标节点的position
  getTilePos: function getTilePos(posInPixel) {
    var mapSize = this.tiledMap.node.getContentSize();
    var tileSize = this.tiledMap.getTileSize();
    var x = Math.floor(posInPixel.x / tileSize.width);
    var y = Math.floor((mapSize.height - posInPixel.y) / tileSize.height);
    return cc.v2(x, y);
  },
  showPlayer: function showPlayer(landUpPos) {
    GameApp.uiManager.showGameObject('Player', function (node) {
      // GameApp.dataManager.globalData.allRoleArr.push(node)
      node.setPosition(landUpPos);
      var c = node.getComponent("Player");
      GameApp.uiManager.getUI("GameUI").getComponent("GameUI").joystick.getComponent("Joystick").player = c;
      c.init();
      GameApp.dataManager.globalData.allRoleArr.push(c); // this.readyToSort = true
    }, this.allObjectNode);
  },
  showEnemy: function showEnemy() {
    var _this10 = this;

    var tempPosArr = [];
    var standardArr = this.enemySpawnPosGroupNode.children; // var xRangeArr = []
    // var eachSpaceX = (standardArr[1].x - standardArr[0].x) / 6
    // for (let i = 0; i < 7; i++) {
    //     xRangeArr.push(standardArr[0].x + eachSpaceX * i)
    // }
    // var yRangeArr = []
    // var eachSpaceY = (standardArr[2].y - standardArr[0].y) / 5
    // for (let i = 0; i < 6; i++) {
    //     yRangeArr.push(standardArr[0].y + eachSpaceY * i)
    // }
    // for (let i = 0; i < xRangeArr.length; i++) {
    //     for (let j = 0; j < yRangeArr.length; j++) {
    //         tempPosArr.push(cc.v2(xRangeArr[i], yRangeArr[j]))
    //     }
    // }

    for (var _i = 0; _i < 30; _i++) {
      tempPosArr.push(cc.v2(Tools.randomNum(standardArr[0].x, standardArr[1].x), Tools.randomNum(standardArr[2].y, standardArr[0].y)));
    } // tempPosArr = Tools.getRandomAmountElementUnRepeat(tempPosArr, 30)


    var tagNum = Tags.enemy;

    for (var i = 0; i < tempPosArr.length; i++) {
      if (i + 1 == GameApp.dataManager.userData.choosedSkinId) {
        continue;
      }

      GameApp.uiManager.showGameObject('Enemy', function (node) {
        // GameApp.dataManager.globalData.allRoleArr.push(node)
        node.getComponent(cc.PhysicsBoxCollider).tag = tagNum++;
        node.setPosition(tempPosArr[i]);
        var c = node.getComponent("Enemy");
        c.init(i + 1, GameApp.dataManager.jsonData.RobotName[i]);
        GameApp.dataManager.globalData.inGameKillNum.push({
          _killNum: 0,
          _belongName: GameApp.dataManager.jsonData.RobotName[i]
        });
        GameApp.dataManager.globalData.allRoleArr.push(c);
        _this10.readyToSort = true;
      }, this.allObjectNode);
    }

    GameApp.eventManager.emit(EventNames.EVENT_SHOW_ALLROLENUM_UI);
    GameApp.eventManager.emit(EventNames.EVENT_UPDATE_RANK_SHOW);
  },
  sortAll: function sortAll() {
    var cloneObjArr = this.allObjectNode.children.concat();
    var tempDict = [];
    var tempIndex = [];

    for (var i in cloneObjArr) {
      if (GameApp.uiManager.isInMapSight(cloneObjArr[i])) {
        tempDict.push({
          y: cloneObjArr[i].y,
          index: i
        });
        tempIndex.push(i);
      }
    }

    tempDict.sort(function (a, b) {
      return b.y - a.y;
    });

    for (var _i2 in tempDict) {
      cloneObjArr[tempDict[_i2].index].setSiblingIndex(tempDict[_i2]);
    } // console.log(tempDict)
    // console.log(this.allObjectNode.children)

  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/data/PrefabPath.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd25dcKl/4dFeZ+1ROEIEuTd', 'PrefabPath');
// scripts/data/PrefabPath.js

"use strict";

var PREFAB_PATH = {
  ToastUI: 'uiPrefab/ToastUI',
  SplashUI: 'uiPrefab/SplashUI',
  LoginUI: 'uiPrefab/LoginUI',
  SkinUI: 'uiPrefab/SkinUI',
  SkinInfoPopup: 'uiPrefab/SkinInfoPopup',
  BoxUI: 'uiPrefab/BoxUI',
  GunUI: 'uiPrefab/GunUI',
  RankUI: 'uiPrefab/RankUI',
  GiftPopup: 'uiPrefab/GiftPopup',
  OpenBoxPopup: 'uiPrefab/OpenBoxPopup',
  PrepareUI: 'uiPrefab/PrepareUI',
  PrepareMap: 'uiPrefab/PrepareMap',
  Player: 'game/Player',
  Enemy: 'game/Enemy',
  GroundItem: 'game/GroundItem',
  PlaneUI: 'uiPrefab/PlaneUI',
  GameUI: 'uiPrefab/GameUI',
  GameMap: 'uiPrefab/GameMap',
  ParatrooperPlayer: 'game/ParatrooperPlayer',
  ParatrooperEnemy: 'game/ParatrooperEnemy',
  InfoLabel: 'game/InfoLabel',
  DropBox: 'game/DropBox',
  MipBox: 'game/MipBox',
  Boom: 'game/Boom',
  OverPopup: 'uiPrefab/OverPopup',
  DailyPopup: 'uiPrefab/DailyPopup',
  ActivityPopup: 'uiPrefab/ActivityPopup' // BoxLayer: 'uiPrefab/BoxLayer',
  // CoinNode: 'uiPrefab/CoinNode',
  // GameLayer: 'uiPrefab/GameLayer',
  // GameUI: 'uiPrefab/GameUI',
  // GiftLayer: 'uiPrefab/GiftLayer',
  // ItemNode: 'uiPrefab/ItemNode',
  // LoadLayer: 'uiPrefab/LoadLayer',
  // MainLayer: 'uiPrefab/MainLayer',
  // Skins: 'data/skins.json'

};
module.exports = PREFAB_PATH;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcZGF0YVxcUHJlZmFiUGF0aC5qcyJdLCJuYW1lcyI6WyJQUkVGQUJfUEFUSCIsIlRvYXN0VUkiLCJTcGxhc2hVSSIsIkxvZ2luVUkiLCJTa2luVUkiLCJTa2luSW5mb1BvcHVwIiwiQm94VUkiLCJHdW5VSSIsIlJhbmtVSSIsIkdpZnRQb3B1cCIsIk9wZW5Cb3hQb3B1cCIsIlByZXBhcmVVSSIsIlByZXBhcmVNYXAiLCJQbGF5ZXIiLCJFbmVteSIsIkdyb3VuZEl0ZW0iLCJQbGFuZVVJIiwiR2FtZVVJIiwiR2FtZU1hcCIsIlBhcmF0cm9vcGVyUGxheWVyIiwiUGFyYXRyb29wZXJFbmVteSIsIkluZm9MYWJlbCIsIkRyb3BCb3giLCJNaXBCb3giLCJCb29tIiwiT3ZlclBvcHVwIiwiRGFpbHlQb3B1cCIsIkFjdGl2aXR5UG9wdXAiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLFdBQVcsR0FBRztBQUNkQyxFQUFBQSxPQUFPLEVBQUUsa0JBREs7QUFFZEMsRUFBQUEsUUFBUSxFQUFFLG1CQUZJO0FBR2RDLEVBQUFBLE9BQU8sRUFBRSxrQkFISztBQUlkQyxFQUFBQSxNQUFNLEVBQUUsaUJBSk07QUFLZEMsRUFBQUEsYUFBYSxFQUFFLHdCQUxEO0FBTWRDLEVBQUFBLEtBQUssRUFBRSxnQkFOTztBQU9kQyxFQUFBQSxLQUFLLEVBQUUsZ0JBUE87QUFRZEMsRUFBQUEsTUFBTSxFQUFFLGlCQVJNO0FBU2RDLEVBQUFBLFNBQVMsRUFBRSxvQkFURztBQVVkQyxFQUFBQSxZQUFZLEVBQUUsdUJBVkE7QUFXZEMsRUFBQUEsU0FBUyxFQUFFLG9CQVhHO0FBWWRDLEVBQUFBLFVBQVUsRUFBRSxxQkFaRTtBQWFkQyxFQUFBQSxNQUFNLEVBQUUsYUFiTTtBQWNkQyxFQUFBQSxLQUFLLEVBQUUsWUFkTztBQWVkQyxFQUFBQSxVQUFVLEVBQUUsaUJBZkU7QUFnQmRDLEVBQUFBLE9BQU8sRUFBRSxrQkFoQks7QUFpQmRDLEVBQUFBLE1BQU0sRUFBRSxpQkFqQk07QUFrQmRDLEVBQUFBLE9BQU8sRUFBRSxrQkFsQks7QUFtQmRDLEVBQUFBLGlCQUFpQixFQUFFLHdCQW5CTDtBQW9CZEMsRUFBQUEsZ0JBQWdCLEVBQUUsdUJBcEJKO0FBcUJkQyxFQUFBQSxTQUFTLEVBQUUsZ0JBckJHO0FBc0JkQyxFQUFBQSxPQUFPLEVBQUUsY0F0Qks7QUF1QmRDLEVBQUFBLE1BQU0sRUFBRSxhQXZCTTtBQXdCZEMsRUFBQUEsSUFBSSxFQUFFLFdBeEJRO0FBeUJkQyxFQUFBQSxTQUFTLEVBQUUsb0JBekJHO0FBMEJkQyxFQUFBQSxVQUFVLEVBQUUscUJBMUJFO0FBMkJkQyxFQUFBQSxhQUFhLEVBQUUsd0JBM0JELENBNEJkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFwQ2MsQ0FBbEI7QUF1Q0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjdCLFdBQWpCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUFJFRkFCX1BBVEggPSB7XHJcbiAgICBUb2FzdFVJOiAndWlQcmVmYWIvVG9hc3RVSScsXHJcbiAgICBTcGxhc2hVSTogJ3VpUHJlZmFiL1NwbGFzaFVJJyxcclxuICAgIExvZ2luVUk6ICd1aVByZWZhYi9Mb2dpblVJJyxcclxuICAgIFNraW5VSTogJ3VpUHJlZmFiL1NraW5VSScsXHJcbiAgICBTa2luSW5mb1BvcHVwOiAndWlQcmVmYWIvU2tpbkluZm9Qb3B1cCcsXHJcbiAgICBCb3hVSTogJ3VpUHJlZmFiL0JveFVJJyxcclxuICAgIEd1blVJOiAndWlQcmVmYWIvR3VuVUknLFxyXG4gICAgUmFua1VJOiAndWlQcmVmYWIvUmFua1VJJyxcclxuICAgIEdpZnRQb3B1cDogJ3VpUHJlZmFiL0dpZnRQb3B1cCcsXHJcbiAgICBPcGVuQm94UG9wdXA6ICd1aVByZWZhYi9PcGVuQm94UG9wdXAnLFxyXG4gICAgUHJlcGFyZVVJOiAndWlQcmVmYWIvUHJlcGFyZVVJJyxcclxuICAgIFByZXBhcmVNYXA6ICd1aVByZWZhYi9QcmVwYXJlTWFwJyxcclxuICAgIFBsYXllcjogJ2dhbWUvUGxheWVyJyxcclxuICAgIEVuZW15OiAnZ2FtZS9FbmVteScsXHJcbiAgICBHcm91bmRJdGVtOiAnZ2FtZS9Hcm91bmRJdGVtJyxcclxuICAgIFBsYW5lVUk6ICd1aVByZWZhYi9QbGFuZVVJJyxcclxuICAgIEdhbWVVSTogJ3VpUHJlZmFiL0dhbWVVSScsXHJcbiAgICBHYW1lTWFwOiAndWlQcmVmYWIvR2FtZU1hcCcsXHJcbiAgICBQYXJhdHJvb3BlclBsYXllcjogJ2dhbWUvUGFyYXRyb29wZXJQbGF5ZXInLFxyXG4gICAgUGFyYXRyb29wZXJFbmVteTogJ2dhbWUvUGFyYXRyb29wZXJFbmVteScsXHJcbiAgICBJbmZvTGFiZWw6ICdnYW1lL0luZm9MYWJlbCcsXHJcbiAgICBEcm9wQm94OiAnZ2FtZS9Ecm9wQm94JyxcclxuICAgIE1pcEJveDogJ2dhbWUvTWlwQm94JyxcclxuICAgIEJvb206ICdnYW1lL0Jvb20nLFxyXG4gICAgT3ZlclBvcHVwOiAndWlQcmVmYWIvT3ZlclBvcHVwJyxcclxuICAgIERhaWx5UG9wdXA6ICd1aVByZWZhYi9EYWlseVBvcHVwJyxcclxuICAgIEFjdGl2aXR5UG9wdXA6ICd1aVByZWZhYi9BY3Rpdml0eVBvcHVwJ1xyXG4gICAgLy8gQm94TGF5ZXI6ICd1aVByZWZhYi9Cb3hMYXllcicsXHJcbiAgICAvLyBDb2luTm9kZTogJ3VpUHJlZmFiL0NvaW5Ob2RlJyxcclxuICAgIC8vIEdhbWVMYXllcjogJ3VpUHJlZmFiL0dhbWVMYXllcicsXHJcbiAgICAvLyBHYW1lVUk6ICd1aVByZWZhYi9HYW1lVUknLFxyXG4gICAgLy8gR2lmdExheWVyOiAndWlQcmVmYWIvR2lmdExheWVyJyxcclxuICAgIC8vIEl0ZW1Ob2RlOiAndWlQcmVmYWIvSXRlbU5vZGUnLFxyXG4gICAgLy8gTG9hZExheWVyOiAndWlQcmVmYWIvTG9hZExheWVyJyxcclxuICAgIC8vIE1haW5MYXllcjogJ3VpUHJlZmFiL01haW5MYXllcicsXHJcbiAgICAvLyBTa2luczogJ2RhdGEvc2tpbnMuanNvbidcclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUFJFRkFCX1BBVEg7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/data/Consts.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fcba3fxLE5O3oI0GoUWFYYj', 'Consts');
// scripts/data/Consts.js

"use strict";

window.WS_SERVERS = {
  TEST: "ws://192.168.25.242:19999/server",
  // lf
  INSPECT: "",
  RELEASE: ""
};
var servers = {
  TEST: 'TEST',
  INSPECT: 'INSPECT',
  RELEASE: 'RELEASE'
};
window.SERVER = servers.TEST;
window.VERSION = '1.0.0';
window.NameColor = ["#0cf60b", "#09b2eb", "#fc01fc", "#fb7f03", "#ec0807", "#faf80d"];
window.Tags = {
  collider: 0,
  player: 1,
  item: 2,
  bullet: 3,
  empty: 4,
  box: 5,
  boom: 6,
  enemy: 10 //下面都是enemy

}; //0是武器，1是道具

window.ItemType = {
  weapon: 0,
  item: 1
};
window.EquipType = {
  damage: 0,
  def: 1,
  speed: 2,
  crit: 3
}; //例子： ItemAttr[a][b].c //a装备种类，b装备等级，c装备属性

window.ItemAttr = [[{
  attr: 0.1,
  des: "伤害+10%"
}, {
  attr: 0.2,
  des: "伤害+20%"
}, {
  attr: 0.3,
  des: "伤害+30%"
}], [{
  attr: 0.1,
  des: "减伤+10%"
}, {
  attr: 0.2,
  des: "减伤+20%"
}, {
  attr: 0.3,
  des: "减伤+30%"
}], [{
  attr: 0.1,
  des: "移速+10%"
}, {
  attr: 0.2,
  des: "移速+20%"
}, {
  attr: 0.3,
  des: "移速+30%"
}], [{
  attr: 1,
  des: "暴击+10%"
}, {
  attr: 2,
  des: "暴击+20%"
}, {
  attr: 3,
  des: "暴击+30%"
}]];
window.TaskState = {
  Unfinish: 0,
  Canget: 1,
  Got: 2
}; // 客户端自己定义的协议

window.EventNames = {
  EVENT_UPDATE_SHOP_CHOOSED_SHOW: 'EVENT_UPDATE_SHOP_CHOOSED_SHOW',
  EVENT_UPDATE_COIN_SHOW: 'EVENT_UPDATE_COIN_SHOW',
  EVENT_UPDATE_AMO_SHOW: 'EVENT_UPDATE_AMO_SHOW',
  EVENT_PLAYER_SHOOT: 'EVENT_PLAYER_SHOOT',
  EVENT_PLAYER_RELOAD: 'EVENT_PLAYER_RELOAD',
  EVENT_UPDATE_TOPBAR_SHOW: 'EVENT_UPDATE_TOPBAR_SHOW',
  EVENT_SHOW_GUN_UI: 'EVENT_SHOW_GUN_UI',
  EVENT_SHOW_ALLROLENUM_UI: 'EVENT_SHOW_ALLROLENUM_UI',
  EVENT_SHOW_RELOAD_UI: 'EVENT_SHOW_RELOAD_UI',
  EVENT_PICKUP_WEAPON: 'EVENT_PICKUP_WEAPON',
  EVENT_AIM: 'EVENT_AIM',
  EVENT_GAME_BEGIN: 'EVENT_GAME_BEGIN',
  EVENT_UPDATE_MIPMAP_PLAYER: 'EVENT_UPDATE_MIPMAP_PLAYER',
  EVENT_THEGAMESTART: 'EVENT_THEGAMESTART',
  EVENT_UPDATE_RANK_SHOW: 'EVENT_UPDATE_RANK_SHOW',
  EVENT_UPDATE_GAS_SHOW: 'EVENT_UPDATE_GAS_SHOW',
  EVENT_FLASH: 'EVENT_FLASH',
  EVENT_RESUME_HEALTH: 'EVENT_RESUME_HEALTH',
  EVENT_DROP_BOX: 'EVENT_DROP_BOX',
  EVENT_NOTYFY_BOX_DISMISS: 'EVENT_NOTYFY_BOX_DISMISS',
  EVENT_NOTYFY_BOOM_DISMISS: 'EVENT_NOTYFY_BOOM_DISMISS',
  EVENT_SHOW_BOXITEM: 'EVENT_SHOW_BOXITEM',
  EVENT_UPDATE_STAR_SHOW: 'EVENT_UPDATE_STAR_SHOW',
  EVENT_NOTIFY_ENEMY_MAPBOX: 'EVENT_NOTIFY_ENEMY_MAPBOX',
  EVENT_SHOW_ACTIVITYBTN: 'EVENT_SHOW_ACTIVITYBTN'
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/game/DropBox.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '53d079b9kpBmqvST+YSa7z0', 'DropBox');
// scripts/game/DropBox.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    boxIndex: 1231231,
    _showToPlayer: false,
    progressBar: cc.ProgressBar,
    _beginOpen: false,
    _hadOpen: false,
    _openTimer: 0,
    _belongTagsArr: [],
    other: null
  },
  onLoad: function onLoad() {
    this._belongTagsArr = [];
  },
  init: function init(_index) {
    // console.log(_index)
    this.boxIndex = _index;
  },
  update: function update(dt) {
    if (this._hadOpen) return;

    if (this._beginOpen) {
      this._openTimer += dt;

      if (this._openTimer >= 5) {
        if (this._hadOpen) return;
        this._hadOpen = true;
        GameApp.eventManager.emit(EventNames.EVENT_NOTYFY_BOX_DISMISS, this.boxIndex.toString());
        if (this._belongTagsArr.length == 0) return;

        if (this._belongTagsArr.indexOf(Tags.player) != -1) {
          GameApp.eventManager.emit(EventNames.EVENT_SHOW_BOXITEM);
        } else {
          // console.log("触发了")
          this.other && this.other.node.getComponent("Enemy").enemyEquipBoxItem();
        }
      }
    } else {
      this._openTimer -= dt;

      if (this._openTimer < 0) {
        this._openTimer = 0;
      }
    }

    this.progressBar.progress = this._openTimer / 5;
  },
  onBeginContact: function onBeginContact(contact, self, other) {
    if (other.tag == Tags.player || other.tag >= Tags.enemy) {
      this._beginOpen = true;

      if (this._belongTagsArr.indexOf(other.tag) == -1) {
        this._belongTagsArr.push(other.tag);
      }
    }
  },
  onEndContact: function onEndContact(contact, self, other) {
    if (other.tag == Tags.player || other.tag >= Tags.enemy) {
      if (this._openTimer >= 5) {
        this.other = other;
        if (this._hadOpen) return;
        this._hadOpen = true;
        GameApp.eventManager.emit(EventNames.EVENT_NOTYFY_BOX_DISMISS, this.boxIndex.toString());
        if (this._belongTagsArr.length == 0) return;

        if (this._belongTagsArr.indexOf(Tags.player) != -1) {
          GameApp.eventManager.emit(EventNames.EVENT_SHOW_BOXITEM);
        } else {
          // console.log("触发了")
          other.node.getComponent("Enemy").enemyEquipBoxItem();
        }

        return;
      }

      if (this._belongTagsArr.indexOf(other.tag) != -1) {
        Tools.removeArray(this._belongTagsArr, other.tag);
      }

      if (this._belongTagsArr.length == 0) {
        this._beginOpen = false;
      }
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Protocol.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9687aZxv/RO9ac5DcZQ91Zh', 'Protocol');
// scripts/Protocol.js

"use strict";

cc.Class({
  statics: {
    // 初始化需要监听的协议
    Initialize: function Initialize() {}
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcUHJvdG9jb2wuanMiXSwibmFtZXMiOlsiY2MiLCJDbGFzcyIsInN0YXRpY3MiLCJJbml0aWFsaXplIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBQSxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMQyxFQUFBQSxPQUFPLEVBQUU7QUFFTDtBQUNBQyxJQUFBQSxVQUhLLHdCQUdRLENBR1o7QUFOSTtBQURKLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNjLkNsYXNzKHtcclxuICAgIHN0YXRpY3M6IHtcclxuXHJcbiAgICAgICAgLy8g5Yid5aeL5YyW6ZyA6KaB55uR5ZCs55qE5Y2P6K6uXHJcbiAgICAgICAgSW5pdGlhbGl6ZSgpIHtcclxuXHJcblxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgfVxyXG59KTsiXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/data/JsonPath.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fdeeeZx8DNNF7H5MiqQJ5Cm', 'JsonPath');
// scripts/data/JsonPath.js

"use strict";

var JSON_PATH = {
  SkinsData: 'data/skins',
  WeaponData: 'data/weapon',
  RobotName: 'data/robotName'
};
module.exports = JSON_PATH;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcZGF0YVxcSnNvblBhdGguanMiXSwibmFtZXMiOlsiSlNPTl9QQVRIIiwiU2tpbnNEYXRhIiwiV2VhcG9uRGF0YSIsIlJvYm90TmFtZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsU0FBUyxHQUFHO0FBQ1pDLEVBQUFBLFNBQVMsRUFBRSxZQURDO0FBRVpDLEVBQUFBLFVBQVUsRUFBRSxhQUZBO0FBR1pDLEVBQUFBLFNBQVMsRUFBRTtBQUhDLENBQWhCO0FBS0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsU0FBakIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBKU09OX1BBVEggPSB7XHJcbiAgICBTa2luc0RhdGE6ICdkYXRhL3NraW5zJyxcclxuICAgIFdlYXBvbkRhdGE6ICdkYXRhL3dlYXBvbicsXHJcbiAgICBSb2JvdE5hbWU6ICdkYXRhL3JvYm90TmFtZScsXHJcbn1cclxubW9kdWxlLmV4cG9ydHMgPSBKU09OX1BBVEg7Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/game/Player.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '175c9l71jJIOK/erMuxWhel', 'Player');
// scripts/game/Player.js

"use strict";

var _JoystickCommon = require("JoystickCommon");

cc.Class({
  "extends": cc.Component,
  properties: {
    // from joystick
    moveDir: {
      "default": cc.v2(1, 0),
      displayName: 'Move Dir',
      tooltip: '移动方向'
    },
    _speedType: {
      "default": _JoystickCommon.SpeedType.STOP,
      displayName: 'Speed Type',
      type: _JoystickCommon.SpeedType,
      tooltip: '速度级别'
    },
    // from self
    _moveSpeed: {
      "default": 0,
      displayName: 'Move Speed',
      tooltip: '移动速度'
    },
    stopSpeed: {
      "default": 0,
      type: cc.Integer,
      tooltip: '停止时速度'
    },
    // normalSpeed: {//暂时不用
    //     default: 100,
    //     type: cc.Integer,
    //     tooltip: '正常速度'
    // },
    // fastSpeed: {//暂时不用
    //     default: 200,
    //     type: cc.Integer,
    //     tooltip: '最快速度'
    // },
    roleAnim: {
      "default": null,
      type: sp.Skeleton,
      tooltip: '角色的Spine动画组件'
    },
    _gunDir: {
      "default": cc.v2(1, 0)
    },
    gunAnim: {
      "default": null,
      type: sp.Skeleton,
      tooltip: '枪的Spine动画组件'
    },
    gunNode: {
      "default": null,
      type: cc.Node,
      tooltip: '枪节点'
    },
    _haveGun: false,
    gunData: {
      "default": {}
    },
    skinData: {
      "default": {}
    },
    _pbc: cc.PhysicsBoxCollider,
    nameUI: cc.Label,
    bulletPrefab: cc.Prefab,
    tempGroundWeapon: null,
    hpBar: cc.ProgressBar,
    amoBar: cc.ProgressBar,
    starNode: cc.Node,
    lastHitBullet: null,
    //避免被火箭筒的爆炸范围或导弹头重复计算伤害
    _isAim: false,
    //瞄准状态，此状态下枪不可自主转向，避免鬼畜
    _aimTimer: 0,
    _aimInterval: 0.05,
    _stepTimer: 0,
    _stepInterval: 0.3,
    _isDie: false,
    arrowNode: cc.Node,
    _mapNoGun: false,
    _isProtect: false,
    _isGas: false,
    _inGasTimer: 0,
    _inGasInterval: 0.5
  },
  onLoad: function onLoad() {
    GameApp.eventManager.on(EventNames.EVENT_PLAYER_SHOOT, this.shoot.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_PLAYER_RELOAD, this.reload.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_PICKUP_WEAPON, this.pickUpWeapon.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_UPDATE_TOPBAR_SHOW, this.updatePlayerTopBarShow.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_AIM, this.aimState.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_THEGAMESTART, this.theGameStart.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_FLASH, this.doFlash.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_RESUME_HEALTH, this.doResumeHealth.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_UPDATE_STAR_SHOW, this.updateStarShow.bind(this));
    this._pbc = this.getComponent(cc.PhysicsBoxCollider); // console.log(this._pbc)

    this._pbc.tag = Tags.player;
  },
  onEnable: function onEnable() {},
  onDisable: function onDisable() {},
  onDestroy: function onDestroy() {
    GameApp.eventManager.removeListener(EventNames.EVENT_PLAYER_SHOOT);
    GameApp.eventManager.removeListener(EventNames.EVENT_PLAYER_RELOAD);
    GameApp.eventManager.removeListener(EventNames.EVENT_PICKUP_WEAPON);
    GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_TOPBAR_SHOW);
    GameApp.eventManager.removeListener(EventNames.EVENT_AIM);
    GameApp.eventManager.removeListener(EventNames.EVENT_THEGAMESTART);
    GameApp.eventManager.removeListener(EventNames.EVENT_FLASH);
    GameApp.eventManager.removeListener(EventNames.EVENT_RESUME_HEALTH);
    GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_STAR_SHOW);
  },
  init: function init() {
    // this.schedule(() => {
    //     console.log(GameApp.dataManager.userData.choosedSkinId)
    //     GameApp.dataManager.setSkinId(GameApp.dataManager.userData.choosedSkinId += 1)
    // }, 2);
    if (GameApp.dataManager.globalData.isInGame) {
      this.roleProtect();
    }

    this.skinData = GameApp.dataManager.jsonData.SkinsData[GameApp.dataManager.userData.choosedSkinId - 1];
    this.initNameShow();
    this.initSkinShow();
  },
  roleProtect: function roleProtect() {
    GameApp.audioManager.playEffect('noticeFindGun', 0.5);

    if (!this._haveGun) {
      this._isProtect = true;
      this.arrowNode.active = true;
    }

    this.node.opacity = 100;
  },
  theGameStart: function theGameStart() {
    this._isProtect = false;
    this.node.opacity = 255;
  },
  doFlash: function doFlash() {
    if (this._isDie) return;
    this.move(null, true);
  },
  doResumeHealth: function doResumeHealth() {
    if (this._isDie) return;
    this.resumeHealth(GameApp.dataManager.getResumeHealthNum());
  },
  resumeHealth: function resumeHealth(_num) {
    var _this = this;

    this.node.runAction(cc.sequence(cc.callFunc(function () {
      GameApp.uiManager.showGameObject("InfoLabel", function (node) {
        node.getComponent(cc.RichText).string = "<b><color=green>+" + _num + "</color></b>";
        var init = cc.callFunc(function () {
          GameApp.dataManager.addHp(_num);
          node.setPosition(0, 110);
        });
        var seq = cc.sequence(init, cc.spawn(cc.fadeIn(0.2), cc.scaleTo(0, 1.5), cc.moveTo(0.3, cc.v2(0, 190))), cc.fadeOut(0.3), cc.callFunc(function () {
          node.destroy();
        }));
        node.runAction(seq);
      }, _this.node);
    }), cc.delayTime(0.3)).repeat(4));
  },
  updateStarShow: function updateStarShow() {
    var _sum = 0;

    for (var i = 0; i < 4; i++) {
      _sum += GameApp.dataManager.globalData.getItemAttrArr[i].rank;
    }

    if (_sum == 0) {
      // console.log("没有星")
      this.starNode.active = false;
    } else {
      var level = parseInt((_sum - 1) / 3);
      var starNum = _sum - level * 3; // console.log(level)
      // console.log(starNum)

      this.starNode.children[0].getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame("level_bg_" + (level + 1));
      this.starNode.children[1].getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame("level_star_" + (level + 1) + "_" + starNum);
      this.starNode.active = true; // console.log(this.starNode)
    }
  },
  initNameShow: function initNameShow() {
    this.nameUI.string = GameApp.dataManager.userData.playerName; // var colorIndex = Math.floor((this.skinData.skinid - 1) / 5)
    // this.nameUI.node.color = new cc.Color().fromHEX(NameColor[colorIndex]);
  },
  initSkinShow: function initSkinShow() {
    if (GameApp.dataManager.userData.choosedSkinId < 21) {
      this.roleAnim.skeletonData = GameApp.uiManager.normalSkinData;
      this.roleAnim.setSkin(this.skinData.skinname);
    } else {
      this.roleAnim.skeletonData = GameApp.uiManager.advanceSkinDataGroup[GameApp.dataManager.userData.choosedSkinId - 21];
    }

    var arr = GameApp.dataManager.userData.choosedSkinId < 21 ? ['await'] : ['await_fight_1'];
    this.roleAnim.setAnimation(0, arr[0], true);
  },
  updatePlayerTopBarShow: function updatePlayerTopBarShow() {
    this.hpBar.progress = GameApp.dataManager.globalData.curHp / GameApp.dataManager.globalData.maxHp;
    this.amoBar.progress = GameApp.dataManager.globalData.curAmoNum / GameApp.dataManager.globalData.maxAmoNum;
  },
  // methods
  move: function move(dt, _flash) {
    if (_flash) {
      var _borderGroup = GameApp.uiManager.getGame("GameMap").getComponent("GameMap").enemySpawnPosGroupNode.children; // console.log(_borderGroup)

      var newPos1 = this.node.position.add(this.moveDir.mul(1000));

      if (newPos1.x < _borderGroup[0].x) {
        newPos1.x = _borderGroup[0].x;
      }

      if (newPos1.x > _borderGroup[1].x) {
        newPos1.x = _borderGroup[1].x;
      }

      if (newPos1.y > _borderGroup[0].y) {
        newPos1.y = _borderGroup[0].y;
      }

      if (newPos1.y < _borderGroup[2].y) {
        newPos1.y = _borderGroup[2].y;
      }

      this.node.setPosition(newPos1);
      GameApp.audioManager.playEffect('flash');
      return;
    }

    if (this._moveSpeed != 0) {
      this._stepTimer -= dt;

      if (this._stepTimer < 0) {
        this._stepTimer = this._stepInterval;
        GameApp.audioManager.playEffect('run', 0.3);
      }
    }

    var theAngle = 90 - cc.misc.radiansToDegrees(Math.atan2(this.moveDir.y, this.moveDir.x));

    if (theAngle > 180 || theAngle < 0) {
      this.roleAnim.node.scaleX = -1;
    } else {
      this.roleAnim.node.scaleX = 1;
    }

    var newPos = this.node.position.add(this.moveDir.mul(this._moveSpeed * dt));
    this.node.setPosition(newPos);
    GameApp.eventManager.emit(EventNames.EVENT_UPDATE_MIPMAP_PLAYER, cc.v2(this.node.x / 50, this.node.y / 50)); // this.roleAnim.node.setPosition(0, 0)
  },
  setSpeedType: function setSpeedType(_type) {
    if (this._isDie) return;

    if (this._speedType != _type) {
      this._speedType = _type;
      var arr = GameApp.dataManager.userData.choosedSkinId < 21 ? ['await', 'run2', 'run2'] : ['await_fight_1', 'run', 'run'];
      this.roleAnim && this.roleAnim.setAnimation(0, arr[_type], true);
    }
  },
  setDir: function setDir(_dir) {
    if (this._isDie) return;
    this.moveDir = _dir;
    if (this._isAim) return;
    this.setGunDir(_dir);
  },
  setGunDir: function setGunDir(_dir) {
    if (!this._haveGun) return;
    if (!this.gunNode) return;

    if (_dir == null) {
      _dir = this.moveDir;
    }

    this._gunDir = _dir;
    this.gunNode.rotation = -cc.misc.radiansToDegrees(Math.atan2(_dir.y, _dir.x));
    var theAngle = 90 - this.gunNode.rotation;

    if (theAngle > 180 || theAngle < 0) {
      this.gunNode.scaleY = -1;
    } else {
      this.gunNode.scaleY = 1;
    }
  },
  setArrowDir: function setArrowDir(_dir) {
    this.arrowNode.setPosition(cc.v2(this.arrowNode.parent.position).add(_dir.mul(100)));
    this.arrowNode.children[0].children[0].setPosition(cc.v2(this.arrowNode.children[0].position).add(_dir.mul(30)));
    this.arrowNode.children[0].children[0].rotation = -cc.misc.radiansToDegrees(Math.atan2(_dir.y, _dir.x));
  },
  update: function update(dt) {
    if (this._isDie) return;

    if (GameApp.dataManager.globalData.isInGame) {
      GameApp.dataManager.globalData.lifeTime += dt;
    }

    switch (this._speedType) {
      case _JoystickCommon.SpeedType.STOP:
        this._moveSpeed = this.stopSpeed;
        break;

      case _JoystickCommon.SpeedType.NORMAL:
        this._moveSpeed = GameApp.dataManager.globalData.curSpeed; // this._moveSpeed = this.fastSpeed;

        break;

      case _JoystickCommon.SpeedType.FAST:
        this._moveSpeed = GameApp.dataManager.globalData.curSpeed + Math.floor(GameApp.dataManager.globalData.curSpeed * GameApp.dataManager.getEquipItemAttr(EquipType.speed));
        break;

      default:
        break;
    }

    this.move(dt);
    this.checkGas(dt);

    if (!this._haveGun && !this._mapNoGun) {
      this._aimTimer -= dt;

      if (this._aimTimer < 0) {
        this._aimTimer = this._aimInterval;
        this.arrowToNearestGun();
      }
    }

    if (this._isProtect) return;

    if (this._isAim) {
      this._aimTimer -= dt;

      if (this._aimTimer < 0) {
        this._aimTimer = this._aimInterval;
        this.aimToNearest();
      }
    } else {
      this._aimTimer = 0;
    }
  },
  lateUpdate: function lateUpdate(dt) {
    // this.mainC.node.setPosition(this.player.position)
    // this.testC.node.setPosition(this.player.position)
    GameApp.uiManager.mapCamera.node.setPosition(this.node.position); // this.mipmapCamera.node.setPosition(this.node.position)
  },
  checkGas: function checkGas(dt) {
    if (GameApp.dataManager.globalData.gasConfig != null) {
      var distance = cc.v2(GameApp.dataManager.globalData.gasConfig.safePosition).sub(cc.v2(this.node.position)).mag();

      if (distance > GameApp.dataManager.globalData.gasConfig.gasCircle / 2) {
        this._inGasTimer -= dt;

        if (this._inGasTimer < 0) {
          this._inGasTimer = this._inGasInterval;
          this.beDamage(5, -1);
        }

        this._isGas = true;
      } else {
        this._isGas = false;
      }
    } else {
      this._isGas = false;
    }
  },
  aimState: function aimState(event) {
    if (this._isDie) return;
    if (!this._haveGun) return;
    this._isAim = event;

    if (this._isAim) {
      this.aimToNearest();
    }
  },
  aimToNearest: function aimToNearest() {
    var allRoleArr = GameApp.dataManager.globalData.allRoleArr.concat(); // for (let i = 0; i < allRoleArr.length; i++) {
    //     if (allRoleArr[i].skinData.skinid == this.skinData.skinid) {
    //         allRoleArr.splice(i, 1)
    //         break
    //     }
    // }

    Tools.removeArray(allRoleArr, this.getComponent("Player"));
    var minDis = 1000000;
    var index = -1;

    for (var i = 0; i < allRoleArr.length; i++) {
      // if (GameApp.uiManager.isInMapSight(allRoleArr[i].node)) {
      var distance = cc.v2(allRoleArr[i].node.position).sub(cc.v2(this.node.position)).mag();

      if (distance < minDis && distance < this.gunData.range * 1.4) {
        minDis = distance;
        index = i;
      } // }

    }

    var dir = null;

    if (index == -1) {
      this._isAim = false;
    } else {
      this._isAim = true;
      var aimEnemy = allRoleArr[index].node;
      dir = cc.v2(aimEnemy.position).sub(cc.v2(this.node.position)).normalize();
    }

    this.setGunDir(dir);
  },
  arrowToNearestGun: function arrowToNearestGun() {
    var allGunArr = GameApp.dataManager.globalData.allGunArr.concat();
    var minDis = 1000000;
    var index = -1;

    for (var i = 0; i < allGunArr.length; i++) {
      var distance = cc.v2(allGunArr[i].position).sub(cc.v2(this.node.position)).mag();

      if (distance < minDis) {
        minDis = distance;
        index = i;
      }
    }

    var dir = null;

    if (index == -1) {
      this._mapNoGun = true;
      this.arrowNode.active = false;
    } else {
      var aimGun = allGunArr[index];
      dir = cc.v2(aimGun.position).sub(cc.v2(this.node.position)).normalize();
      this.setArrowDir(dir);
    }
  },
  shoot: function shoot() {
    if (this._isDie) return;
    if (!this._haveGun) return;

    if (GameApp.dataManager.reduceAmo()) {
      this.gunAnim.setAnimation(0, 'attack_' + this.gunData.skinname, false);
      var power = Math.ceil(this.gunData.power * (GameApp.dataManager.globalData.curDamage + GameApp.dataManager.getEquipItemAttr(EquipType.damage)));
      var isCrit = false;

      if (Tools.isCrit(GameApp.dataManager.globalData.curCrit + GameApp.dataManager.getEquipItemAttr(EquipType.crit))) {
        power *= 2;
        isCrit = true;
      }

      if (this.gunData.weaponid == 1002) {
        GameApp.audioManager.playEffect('shot_shoot', 0.6);
        var bullet1 = cc.instantiate(this.bulletPrefab);
        var bullet2 = cc.instantiate(this.bulletPrefab);
        var bullet3 = cc.instantiate(this.bulletPrefab);
        var bulletPos = this.node.parent.parent.convertToNodeSpaceAR(this.gunNode.children[0].convertToWorldSpaceAR(cc.v2(0, 0)));
        bullet1.parent = bullet2.parent = bullet3.parent = this.node.parent.parent;
        bullet1.setPosition(bulletPos);
        bullet2.setPosition(bulletPos);
        bullet3.setPosition(bulletPos);
        bullet1.rotation = this.gunNode.rotation;
        bullet2.rotation = this.gunNode.rotation + 30;
        bullet3.rotation = this.gunNode.rotation - 30;
        var cloneGunDir = cc.v2(this._gunDir);
        var bulletC1 = bullet1.getComponent('Bullet');
        bulletC1._belongTag = this._pbc.tag;
        bulletC1._belongName = GameApp.dataManager.userData.playerName;
        bulletC1._flyDir = cloneGunDir;
        bulletC1.init(this.gunData, power, isCrit);
        var bulletC2 = bullet2.getComponent('Bullet');
        bulletC2._belongTag = this._pbc.tag;
        bulletC2._belongName = GameApp.dataManager.userData.playerName;
        bulletC2._flyDir = cloneGunDir.rotate(-cc.misc.degreesToRadians(30));
        bulletC2.init(this.gunData, power, isCrit);
        var bulletC3 = bullet3.getComponent('Bullet');
        bulletC3._belongTag = this._pbc.tag;
        bulletC3._belongName = GameApp.dataManager.userData.playerName;
        bulletC3._flyDir = cloneGunDir.rotate(-cc.misc.degreesToRadians(-30));
        bulletC3.init(this.gunData, power, isCrit);
      } else {
        if (this.gunData.weaponid == 1003 || this.gunData.weaponid == 1103) {
          GameApp.audioManager.playEffect('charge_shoot', 0.6);
        } else if (this.gunData.weaponid == 1005 || this.gunData.weaponid == 1105) {
          GameApp.audioManager.playEffect('missile_shoot', 0.6);
        } else if (this.gunData.weaponid == 1102) {
          GameApp.audioManager.playEffect('shot_shoot', 0.6);
        }

        var bullet = cc.instantiate(this.bulletPrefab);

        var _bulletPos = this.node.parent.parent.convertToNodeSpaceAR(this.gunNode.children[0].convertToWorldSpaceAR(cc.v2(0, 0)));

        bullet.parent = this.node.parent.parent;
        bullet.setPosition(_bulletPos);
        bullet.rotation = this.gunNode.rotation;
        var bulletC = bullet.getComponent('Bullet');
        bulletC._belongTag = this._pbc.tag;
        bulletC._belongName = GameApp.dataManager.userData.playerName;
        bulletC._flyDir = this._gunDir;
        bulletC.init(this.gunData, power, isCrit);
      }

      this.updatePlayerTopBarShow();
    } else {
      GameApp.uiManager.getUI(GameApp.uiManager.uiRoot.children[0].name).getComponent(GameApp.uiManager.uiRoot.children[0].name).reloadBtnClick();
    }

    if (GameApp.dataManager.globalData.curAmoNum == 0) {
      GameApp.uiManager.getUI(GameApp.uiManager.uiRoot.children[0].name).getComponent(GameApp.uiManager.uiRoot.children[0].name).reloadBtnClick();
    }
  },
  reload: function reload() {
    if (this._isDie) return;
    if (!this._haveGun) return;
    GameApp.audioManager.playEffect('reload', 0.6);
    this.gunAnim.setAnimation(0, 'reload_' + this.gunData.skinname, false);
  },
  equipWeapon: function equipWeapon(_kind) {
    GameApp.audioManager.playEffect('pick_item', 0.6);
    this.gunData = GameApp.dataManager.jsonData.WeaponData[_kind];
    this._haveGun = true;
    this.arrowNode.active = false;
    GameApp.eventManager.emit(EventNames.EVENT_SHOW_RELOAD_UI, true);
    GameApp.dataManager.globalData.shootInterval = this.gunData.shootdelay;
    GameApp.dataManager.globalData.reloadInterval = this.gunData.reloaddelay;
    GameApp.dataManager.globalData.maxAmoNum = this.gunData.clipnum;
    GameApp.dataManager.reloadAmo();
    this.gunNode.active = true;

    if (_kind < 3) {
      this.gunAnim.skeletonData = GameApp.uiManager.gunSkinDataGroup[0];
    } else {
      this.gunAnim.skeletonData = GameApp.uiManager.gunSkinDataGroup[1];
    }

    this.gunAnim.setSkin(this.gunData.skinname);
    this.setGunDir(this.moveDir); // this.gunAnim.setAnimation(0, 'attack_' + this.gunData.skinname, false)
  },
  getItem: function getItem() {},
  onBeginContact: function onBeginContact(contact, self, other) {
    if (self.tag == Tags.empty) return;

    if (other.tag == Tags.item) {
      var groundItem = other.node.getComponent('GroundItem');

      if (groundItem.itemType._type == ItemType.weapon) {
        this.tempGroundWeapon = groundItem;

        if (!this._haveGun) {
          Tools.removeArray(GameApp.dataManager.globalData.allGunArr, other.node);
          this.pickUpWeapon();
        } else {
          GameApp.eventManager.emit(EventNames.EVENT_SHOW_GUN_UI, true, GameApp.dataManager.jsonData.WeaponData[groundItem.itemType._kind]);
        } // var _kind = groundItem.itemType._kind
        // if (!this._haveGun) {
        //     other.node.destroy()
        // } else {
        //     let _param = {
        //         _type: ItemType.weapon,
        //         _kind: GameApp.dataManager.jsonData.WeaponData.indexOf(this.gunData)
        //     }
        //     groundItem.init(_param)
        // }
        // this.equipWeapon(_kind)

      } else if (groundItem.itemType._type == ItemType.item) {
        this.getItem();
      }
    } else if (other.tag == Tags.bullet) {
      if (!GameApp.dataManager.globalData.isInGame) return;
      if (this._isDie) return;
      var bC = other.node.getComponent('Bullet');
      if (bC._belongTag == self.tag) return;
      if (other.node == this.lastHitBullet) return;
      this.lastHitBullet = other.node;
      this.beDamage(bC._power, bC._belongTag, bC._belongName, bC._isCrit);
    } else if (other.tag == Tags.boom) {
      if (this._isDie) return;
      this.beDamage(999, -2);
    }
  },
  onEndContact: function onEndContact(contact, self, other) {
    if (self.tag == Tags.empty) return;

    if (other.tag == Tags.item) {
      var groundItem = other.node.getComponent('GroundItem');

      if (groundItem.itemType._type == ItemType.weapon) {
        // console.log("初始化")
        this.tempGroundWeapon = null;
        GameApp.eventManager.emit(EventNames.EVENT_SHOW_GUN_UI, false);
      } else if (groundItem.itemType._type == ItemType.item) {}
    }
  },
  pickUpWeapon: function pickUpWeapon() {
    var _kind = this.tempGroundWeapon.itemType._kind;

    if (!this._haveGun) {
      this.tempGroundWeapon.node.destroy();
    } else {
      var _param = {
        _type: ItemType.weapon,
        _kind: GameApp.dataManager.jsonData.WeaponData.indexOf(this.gunData)
      };
      this.tempGroundWeapon.init(_param);
      GameApp.eventManager.emit(EventNames.EVENT_SHOW_GUN_UI, true, this.gunData);
    }

    this.equipWeapon(_kind);
  },
  beDamage: function beDamage(_power, _belongIndex, _belongName, _isCrit) {
    var _this2 = this;

    GameApp.uiManager.showGameObject("InfoLabel", function (node) {
      var originPos = node.parent.convertToNodeSpaceAR(_this2.node.convertToWorldSpaceAR(cc.v2(0.5, 0.5)));
      node.setPosition(originPos); //皮肤减伤+装备减伤

      var _isDef = Math.ceil(_power * GameApp.dataManager.globalData.curDef) + Math.ceil(_power * GameApp.dataManager.getEquipItemAttr(EquipType.def));

      _power -= _isDef;
      var str = "<color=red>-" + _power + "</color>";

      if (_isCrit) {
        str = "<color=red>暴击-" + _power + "</color>";
      }

      if (_isDef) {
        str += "<color=#0fffff>减伤" + _isDef + "</color>";
      }

      node.getComponent(cc.RichText).string = "<b>" + str + "</b>";
      var desPos = cc.v2(Tools.randomNum(60, 100), Tools.randomNum(60, 100));
      var bezier = [originPos, cc.v2(originPos.x + desPos.x - 20, originPos.y + desPos.y + 20), originPos.add(desPos)];
      var seq = cc.sequence(cc.spawn(cc.fadeIn(0.2), cc.scaleTo(0.3, 1.5), cc.bezierTo(0.3, bezier)), cc.delayTime(0.5), cc.fadeOut(0.3), cc.callFunc(function () {
        node.destroy();
      }));
      node.runAction(seq);
    }, this.node.parent.parent);

    if (GameApp.dataManager.reduceHp(_power)) {// console.log('收到子弹攻击')
    } else {
      // console.log('死掉了!!!!!!')
      GameApp.audioManager.playEffect('maleDeath', 0.5);
      this.node.parent = GameApp.uiManager.getGame("GameMap").getChildByName("DeadObjectNode");
      this._pbc.enabled = false;
      this._isDie = true;

      if (_belongIndex == -1) {
        GameApp.uiManager.showToast(GameApp.dataManager.userData.playerName + " 被毒出局");
      } else if (_belongIndex == -2) {
        GameApp.uiManager.showToast(GameApp.dataManager.userData.playerName + " 被轰炸出局");
      } else {
        var killNum = GameApp.dataManager.addKillNum(_belongIndex, _belongName);

        if (killNum > 1) {
          var soundIndex = killNum > 5 ? 5 : killNum;
          GameApp.audioManager.playEffect('kill' + soundIndex, 0.5);
          GameApp.uiManager.showToast(_belongName, null, killNum);
        } else {
          GameApp.uiManager.showToast(_belongName + " 击杀了 " + GameApp.dataManager.userData.playerName);
        }
      } // for (var i in GameApp.dataManager.globalData.allRoleArr) {
      //     if (GameApp.dataManager.globalData.allRoleArr[i].skinData.skinid == this.skinData.skinid) {
      //         GameApp.dataManager.globalData.allRoleArr.splice(i, 1)
      //         break
      //     }
      // }


      if (this._haveGun) {
        var theParentC = GameApp.uiManager.gameRoot.children[0].getComponent("GameMap");
        GameApp.uiManager.showGameObject("GroundItem", function (node) {
          var ddd = theParentC.allGunNode.convertToNodeSpaceAR(_this2.node.convertToWorldSpaceAR(cc.v2(0, 0)));
          node.parent = theParentC.allGunNode;
          node.setPosition(ddd);
          var _param = {
            _type: ItemType.weapon,
            _kind: Tools.getIndex(GameApp.dataManager.jsonData.WeaponData, _this2.gunData)
          }; // console.log(_param._kind)

          node.getComponent('GroundItem').init(_param);
          GameApp.dataManager.globalData.allGunArr.push(node);
        });
      }

      var arr = GameApp.dataManager.userData.choosedSkinId < 21 ? ['dead'] : ['dead2'];
      this.roleAnim.setAnimation(0, arr[0], false);
      this.gunNode.active = false;
      Tools.removeArray(GameApp.dataManager.globalData.allRoleArr, this.node.getComponent('Player'));
      var theRank = GameApp.dataManager.globalData.allRoleArr.length;
      GameApp.uiManager.getPopup("OverPopup") == null && GameApp.uiManager.showPopup("OverPopup", function (node) {
        node.getComponent("OverPopup").init(false, theRank + 1);
      });
      GameApp.eventManager.emit(EventNames.EVENT_SHOW_ALLROLENUM_UI);
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/game/ParatrooperPlayer.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '248fc4jZoZIZJMVVhMKdpCk', 'ParatrooperPlayer');
// scripts/game/ParatrooperPlayer.js

"use strict";

var _JoystickCommon = require("JoystickCommon");

cc.Class({
  "extends": cc.Component,
  properties: {
    // from joystick
    moveDir: {
      "default": cc.v2(1, 0),
      displayName: 'Move Dir',
      tooltip: '移动方向'
    },
    _speedType: {
      "default": _JoystickCommon.SpeedType.STOP,
      displayName: 'Speed Type',
      type: _JoystickCommon.SpeedType,
      tooltip: '速度级别'
    },
    // from self
    _moveSpeed: {
      "default": 0,
      displayName: 'Move Speed',
      tooltip: '移动速度'
    },
    stopSpeed: {
      "default": 0,
      type: cc.Integer,
      tooltip: '停止时速度'
    },
    fastSpeed: {
      "default": 100,
      type: cc.Integer,
      tooltip: '最快速度'
    },
    _borderGroup: []
  },
  onLoad: function onLoad() {},
  onEnable: function onEnable() {},
  onDisable: function onDisable() {},
  onDestroy: function onDestroy() {},
  init: function init(_bg) {
    this._borderGroup = _bg;
  },
  // methods
  move: function move() {
    var newPos = this.node.position.add(this.moveDir.mul(this._moveSpeed / 60));

    if (newPos.x < this._borderGroup[0].x) {
      newPos.x = this._borderGroup[0].x;
    }

    if (newPos.x > this._borderGroup[1].x) {
      newPos.x = this._borderGroup[1].x;
    }

    if (newPos.y > this._borderGroup[0].y) {
      newPos.y = this._borderGroup[0].y;
    }

    if (newPos.y < this._borderGroup[2].y) {
      newPos.y = this._borderGroup[2].y;
    }

    this.node.setPosition(newPos);
  },
  setSpeedType: function setSpeedType(_type) {
    if (this._isDie) return;

    if (this._speedType != _type) {
      this._speedType = _type;
    }
  },
  setDir: function setDir(_dir) {
    this.moveDir = _dir;
  },
  update: function update(dt) {
    switch (this._speedType) {
      case _JoystickCommon.SpeedType.STOP:
        this._moveSpeed = this.stopSpeed;
        break;

      case _JoystickCommon.SpeedType.NORMAL:
        this._moveSpeed = this.fastSpeed;
        break;

      case _JoystickCommon.SpeedType.FAST:
        this._moveSpeed = this.fastSpeed;
        break;

      default:
        break;
    }

    this.move();
  },
  lateUpdate: function lateUpdate(dt) {
    // this.mainC.node.setPosition(this.player.position)
    // this.testC.node.setPosition(this.player.position)
    GameApp.uiManager.mapCamera.node.setPosition(this.node.position); // this.mipmapCamera.node.setPosition(this.node.position)
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcZ2FtZVxcUGFyYXRyb29wZXJQbGF5ZXIuanMiXSwibmFtZXMiOlsiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJtb3ZlRGlyIiwidjIiLCJkaXNwbGF5TmFtZSIsInRvb2x0aXAiLCJfc3BlZWRUeXBlIiwiU3BlZWRUeXBlIiwiU1RPUCIsInR5cGUiLCJfbW92ZVNwZWVkIiwic3RvcFNwZWVkIiwiSW50ZWdlciIsImZhc3RTcGVlZCIsIl9ib3JkZXJHcm91cCIsIm9uTG9hZCIsIm9uRW5hYmxlIiwib25EaXNhYmxlIiwib25EZXN0cm95IiwiaW5pdCIsIl9iZyIsIm1vdmUiLCJuZXdQb3MiLCJub2RlIiwicG9zaXRpb24iLCJhZGQiLCJtdWwiLCJ4IiwieSIsInNldFBvc2l0aW9uIiwic2V0U3BlZWRUeXBlIiwiX3R5cGUiLCJfaXNEaWUiLCJzZXREaXIiLCJfZGlyIiwidXBkYXRlIiwiZHQiLCJOT1JNQUwiLCJGQVNUIiwibGF0ZVVwZGF0ZSIsIkdhbWVBcHAiLCJ1aU1hbmFnZXIiLCJtYXBDYW1lcmEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBRUFBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBRUxDLEVBQUFBLFVBQVUsRUFBRTtBQUVSO0FBQ0FDLElBQUFBLE9BQU8sRUFBRTtBQUNMLGlCQUFTSixFQUFFLENBQUNLLEVBQUgsQ0FBTSxDQUFOLEVBQVMsQ0FBVCxDQURKO0FBRUxDLE1BQUFBLFdBQVcsRUFBRSxVQUZSO0FBR0xDLE1BQUFBLE9BQU8sRUFBRTtBQUhKLEtBSEQ7QUFRUkMsSUFBQUEsVUFBVSxFQUFFO0FBQ1IsaUJBQVNDLDBCQUFVQyxJQURYO0FBRVJKLE1BQUFBLFdBQVcsRUFBRSxZQUZMO0FBR1JLLE1BQUFBLElBQUksRUFBRUYseUJBSEU7QUFJUkYsTUFBQUEsT0FBTyxFQUFFO0FBSkQsS0FSSjtBQWVSO0FB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QUtHLFNBQXZCO0FBQ0E7O0FBQ0osV0FBS04sMEJBQVUrQixJQUFmO0FBQ0ksYUFBSzVCLFVBQUwsR0FBa0IsS0FBS0csU0FBdkI7QUFDQTs7QUFDSjtBQUNJO0FBWFI7O0FBYUEsU0FBS1EsSUFBTDtBQUVILEdBNUZJO0FBNkZMa0IsRUFBQUEsVUE3Rkssc0JBNkZNSCxFQTdGTixFQTZGVTtBQUNYO0FBQ0E7QUFDQUksSUFBQUEsT0FBTyxDQUFDQyxTQUFSLENBQWtCQyxTQUFsQixDQUE0Qm5CLElBQTVCLENBQWlDTSxXQUFqQyxDQUE2QyxLQUFLTixJQUFMLENBQVVDLFFBQXZELEVBSFcsQ0FJWDtBQUNIO0FBbEdJLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNwZWVkVHlwZSB9IGZyb20gJ0pveXN0aWNrQ29tbW9uJ1xyXG5cclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG4gICAgcHJvcGVydGllczoge1xyXG5cclxuICAgICAgICAvLyBmcm9tIGpveXN0aWNrXHJcbiAgICAgICAgbW92ZURpcjoge1xyXG4gICAgICAgICAgICBkZWZhdWx0OiBjYy52MigxLCAwKSxcclxuICAgICAgICAgICAgZGlzcGxheU5hbWU6ICdNb3ZlIERpcicsXHJcbiAgICAgICAgICAgIHRvb2x0aXA6ICfnp7vliqjmlrnlkJEnLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgX3NwZWVkVHlwZToge1xyXG4gICAgICAgICAgICBkZWZhdWx0OiBTcGVlZFR5cGUuU1RPUCxcclxuICAgICAgICAgICAgZGlzcGxheU5hbWU6ICdTcGVlZCBUeXBlJyxcclxuICAgICAgICAgICAgdHlwZTogU3BlZWRUeXBlLFxyXG4gICAgICAgICAgICB0b29sdGlwOiAn6YCf5bqm57qn5YirJ1xyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIC8vIGZyb20gc2VsZlxyXG4gICAgICAgIF9tb3ZlU3BlZWQ6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogMCxcclxuICAgICAgICAgICAgZGlzcGxheU5hbWU6ICdNb3ZlIFNwZWVkJyxcclxuICAgICAgICAgICAgdG9vbHRpcDogJ+enu+WKqOmAn+W6pidcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBzdG9wU3BlZWQ6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogMCxcclxuICAgICAgICAgICAgdHlwZTogY2MuSW50ZWdlcixcclxuICAgICAgICAgICAgdG9vbHRpcDogJ+WBnOatouaXtumAn+W6pidcclxuICAgICAgICB9LFxyXG4gICAgICAgIGZhc3RTcGVlZDoge1xyXG4gICAgICAgICAgICBkZWZhdWx0OiAxMDAsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLkludGVnZXIsXHJcbiAgICAgICAgICAgIHRvb2x0aXA6ICfmnIDlv6vpgJ/luqYnXHJcbiAgICAgICAgfSxcclxuICAgICAgICBfYm9yZGVyR3JvdXA6IFtdXHJcbiAgICB9LFxyXG4gICAgb25Mb2FkKCkge1xyXG4gICAgfSxcclxuICAgIG9uRW5hYmxlKCkge1xyXG5cclxuICAgIH0sXHJcbiAgICBvbkRpc2FibGUoKSB7XHJcblxyXG4gICAgfSxcclxuICAgIG9uRGVzdHJveSgpIHtcclxuXHJcbiAgICB9LFxyXG4gICAgaW5pdChfYmcpIHtcclxuICAgICAgICB0aGlzLl9ib3JkZXJHcm91cCA9IF9iZ1xyXG4gICAgfSxcclxuICAgIC8vIG1ldGhvZHNcclxuICAgIG1vdmUoKSB7XHJcbiAgICAgICAgbGV0IG5ld1BvcyA9IHRoaXMubm9kZS5wb3NpdGlvbi5hZGQodGhpcy5tb3ZlRGlyLm11bCh0aGlzLl9tb3ZlU3BlZWQgLyA2MCkpO1xyXG4gICAgICAgIGlmIChuZXdQb3MueCA8IHRoaXMuX2JvcmRlckdyb3VwWzBdLngpIHtcclxuICAgICAgICAgICAgbmV3UG9zLnggPSB0aGlzLl9ib3JkZXJHcm91cFswXS54XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChuZXdQb3MueCA+IHRoaXMuX2JvcmRlckdyb3VwWzFdLngpIHtcclxuICAgICAgICAgICAgbmV3UG9zLnggPSB0aGlzLl9ib3JkZXJHcm91cFsxXS54XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChuZXdQb3MueSA+IHRoaXMuX2JvcmRlckdyb3VwWzBdLnkpIHtcclxuICAgICAgICAgICAgbmV3UG9zLnkgPSB0aGlzLl9ib3JkZXJHcm91cFswXS55XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChuZXdQb3MueSA8IHRoaXMuX2JvcmRlckdyb3VwWzJdLnkpIHtcclxuICAgICAgICAgICAgbmV3UG9zLnkgPSB0aGlzLl9ib3JkZXJHcm91cFsyXS55XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubm9kZS5zZXRQb3NpdGlvbihuZXdQb3MpO1xyXG4gICAgfSxcclxuICAgIHNldFNwZWVkVHlwZShfdHlwZSkge1xyXG4gICAgICAgIGlmICh0aGlzLl9pc0RpZSkgcmV0dXJuO1xyXG4gICAgICAgIGlmICh0aGlzLl9zcGVlZFR5cGUgIT0gX3R5cGUpIHtcclxuICAgICAgICAgICAgdGhpcy5fc3BlZWRUeXBlID0gX3R5cGVcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgc2V0RGlyKF9kaXIpIHtcclxuICAgICAgICB0aGlzLm1vdmVEaXIgPSBfZGlyXHJcbiAgICB9LFxyXG4gICAgdXBkYXRlKGR0KSB7XHJcbiAgICAgICAgc3dpdGNoICh0aGlzLl9zcGVlZFR5cGUpIHtcclxuICAgICAgICAgICAgY2FzZSBTcGVlZFR5cGUuU1RPUDpcclxuICAgICAgICAgICAgICAgIHRoaXMuX21vdmVTcGVlZCA9IHRoaXMuc3RvcFNwZWVkO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgU3BlZWRUeXBlLk5PUk1BTDpcclxuICAgICAgICAgICAgICAgIHRoaXMuX21vdmVTcGVlZCA9IHRoaXMuZmFzdFNwZWVkXHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBTcGVlZFR5cGUuRkFTVDpcclxuICAgICAgICAgICAgICAgIHRoaXMuX21vdmVTcGVlZCA9IHRoaXMuZmFzdFNwZWVkXHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm1vdmUoKTtcclxuXHJcbiAgICB9LFxyXG4gICAgbGF0ZVVwZGF0ZShkdCkge1xyXG4gICAgICAgIC8vIHRoaXMubWFpbkMubm9kZS5zZXRQb3NpdGlvbih0aGlzLnBsYXllci5wb3NpdGlvbilcclxuICAgICAgICAvLyB0aGlzLnRlc3RDLm5vZGUuc2V0UG9zaXRpb24odGhpcy5wbGF5ZXIucG9zaXRpb24pXHJcbiAgICAgICAgR2FtZUFwcC51aU1hbmFnZXIubWFwQ2FtZXJhLm5vZGUuc2V0UG9zaXRpb24odGhpcy5ub2RlLnBvc2l0aW9uKVxyXG4gICAgICAgIC8vIHRoaXMubWlwbWFwQ2FtZXJhLm5vZGUuc2V0UG9zaXRpb24odGhpcy5ub2RlLnBvc2l0aW9uKVxyXG4gICAgfSxcclxuXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/game/Joystick.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a085ato4b5AsrP+bIxB9yZe', 'Joystick');
// scripts/game/Joystick.js

"use strict";

var _JoystickCommon = _interopRequireDefault(require("JoystickCommon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

cc.Class({
  "extends": cc.Component,
  properties: {
    dot: {
      "default": null,
      type: cc.Node,
      displayName: '杆子',
      tooltip: '摇杆操纵点'
    },
    ring: {
      "default": null,
      type: cc.Node,
      displayName: '底部圈子',
      tooltip: '摇杆背景节点'
    },
    player: {
      "default": null,
      type: cc.Node,
      displayName: '操控角色',
      tooltip: '操控角色'
    },
    joystickType: {
      "default": _JoystickCommon["default"].JoystickType.FIXED,
      type: _JoystickCommon["default"].JoystickType,
      displayName: '触摸类型',
      tooltip: '定死的还是随触摸位置变化的'
    },
    directionType: {
      "default": _JoystickCommon["default"].DirectionType.ALL,
      type: _JoystickCommon["default"].DirectionType,
      displayName: '方向限制',
      tooltip: '四向，八向，万向'
    },
    _stickPos: {
      "default": null,
      type: cc.Node,
      tooltip: '摇杆所在位置'
    },
    _touchLocation: {
      "default": null,
      type: cc.Node,
      tooltip: '触摸位置'
    }
  },
  onLoad: function onLoad() {
    this._radius = this.ring.width / 2;

    this._initTouchEvent(); // hide joystick when follow


    if (this.joystickType == _JoystickCommon["default"].JoystickType.FOLLOW) {
      this.node.opacity = 0;
    }
  },
  _initTouchEvent: function _initTouchEvent() {
    // set the size of joystick node to control scale
    var self = this;
    self.node.on(cc.Node.EventType.TOUCH_START, self._touchStartEvent, self);
    self.node.on(cc.Node.EventType.TOUCH_MOVE, self._touchMoveEvent, self);
    self.node.on(cc.Node.EventType.TOUCH_END, self._touchEndEvent, self);
    self.node.on(cc.Node.EventType.TOUCH_CANCEL, self._touchEndEvent, self);
  },
  _touchStartEvent: function _touchStartEvent(event) {
    if (this.player == null || this.player == undefined) return; // this.player = this.player.getComponent('Player') || this.player.getComponent('ParatrooperPlayer')

    var touchPos = this.node.convertToNodeSpaceAR(event.getLocation());

    if (this.joystickType === _JoystickCommon["default"].JoystickType.FIXED) {
      this._stickPos = this.ring.getPosition(); // 触摸点与圆圈中心的距离

      var distance = touchPos.sub(this.ring.getPosition()).mag(); // 手指在圆圈内触摸,控杆跟随触摸点

      if (this._radius > distance) {
        this.dot.setPosition(touchPos);
      }
    } else if (this.joystickType === _JoystickCommon["default"].JoystickType.FOLLOW) {
      // 记录摇杆位置，给 touch move 使用
      this._stickPos = touchPos;
      this.node.opacity = 255;
      this._touchLocation = event.getLocation(); // 更改摇杆的位置

      this.ring.setPosition(touchPos);
      this.dot.setPosition(touchPos);
    }
  },
  _touchMoveEvent: function _touchMoveEvent(event) {
    if (this.joystickType === _JoystickCommon["default"].JoystickType.FOLLOW) {
      // 如果 touch start 位置和 touch move 相同，禁止移动
      if (this._touchLocation === event.getLocation()) {
        return false;
      }
    } // 以圆圈为锚点获取触摸坐标


    var touchPos = this.ring.convertToNodeSpaceAR(event.getLocation());
    var distance = touchPos.mag(); // 由于摇杆的 postion 是以父节点为锚点，所以定位要加上 touch start 时的位置

    var posX = this._stickPos.x + touchPos.x;
    var posY = this._stickPos.y + touchPos.y; // 归一化

    var p = cc.v2(posX, posY).sub(this.ring.getPosition()).normalize();

    if (this._radius > distance) {
      this.dot.setPosition(cc.v2(posX, posY)); // this.player.setSpeedType(JoystickCommon.SpeedType.NORMAL)
    } else {
      // 控杆永远保持在圈内，并在圈内跟随触摸更新角度
      var x = this._stickPos.x + p.x * this._radius;
      var y = this._stickPos.y + p.y * this._radius;
      this.dot.setPosition(cc.v2(x, y)); // this.player.setSpeedType(JoystickCommon.SpeedType.FAST)
    }

    if (this.player == null || this.player == undefined) return;
    this.player.setSpeedType(_JoystickCommon["default"].SpeedType.FAST); // this.player.moveDir = p

    this.player.setDir(p);
  },
  _touchEndEvent: function _touchEndEvent() {
    this.dot.setPosition(this.ring.getPosition());

    if (this.joystickType == _JoystickCommon["default"].JoystickType.FOLLOW) {
      this.node.opacity = 0;
    }

    if (this.player == null || this.player == undefined) return;
    this.player.setSpeedType(_JoystickCommon["default"].SpeedType.STOP);
  } // methods
  // setPlayerSpeed() {
  //   this.player = this.player.getComponent('Player');
  //   this.player.moveDir = p;
  //   this.player.speedType = JoystickCommon.SpeedType.NORMAL;
  // },

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/manager/ConfigManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1bd72n2n1JOz4R303K0b7TD', 'ConfigManager');
// scripts/manager/ConfigManager.js

"use strict";

var paths = {
  "Skin": 'data/skins.json'
};
var ConfigManager = {
  allConfigs: {},
  loadConfig: function loadConfig(_name, _call) {
    var path = paths[_name];
    cc.loader.loadRes(path, function (err, res) {
      if (err) {
        console.log("加载出错了");
        console.error(err.message || err);
        return;
      }

      var tempData = res;
      this.allConfigs[_name] = tempData;
      _call && _call(); // console.log(JSON.parse(JSON.stringify(res)));
    }.bind(this));
  },
  loadAllConfig: function loadAllConfig(_call) {
    for (var key in paths) {
      if (paths.hasOwnProperty(key)) {
        // const element = paths[key];
        this.loadConfig(key, _call);
      }
    }
  },
  getAllConfig: function getAllConfig() {
    return this.allConfigs;
  }
};
module.exports = ConfigManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcbWFuYWdlclxcQ29uZmlnTWFuYWdlci5qcyJdLCJuYW1lcyI6WyJwYXRocyIsIkNvbmZpZ01hbmFnZXIiLCJhbGxDb25maWdzIiwibG9hZENvbmZpZyIsIl9uYW1lIiwiX2NhbGwiLCJwYXRoIiwiY2MiLCJsb2FkZXIiLCJsb2FkUmVzIiwiZXJyIiwicmVzIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwibWVzc2FnZSIsInRlbXBEYXRhIiwiYmluZCIsImxvYWRBbGxDb25maWciLCJrZXkiLCJoYXNPd25Qcm9wZXJ0eSIsImdldEFsbENvbmZpZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBTUEsS0FBSyxHQUFHO0FBQ1YsVUFBUTtBQURFLENBQWQ7QUFJQSxJQUFJQyxhQUFhLEdBQUc7QUFDaEJDLEVBQUFBLFVBQVUsRUFBRSxFQURJO0FBRWhCQyxFQUFBQSxVQUFVLEVBQUUsb0JBQVVDLEtBQVYsRUFBaUJDLEtBQWpCLEVBQXdCO0FBRWhDLFFBQUlDLElBQUksR0FBR04sS0FBSyxDQUFDSSxLQUFELENBQWhCO0FBQ0FHLElBQUFBLEVBQUUsQ0FBQ0MsTUFBSCxDQUFVQyxPQUFWLENBQWtCSCxJQUFsQixFQUF3QixVQUFVSSxHQUFWLEVBQWVDLEdBQWYsRUFBb0I7QUFDeEMsVUFBSUQsR0FBSixFQUFTO0FBQ0xFLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE9BQVo7QUFDQUQsUUFBQUEsT0FBTyxDQUFDRSxLQUFSLENBQWNKLEdBQUcsQ0FBQ0ssT0FBSixJQUFlTCxHQUE3QjtBQUNBO0FBQ0g7O0FBQ0QsVUFBSU0sUUFBUSxHQUFHTCxHQUFmO0FBRUEsV0FBS1QsVUFBTCxDQUFnQkUsS0FBaEIsSUFBeUJZLFFBQXpCO0FBQ0FYLE1BQUFBLEtBQUssSUFBSUEsS0FBSyxFQUFkLENBVHdDLENBVXhDO0FBQ0gsS0FYdUIsQ0FXdEJZLElBWHNCLENBV2pCLElBWGlCLENBQXhCO0FBWUgsR0FqQmU7QUFrQmhCQyxFQUFBQSxhQUFhLEVBQUUsdUJBQVViLEtBQVYsRUFBaUI7QUFDNUIsU0FBSyxJQUFNYyxHQUFYLElBQWtCbkIsS0FBbEIsRUFBeUI7QUFDckIsVUFBSUEsS0FBSyxDQUFDb0IsY0FBTixDQUFxQkQsR0FBckIsQ0FBSixFQUErQjtBQUMzQjtBQUNBLGFBQUtoQixVQUFMLENBQWdCZ0IsR0FBaEIsRUFBcUJkLEtBQXJCO0FBQ0g7QUFDSjtBQUNKLEdBekJlO0FBMEJoQmdCLEVBQUFBLFlBQVksRUFBRSx3QkFBWTtBQUN0QixXQUFPLEtBQUtuQixVQUFaO0FBQ0g7QUE1QmUsQ0FBcEI7QUErQkFvQixNQUFNLENBQUNDLE9BQVAsR0FBaUJ0QixhQUFqQiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGF0aHMgPSB7XHJcbiAgICBcIlNraW5cIjogJ2RhdGEvc2tpbnMuanNvbicsXHJcbn07XHJcblxyXG52YXIgQ29uZmlnTWFuYWdlciA9IHtcclxuICAgIGFsbENvbmZpZ3M6IHt9LFxyXG4gICAgbG9hZENvbmZpZzogZnVuY3Rpb24gKF9uYW1lLCBfY2FsbCkge1xyXG5cclxuICAgICAgICB2YXIgcGF0aCA9IHBhdGhzW19uYW1lXTtcclxuICAgICAgICBjYy5sb2FkZXIubG9hZFJlcyhwYXRoLCBmdW5jdGlvbiAoZXJyLCByZXMpIHtcclxuICAgICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLliqDovb3lh7rplJnkuoZcIilcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyLm1lc3NhZ2UgfHwgZXJyKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgdGVtcERhdGEgPSByZXM7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmFsbENvbmZpZ3NbX25hbWVdID0gdGVtcERhdGE7XHJcbiAgICAgICAgICAgIF9jYWxsICYmIF9jYWxsKClcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShyZXMpKSk7XHJcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcclxuICAgIH0sXHJcbiAgICBsb2FkQWxsQ29uZmlnOiBmdW5jdGlvbiAoX2NhbGwpIHtcclxuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBwYXRocykge1xyXG4gICAgICAgICAgICBpZiAocGF0aHMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgICAgICAgICAgICAgLy8gY29uc3QgZWxlbWVudCA9IHBhdGhzW2tleV07XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvYWRDb25maWcoa2V5LCBfY2FsbCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgZ2V0QWxsQ29uZmlnOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYWxsQ29uZmlncztcclxuICAgIH0sXHJcblxyXG59O1xyXG5tb2R1bGUuZXhwb3J0cyA9IENvbmZpZ01hbmFnZXI7Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/game/ParatrooperEnemy.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bf863F2RelJYKW79OD4Wy5c', 'ParatrooperEnemy');
// scripts/game/ParatrooperEnemy.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    _borderGroup: []
  },
  init: function init(_bg) {
    this._borderGroup = _bg;
  },
  update: function update() {
    var newPos = this.node.position;

    if (newPos.x < this._borderGroup[0].x) {
      newPos.x = this._borderGroup[0].x;
    }

    if (newPos.x > this._borderGroup[1].x) {
      newPos.x = this._borderGroup[1].x;
    }

    if (newPos.y > this._borderGroup[0].y) {
      newPos.y = this._borderGroup[0].y;
    }

    if (newPos.y < this._borderGroup[2].y) {
      newPos.y = this._borderGroup[2].y;
    }

    this.node.setPosition(newPos);
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcZ2FtZVxcUGFyYXRyb29wZXJFbmVteS5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsIl9ib3JkZXJHcm91cCIsImluaXQiLCJfYmciLCJ1cGRhdGUiLCJuZXdQb3MiLCJub2RlIiwicG9zaXRpb24iLCJ4IiwieSIsInNldFBvc2l0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUNBQSxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsWUFBWSxFQUFFO0FBRE4sR0FIUDtBQU9MQyxFQUFBQSxJQVBLLGdCQU9BQyxHQVBBLEVBT0s7QUFDTixTQUFLRixZQUFMLEdBQW9CRSxHQUFwQjtBQUNILEdBVEk7QUFVTEMsRUFBQUEsTUFWSyxvQkFVSTtBQUNMLFFBQUlDLE1BQU0sR0FBRyxLQUFLQyxJQUFMLENBQVVDLFFBQXZCOztBQUNBLFFBQUlGLE1BQU0sQ0FBQ0csQ0FBUCxHQUFXLEtBQUtQLFlBQUwsQ0FBa0IsQ0FBbEIsRUFBcUJPLENBQXBDLEVBQXVDO0FBQ25DSCxNQUFBQSxNQUFNLENBQUNHLENBQVAsR0FBVyxLQUFLUCxZQUFMLENBQWtCLENBQWxCLEVBQXFCTyxDQUFoQztBQUNIOztBQUNELFFBQUlILE1BQU0sQ0FBQ0csQ0FBUCxHQUFXLEtBQUtQLFlBQUwsQ0FBa0IsQ0FBbEIsRUFBcUJPLENBQXBDLEVBQXVDO0FBQ25DSCxNQUFBQSxNQUFNLENBQUNHLENBQVAsR0FBVyxLQUFLUCxZQUFMLENBQWtCLENBQWxCLEVBQXFCTyxDQUFoQztBQUNIOztBQUNELFFBQUlILE1BQU0sQ0FBQ0ksQ0FBUCxHQUFXLEtBQUtSLFlBQUwsQ0FBa0IsQ0FBbEIsRUFBcUJRLENBQXBDLEVBQXVDO0FBQ25DSixNQUFBQSxNQUFNLENBQUNJLENBQVAsR0FBVyxLQUFLUixZQUFMLENBQWtCLENBQWxCLEVBQXFCUSxDQUFoQztBQUNIOztBQUNELFFBQUlKLE1BQU0sQ0FBQ0ksQ0FBUCxHQUFXLEtBQUtSLFlBQUwsQ0FBa0IsQ0FBbEIsRUFBcUJRLENBQXBDLEVBQXVDO0FBQ25DSixNQUFBQSxNQUFNLENBQUNJLENBQVAsR0FBVyxLQUFLUixZQUFMLENBQWtCLENBQWxCLEVBQXFCUSxDQUFoQztBQUNIOztBQUNELFNBQUtILElBQUwsQ0FBVUksV0FBVixDQUFzQkwsTUFBdEI7QUFDSDtBQXpCSSxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuICAgICAgICBfYm9yZGVyR3JvdXA6IFtdXHJcbiAgICB9LFxyXG5cclxuICAgIGluaXQoX2JnKSB7XHJcbiAgICAgICAgdGhpcy5fYm9yZGVyR3JvdXAgPSBfYmdcclxuICAgIH0sXHJcbiAgICB1cGRhdGUoKSB7XHJcbiAgICAgICAgbGV0IG5ld1BvcyA9IHRoaXMubm9kZS5wb3NpdGlvblxyXG4gICAgICAgIGlmIChuZXdQb3MueCA8IHRoaXMuX2JvcmRlckdyb3VwWzBdLngpIHtcclxuICAgICAgICAgICAgbmV3UG9zLnggPSB0aGlzLl9ib3JkZXJHcm91cFswXS54XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChuZXdQb3MueCA+IHRoaXMuX2JvcmRlckdyb3VwWzFdLngpIHtcclxuICAgICAgICAgICAgbmV3UG9zLnggPSB0aGlzLl9ib3JkZXJHcm91cFsxXS54XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChuZXdQb3MueSA+IHRoaXMuX2JvcmRlckdyb3VwWzBdLnkpIHtcclxuICAgICAgICAgICAgbmV3UG9zLnkgPSB0aGlzLl9ib3JkZXJHcm91cFswXS55XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChuZXdQb3MueSA8IHRoaXMuX2JvcmRlckdyb3VwWzJdLnkpIHtcclxuICAgICAgICAgICAgbmV3UG9zLnkgPSB0aGlzLl9ib3JkZXJHcm91cFsyXS55XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubm9kZS5zZXRQb3NpdGlvbihuZXdQb3MpO1xyXG4gICAgfSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/GameApp.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd852dPR0w5Ho5tjM6fqnxy9', 'GameApp');
// scripts/GameApp.js

"use strict";

var AudioManager = require('AudioManager');

var UIManager = require('UIManager');

var DataManager = require('DataManager');

var EventManager = require('EventManager');

var GameApp = cc.Class({
  properties: {
    eventManager: EventManager,
    dataManager: DataManager,
    audioManager: AudioManager,
    // httpManager: HttpManager,
    // socketManager: SocketManager,
    uiManager: UIManager
  },
  ctor: function ctor() {
    this.eventManager = new EventManager();
    this.dataManager = new DataManager();
    this.audioManager = new AudioManager(); // this.httpManager = new HttpManager();
    // this.socketManager = new SocketManager();

    this.uiManager = null; // this.protocol = require("Protocol");
  },
  Start: function Start() {// this.protocol.Initialize();
    // cc.debug.setDisplayStats(false);   // 关闭Creator调试的时候左下角的fps面板
    // var manager = cc.director.getCollisionManager();  // 获取碰撞检测类
    // manager.enabled = true   //开启碰撞检测
    // manager.enabledDebugDraw = true //显示碰撞检测区域
  }
});

if (!CC_EDITOR) {
  console.log('初始化GameApp');
  window.GameApp = new GameApp();
  window.GameApp.Start();
}

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcR2FtZUFwcC5qcyJdLCJuYW1lcyI6WyJBdWRpb01hbmFnZXIiLCJyZXF1aXJlIiwiVUlNYW5hZ2VyIiwiRGF0YU1hbmFnZXIiLCJFdmVudE1hbmFnZXIiLCJHYW1lQXBwIiwiY2MiLCJDbGFzcyIsInByb3BlcnRpZXMiLCJldmVudE1hbmFnZXIiLCJkYXRhTWFuYWdlciIsImF1ZGlvTWFuYWdlciIsInVpTWFuYWdlciIsImN0b3IiLCJTdGFydCIsIkNDX0VESVRPUiIsImNvbnNvbGUiLCJsb2ciLCJ3aW5kb3ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBTUEsWUFBWSxHQUFHQyxPQUFPLENBQUMsY0FBRCxDQUE1Qjs7QUFDQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQUNBLElBQU1FLFdBQVcsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBM0I7O0FBQ0EsSUFBTUcsWUFBWSxHQUFHSCxPQUFPLENBQUMsY0FBRCxDQUE1Qjs7QUFFQSxJQUFJSSxPQUFPLEdBQUdDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ25CQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsWUFBWSxFQUFFTCxZQUROO0FBRVJNLElBQUFBLFdBQVcsRUFBRVAsV0FGTDtBQUdSUSxJQUFBQSxZQUFZLEVBQUVYLFlBSE47QUFJUjtBQUNBO0FBQ0FZLElBQUFBLFNBQVMsRUFBRVY7QUFOSCxHQURPO0FBV25CVyxFQUFBQSxJQVhtQixrQkFXWjtBQUNILFNBQUtKLFlBQUwsR0FBb0IsSUFBSUwsWUFBSixFQUFwQjtBQUNBLFNBQUtNLFdBQUwsR0FBbUIsSUFBSVAsV0FBSixFQUFuQjtBQUNBLFNBQUtRLFlBQUwsR0FBb0IsSUFBSVgsWUFBSixFQUFwQixDQUhHLENBSUg7QUFDQTs7QUFDQSxTQUFLWSxTQUFMLEdBQWlCLElBQWpCLENBTkcsQ0FPSDtBQUNILEdBbkJrQjtBQXFCbkJFLEVBQUFBLEtBckJtQixtQkFxQlgsQ0FDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0g7QUEzQmtCLENBQVQsQ0FBZDs7QUE2QkEsSUFBSSxDQUFDQyxTQUFMLEVBQWdCO0FBQ1pDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVo7QUFDQUMsRUFBQUEsTUFBTSxDQUFDYixPQUFQLEdBQWlCLElBQUlBLE9BQUosRUFBakI7QUFDQWEsRUFBQUEsTUFBTSxDQUFDYixPQUFQLENBQWVTLEtBQWY7QUFDSCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQXVkaW9NYW5hZ2VyID0gcmVxdWlyZSgnQXVkaW9NYW5hZ2VyJyk7XHJcbmNvbnN0IFVJTWFuYWdlciA9IHJlcXVpcmUoJ1VJTWFuYWdlcicpO1xyXG5jb25zdCBEYXRhTWFuYWdlciA9IHJlcXVpcmUoJ0RhdGFNYW5hZ2VyJyk7XHJcbmNvbnN0IEV2ZW50TWFuYWdlciA9IHJlcXVpcmUoJ0V2ZW50TWFuYWdlcicpO1xyXG5cclxubGV0IEdhbWVBcHAgPSBjYy5DbGFzcyh7XHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgZXZlbnRNYW5hZ2VyOiBFdmVudE1hbmFnZXIsXHJcbiAgICAgICAgZGF0YU1hbmFnZXI6IERhdGFNYW5hZ2VyLFxyXG4gICAgICAgIGF1ZGlvTWFuYWdlcjogQXVkaW9NYW5hZ2VyLFxyXG4gICAgICAgIC8vIGh0dHBNYW5hZ2VyOiBIdHRwTWFuYWdlcixcclxuICAgICAgICAvLyBzb2NrZXRNYW5hZ2VyOiBTb2NrZXRNYW5hZ2VyLFxyXG4gICAgICAgIHVpTWFuYWdlcjogVUlNYW5hZ2VyLFxyXG5cclxuICAgIH0sXHJcblxyXG4gICAgY3RvcigpIHtcclxuICAgICAgICB0aGlzLmV2ZW50TWFuYWdlciA9IG5ldyBFdmVudE1hbmFnZXIoKTtcclxuICAgICAgICB0aGlzLmRhdGFNYW5hZ2VyID0gbmV3IERhdGFNYW5hZ2VyKCk7XHJcbiAgICAgICAgdGhpcy5hdWRpb01hbmFnZXIgPSBuZXcgQXVkaW9NYW5hZ2VyKCk7XHJcbiAgICAgICAgLy8gdGhpcy5odHRwTWFuYWdlciA9IG5ldyBIdHRwTWFuYWdlcigpO1xyXG4gICAgICAgIC8vIHRoaXMuc29ja2V0TWFuYWdlciA9IG5ldyBTb2NrZXRNYW5hZ2VyKCk7XHJcbiAgICAgICAgdGhpcy51aU1hbmFnZXIgPSBudWxsO1xyXG4gICAgICAgIC8vIHRoaXMucHJvdG9jb2wgPSByZXF1aXJlKFwiUHJvdG9jb2xcIik7XHJcbiAgICB9LFxyXG5cclxuICAgIFN0YXJ0KCkge1xyXG4gICAgICAgIC8vIHRoaXMucHJvdG9jb2wuSW5pdGlhbGl6ZSgpO1xyXG4gICAgICAgIC8vIGNjLmRlYnVnLnNldERpc3BsYXlTdGF0cyhmYWxzZSk7ICAgLy8g5YWz6ZetQ3JlYXRvcuiwg+ivleeahOaXtuWAmeW3puS4i+inkueahGZwc+mdouadv1xyXG4gICAgICAgIC8vIHZhciBtYW5hZ2VyID0gY2MuZGlyZWN0b3IuZ2V0Q29sbGlzaW9uTWFuYWdlcigpOyAgLy8g6I635Y+W56Kw5pKe5qOA5rWL57G7XHJcbiAgICAgICAgLy8gbWFuYWdlci5lbmFibGVkID0gdHJ1ZSAgIC8v5byA5ZCv56Kw5pKe5qOA5rWLXHJcbiAgICAgICAgLy8gbWFuYWdlci5lbmFibGVkRGVidWdEcmF3ID0gdHJ1ZSAvL+aYvuekuueisOaSnuajgOa1i+WMuuWfn1xyXG4gICAgfSxcclxufSk7XHJcbmlmICghQ0NfRURJVE9SKSB7XHJcbiAgICBjb25zb2xlLmxvZygn5Yid5aeL5YyWR2FtZUFwcCcpO1xyXG4gICAgd2luZG93LkdhbWVBcHAgPSBuZXcgR2FtZUFwcCgpO1xyXG4gICAgd2luZG93LkdhbWVBcHAuU3RhcnQoKTtcclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/game/JoystickCommon.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '51150qsnGhKl4PsmdrbeVCq', 'JoystickCommon');
// scripts/game/JoystickCommon.js

"use strict";

exports.__esModule = true;
exports["default"] = void 0;
var _default = {
  JoystickType: cc.Enum({
    FIXED: 0,
    FOLLOW: 1
  }),
  DirectionType: cc.Enum({
    FOUR: 4,
    EIGHT: 8,
    ALL: 0
  }),
  SpeedType: cc.Enum({
    STOP: 0,
    NORMAL: 1,
    FAST: 2
  })
};
exports["default"] = _default;
module.exports = exports["default"];

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcZ2FtZVxcSm95c3RpY2tDb21tb24uanMiXSwibmFtZXMiOlsiSm95c3RpY2tUeXBlIiwiY2MiLCJFbnVtIiwiRklYRUQiLCJGT0xMT1ciLCJEaXJlY3Rpb25UeXBlIiwiRk9VUiIsIkVJR0hUIiwiQUxMIiwiU3BlZWRUeXBlIiwiU1RPUCIsIk5PUk1BTCIsIkZBU1QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFBZTtBQUNiQSxFQUFBQSxZQUFZLEVBQUVDLEVBQUUsQ0FBQ0MsSUFBSCxDQUFRO0FBQ3BCQyxJQUFBQSxLQUFLLEVBQUUsQ0FEYTtBQUVwQkMsSUFBQUEsTUFBTSxFQUFFO0FBRlksR0FBUixDQUREO0FBTWJDLEVBQUFBLGFBQWEsRUFBRUosRUFBRSxDQUFDQyxJQUFILENBQVE7QUFDckJJLElBQUFBLElBQUksRUFBRSxDQURlO0FBRXJCQyxJQUFBQSxLQUFLLEVBQUUsQ0FGYztBQUdyQkMsSUFBQUEsR0FBRyxFQUFFO0FBSGdCLEdBQVIsQ0FORjtBQVliQyxFQUFBQSxTQUFTLEVBQUVSLEVBQUUsQ0FBQ0MsSUFBSCxDQUFRO0FBQ2pCUSxJQUFBQSxJQUFJLEVBQUUsQ0FEVztBQUVqQkMsSUFBQUEsTUFBTSxFQUFFLENBRlM7QUFHakJDLElBQUFBLElBQUksRUFBRTtBQUhXLEdBQVI7QUFaRSIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICBKb3lzdGlja1R5cGU6IGNjLkVudW0oe1xuICAgIEZJWEVEOiAwLFxuICAgIEZPTExPVzogMSxcbiAgfSksXG5cbiAgRGlyZWN0aW9uVHlwZTogY2MuRW51bSh7XG4gICAgRk9VUjogNCxcbiAgICBFSUdIVDogOCxcbiAgICBBTEw6IDAsXG4gIH0pLFxuXG4gIFNwZWVkVHlwZTogY2MuRW51bSh7XG4gICAgU1RPUDogMCxcbiAgICBOT1JNQUw6IDEsXG4gICAgRkFTVDogMlxuICB9KVxufTtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/game/GroundItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3ac97Fj4dlJab4T+HVu8epF', 'GroundItem');
// scripts/game/GroundItem.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    itemType: {
      "default": {}
    }
  },
  onLoad: function onLoad() {
    this.getComponent(cc.PhysicsBoxCollider).tag = Tags.item;
    this.doAnim();
  },
  doAnim: function doAnim() {
    this.node.children[0].runAction(cc.sequence(cc.fadeOut(0.6), cc.fadeIn(0.3)).repeatForever());
    this.node.children[1].runAction(cc.sequence(cc.moveBy(0.5, cc.v2(0, 10)), cc.moveBy(0.5, cc.v2(0, -10))).repeatForever());
  },
  init: function init(_param, _spriteFrame) {
    _param && (this.itemType = _param); // if (true) {

    if (this.itemType._type == ItemType.weapon) {
      this.node.children[2].active = false;
      this.node.children[1].getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame("item_weapon_" + GameApp.dataManager.jsonData.WeaponData[_param._kind].skinname);
    } else {
      this.node.children[2].getComponent(cc.Label).string = GameApp.dataManager.jsonData.WeaponData[this.itemType._kind].name;
      this.node.children[2].active = true;
      this.node.children[1].getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame("item_equip_1_valid");
    }
  } // setItemIcon(id) {
  //     var self = this
  //     cc.loader.loadRes("texture/skin_piece/card_p_" + id, cc.SpriteFrame, function (err, spriteFrame) {
  //         self.methodBtnGroup[2].children[0].getComponent(cc.Sprite).spriteFrame = spriteFrame
  //     });
  // },

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcZ2FtZVxcR3JvdW5kSXRlbS5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsIml0ZW1UeXBlIiwib25Mb2FkIiwiZ2V0Q29tcG9uZW50IiwiUGh5c2ljc0JveENvbGxpZGVyIiwidGFnIiwiVGFncyIsIml0ZW0iLCJkb0FuaW0iLCJub2RlIiwiY2hpbGRyZW4iLCJydW5BY3Rpb24iLCJzZXF1ZW5jZSIsImZhZGVPdXQiLCJmYWRlSW4iLCJyZXBlYXRGb3JldmVyIiwibW92ZUJ5IiwidjIiLCJpbml0IiwiX3BhcmFtIiwiX3Nwcml0ZUZyYW1lIiwiX3R5cGUiLCJJdGVtVHlwZSIsIndlYXBvbiIsImFjdGl2ZSIsIlNwcml0ZSIsInNwcml0ZUZyYW1lIiwiR2FtZUFwcCIsInVpTWFuYWdlciIsImNvbW1vbkF0bGFzIiwiZ2V0U3ByaXRlRnJhbWUiLCJkYXRhTWFuYWdlciIsImpzb25EYXRhIiwiV2VhcG9uRGF0YSIsIl9raW5kIiwic2tpbm5hbWUiLCJMYWJlbCIsInN0cmluZyIsIm5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0FBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxRQUFRLEVBQUU7QUFDTixpQkFBUztBQURIO0FBREYsR0FIUDtBQVVMQyxFQUFBQSxNQVZLLG9CQVVJO0FBQ0wsU0FBS0MsWUFBTCxDQUFrQk4sRUFBRSxDQUFDTyxrQkFBckIsRUFBeUNDLEdBQXpDLEdBQStDQyxJQUFJLENBQUNDLElBQXBEO0FBQ0EsU0FBS0MsTUFBTDtBQUNILEdBYkk7QUFjTEEsRUFBQUEsTUFkSyxvQkFjSTtBQUNMLFNBQUtDLElBQUwsQ0FBVUMsUUFBVixDQUFtQixDQUFuQixFQUFzQkMsU0FBdEIsQ0FBZ0NkLEVBQUUsQ0FBQ2UsUUFBSCxDQUFZZixFQUFFLENBQUNnQixPQUFILENBQVcsR0FBWCxDQUFaLEVBQTZCaEIsRUFBRSxDQUFDaUIsTUFBSCxDQUFVLEdBQVYsQ0FBN0IsRUFBNkNDLGFBQTdDLEVBQWhDO0FBQ0EsU0FBS04sSUFBTCxDQUFVQyxRQUFWLENBQW1CLENBQW5CLEVBQXNCQyxTQUF0QixDQUFnQ2QsRUFBRSxDQUFDZSxRQUFILENBQVlmLEVBQUUsQ0FBQ21CLE1BQUgsQ0FBVSxHQUFWLEVBQWVuQixFQUFFLENBQUNvQixFQUFILENBQU0sQ0FBTixFQUFTLEVBQVQsQ0FBZixDQUFaLEVBQTBDcEIsRUFBRSxDQUFDbUIsTUFBSCxDQUFVLEdBQVYsRUFBZW5CLEVBQUUsQ0FBQ29CLEVBQUgsQ0FBTSxDQUFOLEVBQVMsQ0FBQyxFQUFWLENBQWYsQ0FBMUMsRUFBeUVGLGFBQXpFLEVBQWhDO0FBQ0gsR0FqQkk7QUFrQkxHLEVBQUFBLElBbEJLLGdCQWtCQUMsTUFsQkEsRUFrQlFDLFlBbEJSLEVBa0JzQjtBQUN2QkQsSUFBQUEsTUFBTSxLQUFLLEtBQUtsQixRQUFMLEdBQWdCa0IsTUFBckIsQ0FBTixDQUR1QixDQUV2Qjs7QUFDQSxRQUFJLEtBQUtsQixRQUFMLENBQWNvQixLQUFkLElBQXVCQyxRQUFRLENBQUNDLE1BQXBDLEVBQTRDO0FBQ3hDLFdBQUtkLElBQUwsQ0FBVUMsUUFBVixDQUFtQixDQUFuQixFQUFzQmMsTUFBdEIsR0FBK0IsS0FBL0I7QUFDQSxXQUFLZixJQUFMLENBQVVDLFFBQVYsQ0FBbUIsQ0FBbkIsRUFBc0JQLFlBQXRCLENBQW1DTixFQUFFLENBQUM0QixNQUF0QyxFQUE4Q0MsV0FBOUMsR0FBNERDLE9BQU8sQ0FBQ0MsU0FBUixDQUFrQkMsV0FBbEIsQ0FBOEJDLGNBQTlCLENBQTZDLGlCQUFpQkgsT0FBTyxDQUFDSSxXQUFSLENBQW9CQyxRQUFwQixDQUE2QkMsVUFBN0IsQ0FBd0NkLE1BQU0sQ0FBQ2UsS0FBL0MsRUFBc0RDLFFBQXBILENBQTVEO0FBQ0gsS0FIRCxNQUdPO0FBQ0gsV0FBSzFCLElBQUwsQ0FBVUMsUUFBVixDQUFtQixDQUFuQixFQUFzQlAsWUFBdEIsQ0FBbUNOLEVBQUUsQ0FBQ3VDLEtBQXRDLEVBQTZDQyxNQUE3QyxHQUFzRFYsT0FBTyxDQUFDSSxXQUFSLENBQW9CQyxRQUFwQixDQUE2QkMsVUFBN0IsQ0FBd0MsS0FBS2hDLFFBQUwsQ0FBY2lDLEtBQXRELEVBQTZESSxJQUFuSDtBQUNBLFdBQUs3QixJQUFMLENBQVVDLFFBQVYsQ0FBbUIsQ0FBbkIsRUFBc0JjLE1BQXRCLEdBQStCLElBQS9CO0FBQ0EsV0FBS2YsSUFBTCxDQUFVQyxRQUFWLENBQW1CLENBQW5CLEVBQXNCUCxZQUF0QixDQUFtQ04sRUFBRSxDQUFDNEIsTUFBdEMsRUFBOENDLFdBQTlDLEdBQTREQyxPQUFPLENBQUNDLFNBQVIsQ0FBa0JDLFdBQWxCLENBQThCQyxjQUE5QixDQUE2QyxvQkFBN0MsQ0FBNUQ7QUFDSDtBQUdKLEdBL0JJLENBZ0NMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFyQ0ssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgaXRlbVR5cGU6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDoge31cclxuICAgICAgICB9LFxyXG5cclxuICAgIH0sXHJcblxyXG4gICAgb25Mb2FkKCkge1xyXG4gICAgICAgIHRoaXMuZ2V0Q29tcG9uZW50KGNjLlBoeXNpY3NCb3hDb2xsaWRlcikudGFnID0gVGFncy5pdGVtXHJcbiAgICAgICAgdGhpcy5kb0FuaW0oKVxyXG4gICAgfSxcclxuICAgIGRvQW5pbSgpIHtcclxuICAgICAgICB0aGlzLm5vZGUuY2hpbGRyZW5bMF0ucnVuQWN0aW9uKGNjLnNlcXVlbmNlKGNjLmZhZGVPdXQoMC42KSwgY2MuZmFkZUluKDAuMykpLnJlcGVhdEZvcmV2ZXIoKSlcclxuICAgICAgICB0aGlzLm5vZGUuY2hpbGRyZW5bMV0ucnVuQWN0aW9uKGNjLnNlcXVlbmNlKGNjLm1vdmVCeSgwLjUsIGNjLnYyKDAsIDEwKSksIGNjLm1vdmVCeSgwLjUsIGNjLnYyKDAsIC0xMCkpKS5yZXBlYXRGb3JldmVyKCkpXHJcbiAgICB9LFxyXG4gICAgaW5pdChfcGFyYW0sIF9zcHJpdGVGcmFtZSkge1xyXG4gICAgICAgIF9wYXJhbSAmJiAodGhpcy5pdGVtVHlwZSA9IF9wYXJhbSlcclxuICAgICAgICAvLyBpZiAodHJ1ZSkge1xyXG4gICAgICAgIGlmICh0aGlzLml0ZW1UeXBlLl90eXBlID09IEl0ZW1UeXBlLndlYXBvbikge1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUuY2hpbGRyZW5bMl0uYWN0aXZlID0gZmFsc2VcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmNoaWxkcmVuWzFdLmdldENvbXBvbmVudChjYy5TcHJpdGUpLnNwcml0ZUZyYW1lID0gR2FtZUFwcC51aU1hbmFnZXIuY29tbW9uQXRsYXMuZ2V0U3ByaXRlRnJhbWUoXCJpdGVtX3dlYXBvbl9cIiArIEdhbWVBcHAuZGF0YU1hbmFnZXIuanNvbkRhdGEuV2VhcG9uRGF0YVtfcGFyYW0uX2tpbmRdLnNraW5uYW1lKVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5jaGlsZHJlblsyXS5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IEdhbWVBcHAuZGF0YU1hbmFnZXIuanNvbkRhdGEuV2VhcG9uRGF0YVt0aGlzLml0ZW1UeXBlLl9raW5kXS5uYW1lXHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5jaGlsZHJlblsyXS5hY3RpdmUgPSB0cnVlXHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5jaGlsZHJlblsxXS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5zcHJpdGVGcmFtZSA9IEdhbWVBcHAudWlNYW5hZ2VyLmNvbW1vbkF0bGFzLmdldFNwcml0ZUZyYW1lKFwiaXRlbV9lcXVpcF8xX3ZhbGlkXCIpXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICB9LFxyXG4gICAgLy8gc2V0SXRlbUljb24oaWQpIHtcclxuICAgIC8vICAgICB2YXIgc2VsZiA9IHRoaXNcclxuICAgIC8vICAgICBjYy5sb2FkZXIubG9hZFJlcyhcInRleHR1cmUvc2tpbl9waWVjZS9jYXJkX3BfXCIgKyBpZCwgY2MuU3ByaXRlRnJhbWUsIGZ1bmN0aW9uIChlcnIsIHNwcml0ZUZyYW1lKSB7XHJcbiAgICAvLyAgICAgICAgIHNlbGYubWV0aG9kQnRuR3JvdXBbMl0uY2hpbGRyZW5bMF0uZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSkuc3ByaXRlRnJhbWUgPSBzcHJpdGVGcmFtZVxyXG4gICAgLy8gICAgIH0pO1xyXG4gICAgLy8gfSxcclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/game/Bullet.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '72ba1bMe1VOy63ITcS26/28', 'Bullet');
// scripts/game/Bullet.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    _belongTag: -1,
    //区分子弹是哪个角色打出来的
    _belongName: "",
    //射出子弹角色名，用于展示击杀信息
    gunData: {
      "default": {}
    },
    _pbc: cc.PhysicsBoxCollider,
    _doFly: false,
    _flyDir: {
      "default": cc.v2(0, 0)
    },
    _flySpeed: 0,
    _maxRange: 500,
    _curRange: 0,
    _power: 0,
    _isCrit: false,
    _onceExec: true,
    bulletAtlas: cc.SpriteAtlas
  },
  onLoad: function onLoad() {
    this._pbc = this.node.getComponent(cc.PhysicsBoxCollider); // setTimeout(function () {
    //     this.node && this.node.destroy()
    // }.bind(this), 4000)
  },
  init: function init(_data, _power, _isCrit, _isDef) {
    this.gunData = _data;
    this._power = _power;
    this._isCrit = _isCrit;
    var cloneId = this.gunData.weaponid;

    if (cloneId > 1100) {
      cloneId -= 100;
    }

    this.getComponent(cc.Sprite).spriteFrame = this.bulletAtlas.getSpriteFrame(cloneId + 1000);
    this._flySpeed = this.gunData.speed;
    this._maxRange = this.gunData.range;
    this._pbc.size = new cc.size(60, 30);
    this._pbc.enabled = true;
    this._doFly = true;
  },
  update: function update(dt) {
    if (this._doFly) {
      this.node.x += this._flyDir.x * this._flySpeed * dt;
      this.node.y += this._flyDir.y * this._flySpeed * dt;
      this._curRange += this._flyDir.mag() * dt * 1000; // console.log(this._curRange)

      if (this._curRange > this._maxRange) {
        if (this.gunData.weaponid == 1005 || this.gunData.weaponid == 1105) {
          this._pbc.size = new cc.size(120, 120);

          this._pbc.apply();
        }

        this._doFly = false;
      }
    } else {
      this.doAnim();
    }
  },
  doAnim: function doAnim() {
    var _this = this;

    if (!this._onceExec) return;
    this._onceExec = false;
    this.node.runAction(cc.sequence(cc.delayTime(0.1), cc.callFunc(function () {
      _this._pbc.enabled = false;
    })));
    var bsp = this.getComponent(cc.Sprite);
    var spIndex = 1;
    this.node.runAction(cc.sequence(cc.callFunc(function () {
      var cloneId = _this.gunData.weaponid;

      if (cloneId > 1100) {
        cloneId -= 100;
      }

      var tempSp = _this.bulletAtlas.getSpriteFrame(cloneId + 1000 + '_' + spIndex);

      if (tempSp != null) {
        bsp.spriteFrame = tempSp;
        ++spIndex;
      } else {
        _this.node.destroy();
      }
    }), cc.delayTime(0.1)).repeatForever());
  },
  onBeginContact: function onBeginContact(contact, self, other) {
    if (other.tag == this._belongTag) return;

    if (other.tag == Tags.collider || other.tag == Tags.player || other.tag >= Tags.enemy) {
      // console.log("子弹撞到了实体")
      if (this.gunData.weaponid == 1005 || this.gunData.weaponid === 1105) {
        this._pbc.size = new cc.size(120, 120);

        this._pbc.apply();
      }

      this._doFly = false;
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/DailyPopup.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3aba0X4OkJLfae48HsS/dWc', 'DailyPopup');
// scripts/ui/DailyPopup.js

"use strict";

var Utils = require("Utils");

cc.Class({
  "extends": cc.Component,
  properties: {
    dailyGroup: cc.Node,
    dailyGotNum: {
      "default": 0,
      type: cc.number,
      visible: false
    },
    closeBtn: cc.Node,
    onceClick: true
  },
  onLoad: function onLoad() {
    this.dailyGotNum = cc.sys.localStorage.getItem("EatChicken_dailyGotNum");

    if (this.dailyGotNum == null || this.dailyGotNum == undefined || this.dailyGotNum == "") {
      this.dailyGotNum = 0;
      cc.sys.localStorage.setItem("EatChicken_dailyGotNum", 0);
    } else {
      this.dailyGotNum = parseInt(this.dailyGotNum);
    }

    this.initShow();
    var show = cc.sequence(cc.delayTime(3), cc.scaleTo(0.3, 1));
    this.closeBtn.runAction(show);

    if (GameApp.dataManager.globalData.curDailyGot) {
      this.dailyGroup.children[this.dailyGotNum - 1].getComponent(cc.Button).interactable = false;
      this.dailyGroup.children[this.dailyGotNum - 1].children[0].active = true;
    } else {
      this.dailyGroup.children[this.dailyGotNum].children[0].active = true;
    }
  },
  initShow: function initShow() {
    if (this.dailyGotNum > 0) {
      for (var i = 0; i < this.dailyGotNum; i++) {
        this.dailyGroup.children[i].children[1].runAction(cc.scaleTo(0.5, 1).easing(cc.easeBackOut()));
      }
    }
  },
  // sureBtnClick() {
  //     if (!this.onceClick) return
  //     this.onceClick = false
  //     GameApp.audioManager.playEffect('btn_press')
  //     var self = this
  //     if (window.tt) {
  //         Utils.addVideo("addVideo", function () { //看完了
  //             self.onceClick = true
  //             self.getBtn.interactable = false
  //             self.skipBtn.interactable = false
  //             self.getBtn.node.stopAllActions()
  //             GameApp.dataManager.globalData.curDailyGot = true
  //             cc.sys.localStorage.setItem("EatChicken_dailyGotState", true);
  //             self.dailyGroup.children[self.dailyGotNum].children[2].runAction(cc.sequence(cc.scaleTo(0.5, 0.5).easing(cc.easeBackOut()), cc.callFunc(function () {
  //                 var arr1 = [1, 2, 1, 2, 1, 2, 2] //物品表
  //                 var arr2 = [1, 1, 2, 2, 3, 3, 4] //数量表
  //                 if (arr1[self.dailyGotNum] == 1) {
  //                     GameApp.uiManager.showToast("获取 <color=#0fffff>体力x" + arr2[self.dailyGotNum] * 2 + " </color>")
  //                     GameApp.dataManager.addHealthNum(arr2[self.dailyGotNum] * 2)
  //                 } else if (arr1[self.dailyGotNum] == 2) {
  //                     GameApp.uiManager.showToast("获取 <color=#0fffff>提示卡x" + arr2[self.dailyGotNum] * 2 + " </color>")
  //                     GameApp.dataManager.addTipNum(arr2[self.dailyGotNum] * 2)
  //                 }
  //                 self.dailyGotNum++
  //                 if (self.dailyGotNum > 7) {
  //                     self.dailyGotNum = 0
  //                 }
  //                 cc.sys.localStorage.setItem("EatChicken_dailyGotNum", self.dailyGotNum)
  //             }.bind(self), self)))
  //         }, function (_info) { //没看完
  //             self.onceClick = true
  //             _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast("未看完视频")
  //         })
  //     } else {
  //         self.onceClick = true
  //         this.getBtn.interactable = false
  //         this.skipBtn.interactable = false
  //         this.getBtn.node.stopAllActions()
  //         GameApp.dataManager.globalData.curDailyGot = true
  //         cc.sys.localStorage.setItem("EatChicken_dailyGotState", true);
  //         this.dailyGroup.children[this.dailyGotNum].children[2].runAction(cc.sequence(cc.scaleTo(0.5, 0.5).easing(cc.easeBackOut()), cc.callFunc(function () {
  //             var arr1 = [1, 2, 1, 2, 1, 2, 2] //物品表
  //             var arr2 = [1, 1, 2, 2, 3, 3, 4] //数量表
  //             if (arr1[this.dailyGotNum] == 1) {
  //                 GameApp.uiManager.showToast("获取 <color=#0fffff>体力x" + arr2[this.dailyGotNum] * 2 + " </color>")
  //                 GameApp.dataManager.addHealthNum(arr2[this.dailyGotNum] * 2)
  //             } else if (arr1[this.dailyGotNum] == 2) {
  //                 GameApp.uiManager.showToast("获取 <color=#0fffff>提示卡x" + arr2[this.dailyGotNum] * 2 + " </color>")
  //                 GameApp.dataManager.addTipNum(arr2[this.dailyGotNum] * 2)
  //             }
  //             this.dailyGotNum++
  //             if (this.dailyGotNum == 7) {
  //                 this.dailyGotNum = 0
  //             }
  //             cc.sys.localStorage.setItem("EatChicken_dailyGotNum", this.dailyGotNum)
  //         }.bind(this), this)))
  //     }
  // },
  getBtnClick: function getBtnClick(eventTouch, customEventData) {
    var selectId = parseInt(customEventData);
    if (GameApp.dataManager.globalData.curDailyGot) return;
    if (this.dailyGotNum != selectId - 1) return;
    GameApp.audioManager.playEffect('click');
    var self = this;
    self.onceClick = true;
    this.dailyGroup.children[this.dailyGotNum].getComponent(cc.Button).interactable = false;
    GameApp.dataManager.globalData.curDailyGot = true;
    cc.sys.localStorage.setItem("EatChicken_dailyGotState", true);
    this.dailyGroup.children[this.dailyGotNum].children[1].runAction(cc.sequence(cc.scaleTo(0.5, 1).easing(cc.easeBackOut()), cc.callFunc(function () {
      var arr1 = [1, 2, 1, 2, 1, 2, 1]; //物品表

      var arr2 = [50, 5, 50, 5, 100, 5, 500]; //数量表

      if (arr1[this.dailyGotNum] == 1) {
        GameApp.uiManager.showToast("获得金币*" + arr2[this.dailyGotNum]);
        GameApp.dataManager.addCoin(arr2[this.dailyGotNum]);
      } else if (arr1[this.dailyGotNum] == 2) {
        GameApp.uiManager.showToast("获得<color=#faf80d>" + GameApp.dataManager.getSkinDataById(27).name + "</color> 碎片*" + arr2[this.dailyGotNum]);
        GameApp.dataManager.addPieceNum(27, arr2[this.dailyGotNum]);
      }

      this.dailyGotNum++;

      if (this.dailyGotNum == 7) {
        this.dailyGotNum = 0;
      }

      cc.sys.localStorage.setItem("EatChicken_dailyGotNum", this.dailyGotNum);
    }.bind(this), this)));
  },
  closeBtnClick: function closeBtnClick() {
    GameApp.audioManager.playEffect('click');
    this.node.destroy();
  } // var delay = cc.delayTime(0.01)
  //     var act = cc.callFunc(function () {
  //     this.winSprite.fillRange += 0.01
  //     if (this.winSprite.fillRange >= 1) {
  //         this.winSprite.node.stopAllActions()
  //         GameApp.uiManager.showPopup('ResultPopup', function (node) {
  //             var popup = node.getComponent('ResultPopup')
  //             popup.init(true)
  //         }.bind(this))
  //     }
  // }.bind(this), this)
  //     this.winSprite.node.runAction(cc.sequence(delay, act).repeatForever())

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/manager/AudioManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '317f3yV6L9IGI9wd41WD/xL', 'AudioManager');
// scripts/manager/AudioManager.js

"use strict";

cc.Class({
  name: "AudioManager",
  properties: {
    _musicOn: true,
    _musicAudioID: null,
    _musicName: '',
    _effectOn: true,
    _effectAudioID: null,
    _Audios: {
      "default": {}
    }
  },
  ctor: function ctor() {
    cc.game.on(cc.game.EVENT_HIDE, function () {
      console.log("cc.audioEngine.pauseAll");
      cc.audioEngine.pauseAll();
    });
    cc.game.on(cc.game.EVENT_SHOW, function () {
      console.log("cc.audioEngine.resumeAll");
      cc.audioEngine.resumeAll();
    }); // var tempMusic = cc.sys.localStorage.getItem('CrushAnt_Music');

    var tempSound = cc.sys.localStorage.getItem('EatChicken_Sound'); // if (tempMusic != null && tempMusic != '' && tempMusic != undefined) {
    //     tempMusic = (tempMusic == "true" ? true : false)
    //     this._musicOn = tempMusic
    //     this._effectOn = tempMusic
    // }

    if (tempSound != null && tempSound != '' && tempSound != undefined) {
      tempSound = tempSound == "true" ? true : false;
      this._effectOn = tempSound;
    }
  },
  getMusicName: function getMusicName(name) {
    return cc.AudioClip.raw('resources/audio/music/' + name + '.mp3');
  },
  getEffectName: function getEffectName(name) {
    return cc.AudioClip.raw('resources/audio/effect/' + name + '.mp3');
  },
  playMusic: function playMusic(name, restart) {
    var _this = this;

    if (name === '' || this._musicName === name && !restart) {
      return;
    }

    this._musicName = name;

    if (this._musicOn) {
      cc.audioEngine.stopMusic(this._musicAudioID);
      cc.loader.loadRes('audio/music/' + name + '.mp3', cc.AudioClip, function (err, clip) {
        _this._musicAudioID = cc.audioEngine.playMusic(clip, true, true);
      }); // this._musicAudioID = cc.audioEngine.play(this.getMusicName(name), true, 1);
    }
  },
  setMusic: function setMusic(on) {
    this._musicOn = on;
    cc.sys.localStorage.setItem('MUSIC_ON', '' + on);

    if (on) {
      this.playMusic(this._musicName, true);
    } else {
      cc.audioEngine.stop(this._musicAudioID);
    }
  },
  playEffect: function playEffect(name, _volume, _loop) {
    var _this2 = this;

    //_loop=1为清除上次的循环音效,_loop=2为循环此次音效
    if (this._effectOn) {
      _loop == 1 && cc.audioEngine.stop(this._effectAudioID);
      cc.loader.loadRes('audio/effect/' + name, cc.AudioClip, function (err, clip) {
        var a = cc.audioEngine.play(clip, _loop == 2, _volume || 1); // cc.audioEngine.setVolume(_volume)
        // console.log(cc.audioEngine)

        if (_loop == 2) {
          _this2._effectAudioID = a;
        }
      }); // this._effectAudioID = cc.audioEngine.play(this.getEffectName(name), _loop == 2, _volume);
    }
  },
  setEffect: function setEffect(on) {
    this._effectOn = on;
    cc.sys.localStorage.setItem('EatChicken_Sound', '' + on);

    if (!on) {
      cc.audioEngine.stop(this._effectAudioID);
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/BoxUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c5af8P64uBNMYGlZief5kOA', 'BoxUI');
// scripts/ui/BoxUI.js

"use strict";

var Utils = require("Utils");

cc.Class({
  "extends": cc.Component,
  properties: {
    coinUI: cc.Label,
    needCoinUI: cc.Label,
    box1CoinRewardUI: cc.Label,
    box2CoinRewardUI: cc.Label,
    onceClick: {
      "default": true,
      visible: false
    }
  },
  onLoad: function onLoad() {
    GameApp.eventManager.on(EventNames.EVENT_UPDATE_COIN_SHOW, this.updateUIShow.bind(this));
    this.updateUIShow();
  },
  onDestroy: function onDestroy() {
    GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_COIN_SHOW);
  },
  updateUIShow: function updateUIShow() {
    this.coinUI.string = GameApp.dataManager.userData.coinNum;
    this.needCoinUI.string = GameApp.dataManager.userData.box1NeedCoinNum;
    this.box1CoinRewardUI.string = GameApp.dataManager.userData.box1RewardCoinNum[0] + '~' + GameApp.dataManager.userData.box1RewardCoinNum[1];
    this.box2CoinRewardUI.string = GameApp.dataManager.userData.box2RewardCoinNum[0] + '~' + GameApp.dataManager.userData.box2RewardCoinNum[1];
  },
  oneBtnClick: function oneBtnClick() {
    var _this = this;

    if (!this.onceClick) return;
    this.onceClick = false;
    GameApp.audioManager.playEffect('click');

    if (GameApp.dataManager.reduceCoin(GameApp.dataManager.userData.box1NeedCoinNum)) {
      GameApp.uiManager.showPopup('OpenBoxPopup', function (node) {
        var getNum = Tools.randomNum(GameApp.dataManager.userData.box1RewardCoinNum[0], GameApp.dataManager.userData.box1RewardCoinNum[1]);
        GameApp.dataManager.addCoin(getNum);
        node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[0], 1, getNum);

        if (GameApp.dataManager.userData.box1NeedCoinNum < 6400) {
          GameApp.dataManager.userData.box1NeedCoinNum *= 2;
          GameApp.dataManager.userData.box1RewardCoinNum[0] = GameApp.dataManager.userData.box1NeedCoinNum / 2;
          GameApp.dataManager.userData.box1RewardCoinNum[1] = GameApp.dataManager.userData.box1NeedCoinNum * 1.5;
        }

        _this.updateUIShow();

        _this.onceClick = true;
      });
    } else {
      this.onceClick = true;
      GameApp.uiManager.showToast("金币不足!");
    }
  },
  twoBtnClick: function twoBtnClick() {
    if (window.wx) {
      GameApp.uiManager.showToast("暂未开放！");
      return;
    }

    if (!this.onceClick) return;
    this.onceClick = false;
    GameApp.audioManager.playEffect('click');
    var self = this;

    if (window.tt) {
      Utils.addVideo("addVideo", function () {
        //看完了
        self.onceClick = true;
        GameApp.dataManager.addPlayedVideoNum();
        GameApp.uiManager.showPopup('OpenBoxPopup', function (node) {
          var getNum = Tools.randomNum(GameApp.dataManager.userData.box2RewardCoinNum[0], GameApp.dataManager.userData.box2RewardCoinNum[1]);
          GameApp.dataManager.addCoin(getNum);
          node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[1], 1, getNum);

          if (GameApp.dataManager.userData.box2RewardCoinNum[0] < 1400) {
            GameApp.dataManager.userData.box2RewardCoinNum[0] = Math.floor(GameApp.dataManager.userData.box2RewardCoinNum[0] * 1.5);
            GameApp.dataManager.userData.box2RewardCoinNum[1] = Math.floor(GameApp.dataManager.userData.box2RewardCoinNum[1] * 1.5);
          }

          self.updateUIShow();
          self.onceClick = true;
        });
      }, function (_info) {
        //没看完
        self.onceClick = true;
        _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast("未看完视频！");
      });
    } else {
      self.onceClick = true;
      GameApp.dataManager.addPlayedVideoNum();
      GameApp.uiManager.showPopup('OpenBoxPopup', function (node) {
        var getNum = Tools.randomNum(GameApp.dataManager.userData.box2RewardCoinNum[0], GameApp.dataManager.userData.box2RewardCoinNum[1]);
        GameApp.dataManager.addCoin(getNum);
        node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[1], 1, getNum);

        if (GameApp.dataManager.userData.box2RewardCoinNum[0] < 1400) {
          GameApp.dataManager.userData.box2RewardCoinNum[0] = Math.floor(GameApp.dataManager.userData.box2RewardCoinNum[0] * 1.5);
          GameApp.dataManager.userData.box2RewardCoinNum[1] = Math.floor(GameApp.dataManager.userData.box2RewardCoinNum[1] * 1.5);
        }

        self.updateUIShow();
        self.onceClick = true;
      });
    }
  },
  threeBtnClick: function threeBtnClick() {
    if (window.wx) {
      GameApp.uiManager.showToast("暂未开放！");
      return;
    }

    if (!this.onceClick) return;
    this.onceClick = false;
    GameApp.audioManager.playEffect('click');
    var self = this;

    if (window.tt) {
      Utils.addVideo("addVideo", function () {
        //看完了
        self.onceClick = true;
        GameApp.dataManager.addPlayedVideoNum();
        var getIndex = Tools.randomNum(26, 30);
        var getNum = 5;
        GameApp.dataManager.addPieceNum(getIndex, getNum);
        GameApp.uiManager.showPopup('OpenBoxPopup', function (node) {
          node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[2], 2, getNum, getIndex);
          self.onceClick = true;
        });
      }, function (_info) {
        //没看完
        self.onceClick = true;
        _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast("未看完视频！");
      });
    } else {
      self.onceClick = true;
      GameApp.dataManager.addPlayedVideoNum();
      var getIndex = Tools.randomNum(26, 30);
      var getNum = 5;
      GameApp.dataManager.addPieceNum(getIndex, getNum);
      GameApp.uiManager.showPopup('OpenBoxPopup', function (node) {
        node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[2], 2, getNum, getIndex);
        self.onceClick = true;
      });
    }
  },
  coinBtnClick: function coinBtnClick() {
    if (!this.onceClick) return;
    this.onceClick = false;
    GameApp.audioManager.playEffect('click');
    var self = this;

    if (window.tt) {
      Utils.addVideo("addVideo", function () {
        //看完了
        self.onceClick = true;
        GameApp.uiManager.showToast("获得500金币");
        GameApp.dataManager.addCoin(500);
        self.updateUIShow();
      }, function (_info) {
        //没看完
        self.onceClick = true;
        _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast("未看完视频！");
      });
    } else {
      self.onceClick = true;
      GameApp.uiManager.showToast("非真机,获得500金币");
      GameApp.dataManager.addCoin(500);
      self.updateUIShow();
    }
  },
  backBtnClick: function backBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.showUI('LoginUI');
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/manager/EventManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '00aeeK/GotGDrrLxg+sYtgT', 'EventManager');
// scripts/manager/EventManager.js

"use strict";

var EventEmitter = require('events').EventEmitter;

cc.Class({
  name: 'EventManager',
  properties: {
    _eventEmitter: EventEmitter
  },
  ctor: function ctor() {
    this._eventEmitter = new EventEmitter();

    this._eventEmitter.setMaxListeners(0);
  },
  on: function on(eventName, func) {
    this._eventEmitter.on(eventName, func); // console.log("加")
    // console.log(this._eventEmitter)

  },
  once: function once(eventName, func) {
    this._eventEmitter.once(eventName, func);
  },
  emit: function emit(eventName, self, param) {
    if (self && param) {
      this._eventEmitter.emit(eventName, self, param);

      return;
    }

    if (self) {
      this._eventEmitter.emit(eventName, self);

      return;
    }

    this._eventEmitter.emit(eventName);
  },
  removeListener: function removeListener(eventName, func) {
    if (func) {
      return this._eventEmitter.removeListener(eventName, func);
    } // console.log("减")
    // console.log(this._eventEmitter)


    this._eventEmitter.removeAllListeners(eventName);
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcbWFuYWdlclxcRXZlbnRNYW5hZ2VyLmpzIl0sIm5hbWVzIjpbIkV2ZW50RW1pdHRlciIsInJlcXVpcmUiLCJjYyIsIkNsYXNzIiwibmFtZSIsInByb3BlcnRpZXMiLCJfZXZlbnRFbWl0dGVyIiwiY3RvciIsInNldE1heExpc3RlbmVycyIsIm9uIiwiZXZlbnROYW1lIiwiZnVuYyIsIm9uY2UiLCJlbWl0Iiwic2VsZiIsInBhcmFtIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsWUFBWSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCRCxZQUFyQzs7QUFFQUUsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTEMsRUFBQUEsSUFBSSxFQUFFLGNBREQ7QUFHTEMsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLGFBQWEsRUFBRU47QUFEUCxHQUhQO0FBT0xPLEVBQUFBLElBQUksRUFBRSxnQkFBWTtBQUNkLFNBQUtELGFBQUwsR0FBcUIsSUFBSU4sWUFBSixFQUFyQjs7QUFDQSxTQUFLTSxhQUFMLENBQW1CRSxlQUFuQixDQUFtQyxDQUFuQztBQUNILEdBVkk7QUFZTEMsRUFBQUEsRUFBRSxFQUFFLFlBQVVDLFNBQVYsRUFBcUJDLElBQXJCLEVBQTJCO0FBQzNCLFNBQUtMLGFBQUwsQ0FBbUJHLEVBQW5CLENBQXNCQyxTQUF0QixFQUFpQ0MsSUFBakMsRUFEMkIsQ0FFM0I7QUFDQTs7QUFDSCxHQWhCSTtBQWtCTEMsRUFBQUEsSUFBSSxFQUFFLGNBQVVGLFNBQVYsRUFBcUJDLElBQXJCLEVBQTJCO0FBQzdCLFNBQUtMLGFBQUwsQ0FBbUJNLElBQW5CLENBQXdCRixTQUF4QixFQUFtQ0MsSUFBbkM7QUFDSCxHQXBCSTtBQXNCTEUsRUFBQUEsSUFBSSxFQUFFLGNBQVVILFNBQVYsRUFBcUJJLElBQXJCLEVBQTJCQyxLQUEzQixFQUFrQztBQUNwQyxRQUFJRCxJQUFJLElBQUlDLEtBQVosRUFBbUI7QUFDZixXQUFLVCxhQUFMLENBQW1CTyxJQUFuQixDQUF3QkgsU0FBeEIsRUFBbUNJLElBQW5DLEVBQXlDQyxLQUF6Qzs7QUFDQTtBQUNIOztBQUNELFFBQUlELElBQUosRUFBVTtBQUNOLFdBQUtSLGFBQUwsQ0FBbUJPLElBQW5CLENBQXdCSCxTQUF4QixFQUFtQ0ksSUFBbkM7O0FBQ0E7QUFDSDs7QUFFRCxTQUFLUixhQUFMLENBQW1CTyxJQUFuQixDQUF3QkgsU0FBeEI7QUFDSCxHQWpDSTtBQW1DTE0sRUFBQUEsY0FBYyxFQUFFLHdCQUFVTixTQUFWLEVBQXFCQyxJQUFyQixFQUEyQjtBQUN2QyxRQUFJQSxJQUFKLEVBQVU7QUFDTixhQUFPLEtBQUtMLGFBQUwsQ0FBbUJVLGNBQW5CLENBQWtDTixTQUFsQyxFQUE2Q0MsSUFBN0MsQ0FBUDtBQUNILEtBSHNDLENBSXZDO0FBQ0E7OztBQUNBLFNBQUtMLGFBQUwsQ0FBbUJXLGtCQUFuQixDQUFzQ1AsU0FBdEM7QUFDSDtBQTFDSSxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xyXG5cclxuY2MuQ2xhc3Moe1xyXG4gICAgbmFtZTogJ0V2ZW50TWFuYWdlcicsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIF9ldmVudEVtaXR0ZXI6IEV2ZW50RW1pdHRlcixcclxuICAgIH0sXHJcblxyXG4gICAgY3RvcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuX2V2ZW50RW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIuc2V0TWF4TGlzdGVuZXJzKDApO1xyXG4gICAgfSxcclxuXHJcbiAgICBvbjogZnVuY3Rpb24gKGV2ZW50TmFtZSwgZnVuYykge1xyXG4gICAgICAgIHRoaXMuX2V2ZW50RW1pdHRlci5vbihldmVudE5hbWUsIGZ1bmMpO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwi5YqgXCIpXHJcbiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5fZXZlbnRFbWl0dGVyKVxyXG4gICAgfSxcclxuXHJcbiAgICBvbmNlOiBmdW5jdGlvbiAoZXZlbnROYW1lLCBmdW5jKSB7XHJcbiAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyLm9uY2UoZXZlbnROYW1lLCBmdW5jKTtcclxuICAgIH0sXHJcblxyXG4gICAgZW1pdDogZnVuY3Rpb24gKGV2ZW50TmFtZSwgc2VsZiwgcGFyYW0pIHtcclxuICAgICAgICBpZiAoc2VsZiAmJiBwYXJhbSkge1xyXG4gICAgICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIuZW1pdChldmVudE5hbWUsIHNlbGYsIHBhcmFtKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoc2VsZikge1xyXG4gICAgICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIuZW1pdChldmVudE5hbWUsIHNlbGYpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIuZW1pdChldmVudE5hbWUpO1xyXG4gICAgfSxcclxuXHJcbiAgICByZW1vdmVMaXN0ZW5lcjogZnVuY3Rpb24gKGV2ZW50TmFtZSwgZnVuYykge1xyXG4gICAgICAgIGlmIChmdW5jKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9ldmVudEVtaXR0ZXIucmVtb3ZlTGlzdGVuZXIoZXZlbnROYW1lLCBmdW5jKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCLlh49cIilcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLl9ldmVudEVtaXR0ZXIpXHJcbiAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyLnJlbW92ZUFsbExpc3RlbmVycyhldmVudE5hbWUpO1xyXG4gICAgfSxcclxufSk7Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/GunUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5b571QytXtMKbQD0qJWJTvK', 'GunUI');
// scripts/ui/GunUI.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {},
  backBtnClick: function backBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.showUI('LoginUI');
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlcXEd1blVJLmpzIl0sIm5hbWVzIjpbImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwiYmFja0J0bkNsaWNrIiwiR2FtZUFwcCIsImF1ZGlvTWFuYWdlciIsInBsYXlFZmZlY3QiLCJ1aU1hbmFnZXIiLCJzaG93VUkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0FBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRSxFQUhQO0FBT0xDLEVBQUFBLFlBUEssMEJBT1U7QUFDWEMsSUFBQUEsT0FBTyxDQUFDQyxZQUFSLENBQXFCQyxVQUFyQixDQUFnQyxPQUFoQztBQUNBRixJQUFBQSxPQUFPLENBQUNHLFNBQVIsQ0FBa0JDLE1BQWxCLENBQXlCLFNBQXpCO0FBQ0g7QUFWSSxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuY2MuQ2xhc3Moe1xyXG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxyXG5cclxuICAgIHByb3BlcnRpZXM6IHtcclxuXHJcbiAgICB9LFxyXG5cclxuICAgIGJhY2tCdG5DbGljaygpIHtcclxuICAgICAgICBHYW1lQXBwLmF1ZGlvTWFuYWdlci5wbGF5RWZmZWN0KCdjbGljaycpXHJcbiAgICAgICAgR2FtZUFwcC51aU1hbmFnZXIuc2hvd1VJKCdMb2dpblVJJylcclxuICAgIH0sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/GiftPopup.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '97122PwMglKv7Cq3WJKcLoh', 'GiftPopup');
// scripts/ui/GiftPopup.js

"use strict";

var Utils = require("Utils");

cc.Class({
  "extends": cc.Component,
  properties: {
    closeBtnNode: cc.Node,
    sureBtnNode: cc.Node,
    nextUIName: "",
    _popupType: 1,
    titleUI: cc.Label,
    coinSp: cc.Node,
    coinInfo: cc.Node,
    speedSp: cc.Node,
    speedInfo: cc.Node,
    onceClick: {
      "default": true,
      visible: false
    }
  },
  onLoad: function onLoad() {
    var _this = this;

    this.node.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function () {
      _this.closeBtnNode.active = true;
    })));
    Tools.scaleUpAndDowm(this.sureBtnNode);
  },
  init: function init(_name, _type) {
    this.nextUIName = _name;
    this._popupType = _type;

    if (_type == 1) {
      this.titleUI.string = "金币大礼包";
      this.coinSp.active = true;
      this.coinInfo.active = true;
    } else if (_type == 2) {
      this.titleUI.string = "加速大礼包";
      this.speedSp.active = true;
      this.speedInfo.active = true;
    }
  },
  sureBtnClick: function sureBtnClick() {
    if (!this.onceClick) return;
    this.onceClick = false;
    GameApp.audioManager.playEffect('click');
    var self = this;

    if (window.tt) {
      Utils.addVideo("addVideo", function () {
        //看完了
        self.onceClick = true;

        if (self._popupType == 1) {
          GameApp.uiManager.showToast("获得500金币");
          GameApp.dataManager.addCoin(500);
          self.closeBtnClick();
        } else if (self._popupType == 2) {
          GameApp.uiManager.showToast("获得加速");
          self.closeBtnClick2(true);
        }
      }, function (_info) {
        //没看完
        self.onceClick = true;
        _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast("未看完视频！");
      });
    } else {
      if (self._popupType == 1) {
        if (window.wx) {
          GameApp.uiManager.showToast("暂未开放！");
          self.closeBtnClick();
          return;
        }

        GameApp.uiManager.showToast("福利,获得500金币");
        GameApp.dataManager.addCoin(500);
        self.closeBtnClick();
      } else if (self._popupType == 2) {
        if (window.wx) {
          GameApp.uiManager.showToast("暂未开放！");
          self.closeBtnClick2(true);
          return;
        }

        GameApp.uiManager.showToast("福利,获得加速");
        self.closeBtnClick2(true);
      }
    }
  },
  closeBtnClick: function closeBtnClick() {
    if (this._popupType == 1) {
      GameApp.audioManager.playEffect('click');
      GameApp.uiManager.closePopup("GiftPopup");
      GameApp.uiManager.showUI(this.nextUIName);
    } else if (this._popupType == 2) {
      this.closeBtnClick2(false);
    }
  },
  closeBtnClick2: function closeBtnClick2(_speedUp) {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.closePopup("GiftPopup");
    GameApp.uiManager.getUI("PrepareUI").getComponent("PrepareUI").showPlaneUI(_speedUp);
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/PrepareMap.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f0242hMp5pE/YgD+xqZxRob', 'PrepareMap');
// scripts/ui/PrepareMap.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    tiledMap: cc.TiledMap,
    objectPrefab: cc.Prefab,
    colliderPrefab: cc.Prefab,
    groundItemPrefab: cc.Prefab,
    waitLabel: cc.Node,
    allObjectNode: cc.Node,
    allColliderNode: cc.Node,
    allGunNode: cc.Node,
    enemySpawnPosGroupNode: cc.Node,
    mapAtlas: cc.SpriteAtlas,
    _timer0: 0.1,
    _timer: 0.1,
    readyToSort: false
  },
  onLoad: function onLoad() {
    this.initMapShow();
    this.showPlayer();
    this.showEnemy();
  },
  update: function update(dt) {
    if (!this.readyToSort) return;
    this._timer -= dt;

    if (this._timer < 0) {
      this._timer = this._timer0;
      this.sortAll();
    }
  },
  initMapShow: function initMapShow() {
    var _this = this;

    GameApp.dataManager.globalData.allRoleArr = [];
    GameApp.dataManager.globalData.allGunArr = []; // this.node.children[2].active = true

    var wallLayer = this.tiledMap.getLayer("wall");

    this.tiledMap.getObjectGroup("dynamic")._objects.forEach(function (element) {
      var obj = cc.instantiate(_this.objectPrefab);
      obj.getComponent(cc.Sprite).spriteFrame = _this.mapAtlas.getSpriteFrame(element.name.split('.')[0]);
      obj.parent = _this.allColliderNode;
      var desPos = wallLayer.getPositionAt(_this.getTilePos(cc.v2(element.x, element.y)));
      obj.setPosition(desPos);

      var ddd = _this.allObjectNode.convertToNodeSpaceAR(obj.convertToWorldSpaceAR(cc.v2(0, 0)));

      obj.parent = _this.allObjectNode;
      obj.setPosition(ddd);
    });

    this.tiledMap.getObjectGroup("collision")._objects.forEach(function (element) {
      var obj = cc.instantiate(_this.colliderPrefab);
      var coli = obj.getComponent(cc.PhysicsBoxCollider);
      coli.size = cc.size(element.width, element.height);
      coli.offset = cc.v2(element.width / 2, -element.height / 2);
      coli.apply();

      _this.allColliderNode.addChild(obj);

      obj.setPosition(cc.v2(element.x, element.y));
      coli.tag = Tags.collider;
    });

    this.tiledMap.getObjectGroup("gun")._objects.forEach(function (element) {
      // var element = this.tiledMap.getObjectGroup("gun")._objects[0]
      var obj = cc.instantiate(_this.groundItemPrefab);
      obj.parent = _this.allColliderNode;
      var desPos = wallLayer.getPositionAt(_this.getTilePos(cc.v2(element.x, element.y)));
      obj.setPosition(desPos);

      var ddd = _this.allGunNode.convertToNodeSpaceAR(obj.convertToWorldSpaceAR(cc.v2(0, 0)));

      obj.parent = _this.allGunNode;
      obj.setPosition(ddd);
      var _param = {
        _type: ItemType.weapon,
        _kind: Tools.randomNum(0, 5)
      };
      obj.getComponent('GroundItem').init(_param);
      GameApp.dataManager.globalData.allGunArr.push(obj);
    });
  },
  //将像素坐标转化为瓦片坐标，posInPixel：目标节点的position
  getTilePos: function getTilePos(posInPixel) {
    var mapSize = this.tiledMap.node.getContentSize();
    var tileSize = this.tiledMap.getTileSize();
    var x = Math.floor(posInPixel.x / tileSize.width);
    var y = Math.floor((mapSize.height - posInPixel.y) / tileSize.height);
    return cc.v2(x, y);
  },
  showPlayer: function showPlayer() {
    var _this2 = this;

    GameApp.uiManager.showGameObject('Player', function (node) {
      // GameApp.dataManager.globalData.allRoleArr.push(node)
      // node.setPosition(0, 0)
      var c = node.getComponent("Player");
      GameApp.uiManager.getUI("PrepareUI").getComponent("PrepareUI").joystick.getComponent("Joystick").player = c;
      c.init();
      GameApp.dataManager.globalData.allRoleArr.push(c);
      _this2.readyToSort = true;
    }, this.allObjectNode);
  },
  showEnemy: function showEnemy() {
    var tempPosArr = [];
    var standardArr = this.enemySpawnPosGroupNode.children; // var xRangeArr = []
    // var eachSpaceX = (standardArr[1].x - standardArr[0].x) / 6
    // for (let i = 0; i < 7; i++) {
    //     xRangeArr.push(standardArr[0].x + eachSpaceX * i)
    // }
    // var yRangeArr = []
    // var eachSpaceY = (standardArr[2].y - standardArr[0].y) / 5
    // for (let i = 0; i < 6; i++) {
    //     yRangeArr.push(standardArr[0].y + eachSpaceY * i)
    // }
    // for (let i = 0; i < xRangeArr.length; i++) {
    //     for (let j = 0; j < yRangeArr.length; j++) {
    //         tempPosArr.push(cc.v2(xRangeArr[i], yRangeArr[j]))
    //     }
    // }
    // tempPosArr = Tools.getRandomAmountElementUnRepeat(tempPosArr, 30)

    var tagNum = Tags.enemy;

    for (var i = 0; i < 5; i++) {
      if (i + 1 == GameApp.dataManager.userData.choosedSkinId) {
        continue;
      }

      GameApp.uiManager.showGameObject('Enemy', function (node) {
        // GameApp.dataManager.globalData.allRoleArr.push(node)
        node.getComponent(cc.PhysicsBoxCollider).tag = tagNum++;
        node.setPosition(cc.v2(Tools.randomNum(standardArr[0].x, standardArr[1].x), Tools.randomNum(standardArr[2].y, standardArr[0].y)));
        var c = node.getComponent("Enemy");
        c.init(i + 1, GameApp.dataManager.jsonData.RobotName[i]);
        GameApp.dataManager.globalData.allRoleArr.push(c);
      }, this.allObjectNode);
    } // var index = 0


    var func = function () {
      if (i == 30) return;

      if (i + 1 == GameApp.dataManager.userData.choosedSkinId) {} else {
        GameApp.uiManager.showGameObject('Enemy', function (node) {
          // GameApp.dataManager.globalData.allRoleArr.push(node)
          node.getComponent(cc.PhysicsBoxCollider).tag = tagNum++;
          node.setPosition(cc.v2(Tools.randomNum(standardArr[0].x, standardArr[1].x), Tools.randomNum(standardArr[2].y, standardArr[0].y)));
          var c = node.getComponent("Enemy");
          c.init(i + 1, GameApp.dataManager.jsonData.RobotName[i]);
          GameApp.dataManager.globalData.allRoleArr.push(c);
          GameApp.eventManager.emit(EventNames.EVENT_SHOW_ALLROLENUM_UI);
        }, this.allObjectNode);
      }

      i++;
    }.bind(this);

    this.schedule(func, 0.5, 25, 0); // 0.5
  },
  sortAll: function sortAll() {
    var cloneObjArr = this.allObjectNode.children.concat();
    var tempDict = [];
    var tempIndex = [];

    for (var i in cloneObjArr) {
      if (GameApp.uiManager.isInMapSight(cloneObjArr[i])) {
        tempDict.push({
          y: cloneObjArr[i].y,
          index: i
        });
        tempIndex.push(i);
      }
    } // console.log(tempDict)


    tempDict.sort(function (a, b) {
      return b.y - a.y;
    });

    for (var _i in tempDict) {
      cloneObjArr[tempDict[_i].index].setSiblingIndex(tempIndex[_i]);
    } // console.log(tempDict)
    // console.log(this.allObjectNode.children)

  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/SkinInfoPopup.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '906abQ6KhRK94jc8lii7QN9', 'SkinInfoPopup');
// scripts/ui/SkinInfoPopup.js

"use strict";

var Utils = require("Utils");

cc.Class({
  "extends": cc.Component,
  properties: {
    actorAnim: sp.Skeleton,
    nameUI: cc.Label,
    descUI: cc.Label,
    skinData: {
      "default": {}
    },
    methodUIGroup: [cc.Node],
    methodBtnGroup: [cc.Node],
    onceClick: {
      "default": true,
      visible: false
    }
  },
  onLoad: function onLoad() {
    GameApp.eventManager.on(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, this.updateUnLockShow);
  },
  onDestroy: function onDestroy() {
    GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, this.updateUnLockShow);
  },
  // update (dt) {},
  init: function init(_skinData) {
    this.skinData = _skinData;
    this.initNameShow();
    this.initSkinShow();
    this.updateMethodShow();
  },
  initNameShow: function initNameShow() {
    this.nameUI.string = this.skinData.name;
    var colorIndex = Math.floor((this.skinData.skinid - 1) / 5);
    this.nameUI.node.color = new cc.Color().fromHEX(NameColor[colorIndex]);
    this.descUI.string = this.skinData.des;
  },
  initSkinShow: function initSkinShow() {
    var _this = this;

    if (this.skinData.skinid < 21) {
      this.actorAnim.skeletonData = GameApp.uiManager.normalSkinData;
      this.actorAnim.setSkin(this.skinData.skinname);
    } else {
      this.actorAnim.skeletonData = GameApp.uiManager.advanceSkinDataGroup[this.skinData.skinid - 21];
    }

    if (this.skinData.skinid < 21) {
      this.actorAnim.setAnimation(0, 'await', true);
    } else {
      this.actorAnim.setAnimation(0, 'await_main_1', false);
      this.actorAnim.setCompleteListener(function () {
        _this.actorAnim.setAnimation(0, 'await_main_' + Tools.randomNum(1, 3), false);
      });
    }
  },
  updateMethodShow: function updateMethodShow() {
    if (this.skinData.skinid > 25) {
      this.methodUIGroup[2].children[0].getComponent(cc.Label).string = GameApp.dataManager.userData.havePieceNum[this.skinData.skinid] + '/' + this.skinData.needpiece;
      this.setpieceIcon(this.skinData.skinid);
    }

    this.updateUnLockShow(this);
  },
  updateUnLockShow: function updateUnLockShow(self) {
    self.methodUIGroup[0].active = self.methodBtnGroup[0].active = self.skinData.needcoin;
    self.methodUIGroup[1].active = self.methodBtnGroup[1].active = self.skinData.needgem;
    self.methodUIGroup[2].active = self.methodBtnGroup[2].active = self.skinData.needpiece;
    self.methodBtnGroup[3].active = false;
    self.methodUIGroup[0].children[0].getComponent(cc.Label).string = self.skinData.needcoin;
    self.methodUIGroup[1].children[0].getComponent(cc.Label).string = GameApp.dataManager.userData.playedVideoNum + '/' + self.skinData.needgem;
    var unlockarr = GameApp.dataManager.userData.unLockedSkinIdArr.concat();
    unlockarr.sort(function (a, b) {
      return a - b;
    });
    unlockarr.forEach(function (element) {
      if (element == self.skinData.skinid) {
        self.methodBtnGroup[0].active = false;
        self.methodBtnGroup[1].active = false;
        self.methodBtnGroup[2].active = false;
        self.methodBtnGroup[3].active = true;
        return;
      }
    });
    self.updateChoosedShow2(self);
  },
  updateChoosedShow2: function updateChoosedShow2(self) {
    if (GameApp.dataManager.getChoosedSkinId() == self.skinData.skinid) {
      self.methodBtnGroup[3].children[0].active = false;
      self.methodBtnGroup[3].children[1].active = true;
    } else {
      self.methodBtnGroup[3].children[0].active = true;
      self.methodBtnGroup[3].children[1].active = false;
    }
  },
  setpieceIcon: function setpieceIcon(id) {
    var self = this;
    cc.loader.loadRes("texture/skin_piece/card_p_" + id, cc.SpriteFrame, function (err, spriteFrame) {
      self.methodUIGroup[2].getComponent(cc.Sprite).spriteFrame = spriteFrame;
    });
  },
  selelctBtnClick: function selelctBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.dataManager.setChoosedSkinId(this.skinData.skinid);
    GameApp.eventManager.emit(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, this);
  },
  coinBtnClick: function coinBtnClick() {
    GameApp.audioManager.playEffect('click');

    if (GameApp.dataManager.reduceCoin(this.skinData.needcoin)) {
      GameApp.uiManager.showToast("解锁成功");
      GameApp.dataManager.unLockSkin(this.skinData.skinid);
      GameApp.eventManager.emit(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, this);
    } else {
      GameApp.uiManager.showToast("金币不足！");
    }
  },
  videoBtnClick: function videoBtnClick() {
    if (window.wx) {
      GameApp.uiManager.showToast("暂未开放！");
      return;
    }

    if (!this.onceClick) return;
    this.onceClick = false;
    GameApp.audioManager.playEffect('click');
    var self = this;

    if (window.tt) {
      Utils.addVideo("addVideo", function () {
        //看完了
        self.onceClick = true;
        GameApp.dataManager.addPlayedVideoNum();
        GameApp.eventManager.emit(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, self);
      }, function (_info) {
        //没看完
        self.onceClick = true;
        _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast("未看完视频！");
      });
    } else {
      self.onceClick = true;
      GameApp.dataManager.addPlayedVideoNum();
      GameApp.eventManager.emit(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, self);
    }
  },
  pieceBtnClick: function pieceBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.showToast("碎片不足,请从" + "<color=#faf80d>黄金宝箱</color>" + "获取！");
  },
  onCloseBtnClick: function onCloseBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.closePopup("SkinInfoPopup");
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/PlaneUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '31f24zVlipJbrVcAJ0zIaIp', 'PlaneUI');
// scripts/ui/PlaneUI.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    planeNode: cc.Node,
    mapNode: cc.Node,
    _chooseType: 0,
    //0是左对角,1是右对角
    _speedUp: false
  },
  onLoad: function onLoad() {},
  init: function init(_speedUp) {
    this._speedUp = _speedUp;
    var angleArr = [-135, 135, 45, -45];
    var posIndex = Tools.randomNum(0, 3);
    this._chooseType = posIndex % 2;
    this.planeNode.setPosition(this.node.children[0].convertToNodeSpaceAR(this.mapNode.children[posIndex].convertToWorldSpaceAR(cc.v2(0, 0))));
    this.planeNode.angle = angleArr[posIndex];

    switch (posIndex) {
      case 0:
        this.planeNode.runAction(cc.moveTo(5, this.mapNode.children[2].position));
        break;

      case 1:
        this.planeNode.runAction(cc.moveTo(5, this.mapNode.children[3].position));
        break;

      case 2:
        this.planeNode.runAction(cc.moveTo(5, this.mapNode.children[0].position));
        break;

      case 3:
        this.planeNode.runAction(cc.moveTo(5, this.mapNode.children[1].position));
        break;
    }

    GameApp.audioManager.playEffect('plane', 1, 2);
  },
  // update (dt) {},
  jumpBtnClick: function jumpBtnClick() {
    var _this = this;

    GameApp.audioManager.playEffect('click');
    this.planeNode.stopAllActions();
    GameApp.uiManager.showUI('GameUI', function (node) {
      var allL = 0;
      var curL = 0; // var tempChooseType = this._chooseType % 2

      if (_this._chooseType == 0) {
        allL = cc.v2(_this.mapNode.children[0].position).sub(_this.mapNode.children[2].position).mag();
        curL = cc.v2(_this.planeNode.position).sub(_this.mapNode.children[0].position).mag();
      } else {
        allL = cc.v2(_this.mapNode.children[1].position).sub(_this.mapNode.children[3].position).mag();
        curL = cc.v2(_this.planeNode.position).sub(_this.mapNode.children[3].position).mag();
      }

      var bili = curL / allL;
      node.getComponent("GameUI").init(_this._chooseType, bili, _this._speedUp);
    });
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlcXFBsYW5lVUkuanMiXSwibmFtZXMiOlsiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJwbGFuZU5vZGUiLCJOb2RlIiwibWFwTm9kZSIsIl9jaG9vc2VUeXBlIiwiX3NwZWVkVXAiLCJvbkxvYWQiLCJpbml0IiwiYW5nbGVBcnIiLCJwb3NJbmRleCIsIlRvb2xzIiwicmFuZG9tTnVtIiwic2V0UG9zaXRpb24iLCJub2RlIiwiY2hpbGRyZW4iLCJjb252ZXJ0VG9Ob2RlU3BhY2VBUiIsImNvbnZlcnRUb1dvcmxkU3BhY2VBUiIsInYyIiwiYW5nbGUiLCJydW5BY3Rpb24iLCJtb3ZlVG8iLCJwb3NpdGlvbiIsIkdhbWVBcHAiLCJhdWRpb01hbmFnZXIiLCJwbGF5RWZmZWN0IiwianVtcEJ0bkNsaWNrIiwic3RvcEFsbEFjdGlvbnMiLCJ1aU1hbmFnZXIiLCJzaG93VUkiLCJhbGxMIiwiY3VyTCIsInN1YiIsIm1hZyIsImJpbGkiLCJnZXRDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0FBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxTQUFTLEVBQUVKLEVBQUUsQ0FBQ0ssSUFETjtBQUVSQyxJQUFBQSxPQUFPLEVBQUVOLEVBQUUsQ0FBQ0ssSUFGSjtBQUdSRSxJQUFBQSxXQUFXLEVBQUUsQ0FITDtBQUdRO0FBQ2hCQyxJQUFBQSxRQUFRLEVBQUU7QUFKRixHQUhQO0FBVUxDLEVBQUFBLE1BVkssb0JBVUksQ0FFUixDQVpJO0FBYUxDLEVBQUFBLElBYkssZ0JBYUFGLFFBYkEsRUFhVTtBQUNYLFNBQUtBLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsUUFBSUcsUUFBUSxHQUFHLENBQUMsQ0FBQyxHQUFGLEVBQU8sR0FBUCxFQUFZLEVBQVosRUFBZ0IsQ0FBQyxFQUFqQixD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QUFhVyxRQUFiLENBQXNCLENBQXRCLEVBQXlCTyxRQUEvQixFQUF5Q1UsR0FBekMsQ0FBNkMsS0FBSSxDQUFDNUIsT0FBTCxDQUFhVyxRQUFiLENBQXNCLENBQXRCLEVBQXlCTyxRQUF0RSxFQUFnRlcsR0FBaEYsRUFBUDtBQUNBRixRQUFBQSxJQUFJLEdBQUdqQyxFQUFFLENBQUNvQixFQUFILENBQU0sS0FBSSxDQUFDaEIsU0FBTCxDQUFlb0IsUUFBckIsRUFBK0JVLEdBQS9CLENBQW1DLEtBQUksQ0FBQzVCLE9BQUwsQ0FBYVcsUUFBYixDQUFzQixDQUF0QixFQUF5Qk8sUUFBNUQsRUFBc0VXLEdBQXRFLEVBQVA7QUFDSDs7QUFDRCxVQUFJQyxJQUFJLEdBQUdILElBQUksR0FBR0QsSUFBbEI7QUFDQWhCLE1BQUFBLElBQUksQ0FBQ3FCLFlBQUwsQ0FBa0IsUUFBbEIsRUFBNEIzQixJQUE1QixDQUFpQyxLQUFJLENBQUNILFdBQXRDLEVBQW1ENkIsSUFBbkQsRUFBeUQsS0FBSSxDQUFDNUIsUUFBOUQ7QUFDSCxLQWJEO0FBY0g7QUE5Q0ksQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgcGxhbmVOb2RlOiBjYy5Ob2RlLFxyXG4gICAgICAgIG1hcE5vZGU6IGNjLk5vZGUsXHJcbiAgICAgICAgX2Nob29zZVR5cGU6IDAsIC8vMOaYr+W3puWvueinkiwx5piv5Y+z5a+56KeSXHJcbiAgICAgICAgX3NwZWVkVXA6IGZhbHNlLFxyXG4gICAgfSxcclxuXHJcbiAgICBvbkxvYWQoKSB7XHJcblxyXG4gICAgfSxcclxuICAgIGluaXQoX3NwZWVkVXApIHtcclxuICAgICAgICB0aGlzLl9zcGVlZFVwID0gX3NwZWVkVXBcclxuICAgICAgICB2YXIgYW5nbGVBcnIgPSBbLTEzNSwgMTM1LCA0NSwgLTQ1XVxyXG4gICAgICAgIHZhciBwb3NJbmRleCA9IFRvb2xzLnJhbmRvbU51bSgwLCAzKVxyXG4gICAgICAgIHRoaXMuX2Nob29zZVR5cGUgPSBwb3NJbmRleCAlIDJcclxuICAgICAgICB0aGlzLnBsYW5lTm9kZS5zZXRQb3NpdGlvbih0aGlzLm5vZGUuY2hpbGRyZW5bMF0uY29udmVydFRvTm9kZVNwYWNlQVIodGhpcy5tYXBOb2RlLmNoaWxkcmVuW3Bvc0luZGV4XS5jb252ZXJ0VG9Xb3JsZFNwYWNlQVIoY2MudjIoMCwgMCkpKSlcclxuICAgICAgICB0aGlzLnBsYW5lTm9kZS5hbmdsZSA9IGFuZ2xlQXJyW3Bvc0luZGV4XVxyXG4gICAgICAgIHN3aXRjaCAocG9zSW5kZXgpIHtcclxuICAgICAgICAgICAgY2FzZSAwOiB0aGlzLnBsYW5lTm9kZS5ydW5BY3Rpb24oY2MubW92ZVRvKDUsIHRoaXMubWFwTm9kZS5jaGlsZHJlblsyXS5wb3NpdGlvbikpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAxOiB0aGlzLnBsYW5lTm9kZS5ydW5BY3Rpb24oY2MubW92ZVRvKDUsIHRoaXMubWFwTm9kZS5jaGlsZHJlblszXS5wb3NpdGlvbikpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAyOiB0aGlzLnBsYW5lTm9kZS5ydW5BY3Rpb24oY2MubW92ZVRvKDUsIHRoaXMubWFwTm9kZS5jaGlsZHJlblswXS5wb3NpdGlvbikpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAzOiB0aGlzLnBsYW5lTm9kZS5ydW5BY3Rpb24oY2MubW92ZVRvKDUsIHRoaXMubWFwTm9kZS5jaGlsZHJlblsxXS5wb3NpdGlvbikpOyBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgR2FtZUFwcC5hdWRpb01hbmFnZXIucGxheUVmZmVjdCgncGxhbmUnLCAxLCAyKVxyXG4gICAgfSxcclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG4gICAganVtcEJ0bkNsaWNrKCkge1xyXG4gICAgICAgIEdhbWVBcHAuYXVkaW9NYW5hZ2VyLnBsYXlFZmZlY3QoJ2NsaWNrJylcclxuICAgICAgICB0aGlzLnBsYW5lTm9kZS5zdG9wQWxsQWN0aW9ucygpXHJcbiAgICAgICAgR2FtZUFwcC51aU1hbmFnZXIuc2hvd1VJKCdHYW1lVUknLCAobm9kZSkgPT4ge1xyXG4gICAgICAgICAgICB2YXIgYWxsTCA9IDBcclxuICAgICAgICAgICAgdmFyIGN1ckwgPSAwXHJcbiAgICAgICAgICAgIC8vIHZhciB0ZW1wQ2hvb3NlVHlwZSA9IHRoaXMuX2Nob29zZVR5cGUgJSAyXHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9jaG9vc2VUeXBlID09IDApIHtcclxuICAgICAgICAgICAgICAgIGFsbEwgPSBjYy52Mih0aGlzLm1hcE5vZGUuY2hpbGRyZW5bMF0ucG9zaXRpb24pLnN1Yih0aGlzLm1hcE5vZGUuY2hpbGRyZW5bMl0ucG9zaXRpb24pLm1hZygpXHJcbiAgICAgICAgICAgICAgICBjdXJMID0gY2MudjIodGhpcy5wbGFuZU5vZGUucG9zaXRpb24pLnN1Yih0aGlzLm1hcE5vZGUuY2hpbGRyZW5bMF0ucG9zaXRpb24pLm1hZygpXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBhbGxMID0gY2MudjIodGhpcy5tYXBOb2RlLmNoaWxkcmVuWzFdLnBvc2l0aW9uKS5zdWIodGhpcy5tYXBOb2RlLmNoaWxkcmVuWzNdLnBvc2l0aW9uKS5tYWcoKVxyXG4gICAgICAgICAgICAgICAgY3VyTCA9IGNjLnYyKHRoaXMucGxhbmVOb2RlLnBvc2l0aW9uKS5zdWIodGhpcy5tYXBOb2RlLmNoaWxkcmVuWzNdLnBvc2l0aW9uKS5tYWcoKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBiaWxpID0gY3VyTCAvIGFsbExcclxuICAgICAgICAgICAgbm9kZS5nZXRDb21wb25lbnQoXCJHYW1lVUlcIikuaW5pdCh0aGlzLl9jaG9vc2VUeXBlLCBiaWxpLCB0aGlzLl9zcGVlZFVwKVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG5cclxufSk7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/OverPopup.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9381aqM1mNENZMWDyiPSiym', 'OverPopup');
// scripts/ui/OverPopup.js

"use strict";

var Utils = require("Utils");

cc.Class({
  "extends": cc.Component,
  properties: {
    winTitle: cc.Node,
    winSprite: cc.Node,
    loseTitle: cc.Node,
    nameUI: cc.Label,
    rankUI: cc.Label,
    killUI: cc.Label,
    allRewardUI: cc.Label,
    rankRewardUI: cc.Label,
    killRewardUI: cc.Label,
    rewardBtnNode: cc.Button,
    homeBtnNode: cc.Node,
    onceClick: {
      "default": true,
      visible: false
    },
    clickedShare: {
      "default": false,
      visible: false
    }
  },
  onLoad: function onLoad() {
    var _this = this;

    // Utils.addInsertAd("addInsertAd")
    this.node.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(function () {
      _this.homeBtnNode.active = true;
    })));
    Tools.scaleUpAndDowm(this.rewardBtnNode.node);
  },
  init: function init(_isWin, rank) {
    if (_isWin) {
      rank = 1;
      this.winTitle.active = true;
      this.winSprite.active = true;
      GameApp.dataManager.userData.winNum++;
      GameApp.dataManager.addActivityNum(2, 1);
    } else {
      this.loseTitle.active = true;
      GameApp.dataManager.userData.alDieNum++;
    }

    if (rank <= 5) {
      GameApp.dataManager.userData.top5Num++;
    }

    this.nameUI.string = GameApp.dataManager.userData.playerName;
    this.rankUI.string = rank;
    var killNum = GameApp.dataManager.globalData.inGameKillNum[0]._killNum;
    GameApp.dataManager.userData.allKillNum += killNum;
    this.killUI.string = killNum;
    var rankCoin = (30 - rank) * 50;
    var killCoin = 100 * killNum;
    var allCoin = rankCoin + killCoin;
    this.allRewardUI.string = allCoin;
    this.rankRewardUI.string = rankCoin;
    this.killRewardUI.string = killCoin;
    GameApp.dataManager.userData.allPlayNum++;
    GameApp.dataManager.userData.winRate = (GameApp.dataManager.userData.winNum / GameApp.dataManager.userData.allPlayNum).toFixed(2);
    GameApp.dataManager.userData.kd = (GameApp.dataManager.userData.allKillNum / (GameApp.dataManager.userData.alDieNum == 0 ? 1 : GameApp.dataManager.userData.alDieNum)).toFixed(2);
    GameApp.dataManager.userData.avgRank = parseInt((GameApp.dataManager.userData.avgRank + rank) / GameApp.dataManager.userData.allPlayNum);
    GameApp.dataManager.userData.mostKill = killNum > GameApp.dataManager.userData.mostKill ? killNum : GameApp.dataManager.userData.mostKill;
    GameApp.dataManager.userData.avgLifeTime = parseInt((GameApp.dataManager.userData.avgLifeTime + GameApp.dataManager.globalData.lifeTime) / GameApp.dataManager.userData.allPlayNum);
    GameApp.dataManager.addCoin(allCoin);
  },
  homeBtnClick: function homeBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.showUI("LoginUI");
  },
  rewardBtnClick: function rewardBtnClick() {
    if (window.wx) {
      GameApp.uiManager.showToast("暂未开放！");
      return;
    }

    if (!this.onceClick) return;
    this.onceClick = false;
    GameApp.audioManager.playEffect('click');
    var self = this;

    if (window.tt) {
      Utils.addVideo("addVideo", function () {
        //看完了
        self.onceClick = true;
        GameApp.dataManager.addPlayedVideoNum();
        GameApp.uiManager.showPopup('OpenBoxPopup', function (node) {
          var getNum = Tools.randomNum(100, 1000);
          GameApp.dataManager.addCoin(getNum);
          node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[1], 1, getNum);
          self.onceClick = true;
          self.rewardBtnNode.interactable = false;
        }, false);
      }, function (_info) {
        //没看完
        self.onceClick = true;
        _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast("未看完视频！");
      });
    } else {
      self.onceClick = true;
      GameApp.dataManager.addPlayedVideoNum();
      GameApp.uiManager.showPopup('OpenBoxPopup', function (node) {
        var getNum = Tools.randomNum(100, 1000);
        GameApp.dataManager.addCoin(getNum);
        node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[1], 1, getNum);
        self.onceClick = true;
        self.rewardBtnNode.interactable = false;
      }, false);
    }
  },
  recordBtnClick: function recordBtnClick() {
    if (!this.onceClick) return;
    this.onceClick = false;
    var self = this;
    GameApp.audioManager.playEffect('click');

    if (this.clickedShare) {
      Utils.shareRecord(GameApp.dataManager.globalData.recordPath, function () {
        // GameApp.dataManager.changeRecordState(RecordState.RECORD)
        self.onceClick = true;
        console.log("分享完成了");
      }, function () {
        self.onceClick = true;
        console.log("分享失败了");
      });
      GameApp.dataManager.changeRecordState(RecordState.READY);
      return;
    }

    if (GameApp.dataManager.globalData.recordTimer < 3) {
      self.onceClick = true;
      GameApp.uiManager.showToast("录屏时间小于3秒!"); // console.log("请过一会儿再分享")

      return;
    } else {
      console.log("结束了");
      var self = this;
      Utils.stopRecord(function (res) {
        if (res != null) {
          GameApp.dataManager.globalData.recordPath = res.videoPath;
        }

        self.clickedShare = true;
        GameApp.dataManager.changeRecordState(RecordState.READY);
        Utils.shareRecord(GameApp.dataManager.globalData.recordPath, function () {
          // GameApp.dataManager.changeRecordState(RecordState.RECORD)
          self.onceClick = true;
          console.log("分享完成了");
        }, function () {
          self.onceClick = true;
          console.log("分享失败了");
        });
      });
    }
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlcXE92ZXJQb3B1cC5qcyJdLCJuYW1lcyI6WyJVdGlscyIsInJlcXVpcmUiLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsIndpblRpdGxlIiwiTm9kZSIsIndpblNwcml0ZSIsImxvc2VUaXRsZSIsIm5hbWVVSSIsIkxhYmVsIiwicmFua1VJIiwia2lsbFVJIiwiYWxsUmV3YXJkVUkiLCJyYW5rUmV3YXJkVUkiLCJraWxsUmV3YXJkVUkiLCJyZXdhcmRCdG5Ob2RlIiwiQnV0dG9uIiwiaG9tZUJ0bk5vZGUiLCJvbmNlQ2xpY2siLCJ2aXNpYmxlIiwiY2xpY2tlZFNoYXJlIiwib25Mb2FkIiwibm9kZSIsInJ1bkFjdGlvbiIsInNlcXVlbmNlIiwiZGVsYXlUaW1lIiwiY2FsbEZ1bmMiLCJhY3RpdmUiLCJUb29scyIsInNjYWxlVXBBbmREb3dtIiwiaW5pdCIsIl9pc1dpbiIsInJhbmsiLCJHYW1lQXBwIiwiZGF0YU1hbmFnZXIiLCJ1c2VyRGF0YSIsIndpbk51bSIsImFkZEFjdGl2aXR5TnVtIiwiYWxEaWVOdW0iLCJ0b3A1TnVtIiwic3RyaW5nIiwicGxheWVyTmFtZSIsImtpbGxOdW0iLCJnbG9iYWxEYXRhIiwiaW5HYW1lS2lsbE51bSIsIl9raWxsTnVtIiwiYWxsS2lsbE51bSIsInJhbmtDb2luIiwia2lsbENvaW4iLCJhbGxDb2luIiwiYWxsUGxheU51bSIsIndpblJhdGUiLCJ0b0ZpeGVkIiwia2QiLCJhdmdSYW5rIiwicGFyc2VJbnQiLCJtb3N0S2lsbCIsImF2Z0xpZmVUaW1lIiwibGlmZVRpbWUiLCJhZGRDb2luIiwiaG9tZUJ0bkNsaWNrIiwiYXVkaW9NYW5hZ2VyIiwicGxheUVmZmVjdCIsInVpTWFuYWdlciIsInNob3dVSSIsInJld2FyZEJ0bkNsaWNrIiwid2luZG93Iiwid3giLCJzaG93VG9hc3QiLCJzZWxmIiwidHQiLCJhZGRWaWRlbyIsImFkZFBsYXllZFZpZGVvTnVtIiwic2hvd1BvcHVwIiwiZ2V0TnVtIiwicmFuZG9tTnVtIiwiZ2V0Q29tcG9uZW50IiwiYm94U2tpbkRhdGFHcm91cCIsImludGVyYWN0YWJsZSIsIl9pbmZvIiwicmVjb3JkQnRuQ2xpY2siLCJzaGFyZVJlY29yZCIsInJlY29yZFBhdGgiLCJjb25zb2xlIiwibG9nIiwiY2hhbmdlUmVjb3JkU3RhdGUiLCJSZWNvcmRTdGF0ZSIsIlJFQURZIiwicmVjb3JkVGltZXIiLCJzdG9wUmVjb3JkIiwicmVzIiwidmlkZW9QYXRoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0FDLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxRQUFRLEVBQUVKLEVBQUUsQ0FBQ0ssSUFETDtBQUVSQyxJQUFBQSxTQUFTLEVBQUVOLEVBQUUsQ0FBQ0ssSUFGTjtBQUdSRSxJQUFBQSxTQUFTLEVBQUVQLEVBQUUsQ0FBQ0ssSUFITjtBQUlSRyxJQUFBQSxNQUFNLEVBQUVSLEVBQUUsQ0FBQ1MsS0FKSDtBQUtSQyxJQUFBQSxNQUFNLEVBQUVWLEVBQUUsQ0FBQ1MsS0FMSDtBQU1SRSxJQUFBQSxNQUFNLEVBQUVYLEVBQUUsQ0FBQ1MsS0FOSDtBQU9SRyxJQUFBQSxXQUFXLEVBQUVaLEVBQUUsQ0FBQ1MsS0FQUjtBQVFSSSxJQUFBQSxZQUFZLEVBQUViLEVBQUUsQ0FBQ1MsS0FSVDtBQVNSSyxJQUFBQSxZQUFZLEVBQUVkLEVBQUUsQ0FBQ1MsS0FUVDtBQVVSTSxJQUFBQSxhQUFhLEVBQUVmLEVBQUUsQ0FBQ2dCLE1BVlY7QUFXUkMsSUFBQUEsV0FBVyxFQUFFakIsRUFBRSxDQUFDSyxJQVhSO0FBWVJhLElBQUFBLFNBQVMsRUFBRTtBQUNQLGlCQUFTLElBREY7QUFFUEMsTUFBQUEsT0FBTyxFQUFFO0FBRkYsS0FaSDtBQWdCUkMsSUFBQUEsWUFB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QUFPLENBQUNDLFdBQVIsQ0FBb0JTLFVBQXBCLENBQStCdUMsVUFBL0IsR0FBNENRLEdBQUcsQ0FBQ0MsU0FBaEQ7QUFDSDs7QUFDRHRCLFFBQUFBLElBQUksQ0FBQ2pELFlBQUwsR0FBb0IsSUFBcEI7QUFDQWEsUUFBQUEsT0FBTyxDQUFDQyxXQUFSLENBQW9CbUQsaUJBQXBCLENBQXNDQyxXQUFXLENBQUNDLEtBQWxEO0FBQ0F6RixRQUFBQSxLQUFLLENBQUNtRixXQUFOLENBQWtCaEQsT0FBTyxDQUFDQyxXQUFSLENBQW9CUyxVQUFwQixDQUErQnVDLFVBQWpELEVBQTZELFlBQVk7QUFDckU7QUFDQWIsVUFBQUEsSUFBSSxDQUFDbkQsU0FBTCxHQUFpQixJQUFqQjtBQUNBaUUsVUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksT0FBWjtBQUNILFNBSkQsRUFJRyxZQUFZO0FBQ1hmLFVBQUFBLElBQUksQ0FBQ25ELFNBQUwsR0FBaUIsSUFBakI7QUFDQWlFLFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE9BQVo7QUFDSCxTQVBEO0FBU0gsT0FmRDtBQWlCSDtBQUNKO0FBekpJLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFV0aWxzID0gcmVxdWlyZShcIlV0aWxzXCIpXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgd2luVGl0bGU6IGNjLk5vZGUsXHJcbiAgICAgICAgd2luU3ByaXRlOiBjYy5Ob2RlLFxyXG4gICAgICAgIGxvc2VUaXRsZTogY2MuTm9kZSxcclxuICAgICAgICBuYW1lVUk6IGNjLkxhYmVsLFxyXG4gICAgICAgIHJhbmtVSTogY2MuTGFiZWwsXHJcbiAgICAgICAga2lsbFVJOiBjYy5MYWJlbCxcclxuICAgICAgICBhbGxSZXdhcmRVSTogY2MuTGFiZWwsXHJcbiAgICAgICAgcmFua1Jld2FyZFVJOiBjYy5MYWJlbCxcclxuICAgICAgICBraWxsUmV3YXJkVUk6IGNjLkxhYmVsLFxyXG4gICAgICAgIHJld2FyZEJ0bk5vZGU6IGNjLkJ1dHRvbixcclxuICAgICAgICBob21lQnRuTm9kZTogY2MuTm9kZSxcclxuICAgICAgICBvbmNlQ2xpY2s6IHtcclxuICAgICAgICAgICAgZGVmYXVsdDogdHJ1ZSxcclxuICAgICAgICAgICAgdmlzaWJsZTogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNsaWNrZWRTaGFyZToge1xyXG4gICAgICAgICAgICBkZWZhdWx0OiBmYWxzZSxcclxuICAgICAgICAgICAgdmlzaWJsZTogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgb25Mb2FkKCkge1xyXG4gICAgICAgIC8vIFV0aWxzLmFkZEluc2VydEFkKFwiYWRkSW5zZXJ0QWRcIilcclxuICAgICAgICB0aGlzLm5vZGUucnVuQWN0aW9uKGNjLnNlcXVlbmNlKGNjLmRlbGF5VGltZSgzKSwgY2MuY2FsbEZ1bmMoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmhvbWVCdG5Ob2RlLmFjdGl2ZSA9IHRydWVcclxuICAgICAgICB9KSkpXHJcbiAgICAgICAgVG9vbHMuc2NhbGVVcEFuZERvd20odGhpcy5yZXdhcmRCdG5Ob2RlLm5vZGUpXHJcbiAgICB9LFxyXG4gICAgaW5pdChfaXNXaW4sIHJhbmspIHtcclxuICAgICAgICBpZiAoX2lzV2luKSB7XHJcbiAgICAgICAgICAgIHJhbmsgPSAxXHJcbiAgICAgICAgICAgIHRoaXMud2luVGl0bGUuYWN0aXZlID0gdHJ1ZVxyXG4gICAgICAgICAgICB0aGlzLndpblNwcml0ZS5hY3RpdmUgPSB0cnVlXHJcbiAgICAgICAgICAgIEdhbWVBcHAuZGF0YU1hbmFnZXIudXNlckRhdGEud2luTnVtKytcclxuICAgICAgICAgICAgR2FtZUFwcC5kYXRhTWFuYWdlci5hZGRBY3Rpdml0eU51bSgyLCAxKVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9zZVRpdGxlLmFjdGl2ZSA9IHRydWVcclxuICAgICAgICAgICAgR2FtZUFwcC5kYXRhTWFuYWdlci51c2VyRGF0YS5hbERpZU51bSsrXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChyYW5rIDw9IDUpIHtcclxuICAgICAgICAgICAgR2FtZUFwcC5kYXRhTWFuYWdlci51c2VyRGF0YS50b3A1TnVtKytcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMubmFtZVVJLnN0cmluZyA9IEdhbWVBcHAuZGF0YU1hbmFnZXIudXNlckRhdGEucGxheWVyTmFtZVxyXG4gICAgICAgIHRoaXMucmFua1VJLnN0cmluZyA9IHJhbmtcclxuICAgICAgICB2YXIga2lsbE51bSA9IEdhbWVBcHAuZGF0YU1hbmFnZXIuZ2xvYmFsRGF0YS5pbkdhbWVLaWxsTnVtWzBdLl9raWxsTnVtXHJcblxyXG4gICAgICAgIEdhbWVBcHAuZGF0YU1hbmFnZXIudXNlckRhdGEuYWxsS2lsbE51bSArPSBraWxsTnVtXHJcblxyXG4gICAgICAgIHRoaXMua2lsbFVJLnN0cmluZyA9IGtpbGxOdW1cclxuICAgICAgICB2YXIgcmFua0NvaW4gPSAoMzAgLSByYW5rKSAqIDUwXHJcbiAgICAgICAgdmFyIGtpbGxDb2luID0gMTAwICoga2lsbE51bVxyXG4gICAgICAgIHZhciBhbGxDb2luID0gcmFua0NvaW4gKyBraWxsQ29pblxyXG4gICAgICAgIHRoaXMuYWxsUmV3YXJkVUkuc3RyaW5nID0gYWxsQ29pblxyXG4gICAgICAgIHRoaXMucmFua1Jld2FyZFVJLnN0cmluZyA9IHJhbmtDb2luXHJcbiAgICAgICAgdGhpcy5raWxsUmV3YXJkVUkuc3RyaW5nID0ga2lsbENvaW5cclxuXHJcbiAgICAgICAgR2FtZUFwcC5kYXRhTWFuYWdlci51c2VyRGF0YS5hbGxQbGF5TnVtKytcclxuICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLnVzZXJEYXRhLndpblJhdGUgPSAoR2FtZUFwcC5kYXRhTWFuYWdlci51c2VyRGF0YS53aW5OdW0gLyBHYW1lQXBwLmRhdGFNYW5hZ2VyLnVzZXJEYXRhLmFsbFBsYXlOdW0pLnRvRml4ZWQoMilcclxuICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLnVzZXJEYXRhLmtkID0gKEdhbWVBcHAuZGF0YU1hbmFnZXIudXNlckRhdGEuYWxsS2lsbE51bSAvIChHYW1lQXBwLmRhdGFNYW5hZ2VyLnVzZXJEYXRhLmFsRGllTnVtID09IDAgPyAxIDogR2FtZUFwcC5kYXRhTWFuYWdlci51c2VyRGF0YS5hbERpZU51bSkpLnRvRml4ZWQoMilcclxuICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLnVzZXJEYXRhLmF2Z1JhbmsgPSBwYXJzZUludCgoR2FtZUFwcC5kYXRhTWFuYWdlci51c2VyRGF0YS5hdmdSYW5rICsgcmFuaykgLyBHYW1lQXBwLmRhdGFNYW5hZ2VyLnVzZXJEYXRhLmFsbFBsYXlOdW0pXHJcbiAgICAgICAgR2FtZUFwcC5kYXRhTWFuYWdlci51c2VyRGF0YS5tb3N0S2lsbCA9IGtpbGxOdW0gPiBHYW1lQXBwLmRhdGFNYW5hZ2VyLnVzZXJEYXRhLm1vc3RLaWxsID8ga2lsbE51bSA6IEdhbWVBcHAuZGF0YU1hbmFnZXIudXNlckRhdGEubW9zdEtpbGxcclxuICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLnVzZXJEYXRhLmF2Z0xpZmVUaW1lID0gcGFyc2VJbnQoKEdhbWVBcHAuZGF0YU1hbmFnZXIudXNlckRhdGEuYXZnTGlmZVRpbWUgKyBHYW1lQXBwLmRhdGFNYW5hZ2VyLmdsb2JhbERhdGEubGlmZVRpbWUpIC8gR2FtZUFwcC5kYXRhTWFuYWdlci51c2VyRGF0YS5hbGxQbGF5TnVtKVxyXG4gICAgICAgIEdhbWVBcHAuZGF0YU1hbmFnZXIuYWRkQ29pbihhbGxDb2luKVxyXG4gICAgfSxcclxuICAgIGhvbWVCdG5DbGljaygpIHtcclxuICAgICAgICBHYW1lQXBwLmF1ZGlvTWFuYWdlci5wbGF5RWZmZWN0KCdjbGljaycpXHJcbiAgICAgICAgR2FtZUFwcC51aU1hbmFnZXIuc2hvd1VJKFwiTG9naW5VSVwiKVxyXG4gICAgfSxcclxuICAgIHJld2FyZEJ0bkNsaWNrKCkge1xyXG4gICAgICAgIGlmICh3aW5kb3cud3gpIHtcclxuICAgICAgICAgICAgR2FtZUFwcC51aU1hbmFnZXIuc2hvd1RvYXN0KFwi5pqC5pyq5byA5pS+77yBXCIpXHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXRoaXMub25jZUNsaWNrKSByZXR1cm47XHJcbiAgICAgICAgdGhpcy5vbmNlQ2xpY2sgPSBmYWxzZVxyXG4gICAgICAgIEdhbWVBcHAuYXVkaW9NYW5hZ2VyLnBsYXlFZmZlY3QoJ2NsaWNrJylcclxuICAgICAgICB2YXIgc2VsZiA9IHRoaXNcclxuICAgICAgICBpZiAod2luZG93LnR0KSB7XHJcbiAgICAgICAgICAgIFV0aWxzLmFkZFZpZGVvKFwiYWRkVmlkZW9cIiwgZnVuY3Rpb24gKCkgeyAvL+eci+WujOS6hlxyXG4gICAgICAgICAgICAgICAgc2VsZi5vbmNlQ2xpY2sgPSB0cnVlXHJcbiAgICAgICAgICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLmFkZFBsYXllZFZpZGVvTnVtKClcclxuICAgICAgICAgICAgICAgIEdhbWVBcHAudWlNYW5hZ2VyLnNob3dQb3B1cCgnT3BlbkJveFBvcHVwJywgKG5vZGUpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZ2V0TnVtID0gVG9vbHMucmFuZG9tTnVtKDEwMCwgMTAwMClcclxuICAgICAgICAgICAgICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLmFkZENvaW4oZ2V0TnVtKVxyXG4gICAgICAgICAgICAgICAgICAgIG5vZGUuZ2V0Q29tcG9uZW50KCdPcGVuQm94UG9wdXAnKS5pbml0KEdhbWVBcHAudWlNYW5hZ2VyLmJveFNraW5EYXRhR3JvdXBbMV0sIDEsIGdldE51bSlcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLm9uY2VDbGljayA9IHRydWVcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLnJld2FyZEJ0bk5vZGUuaW50ZXJhY3RhYmxlID0gZmFsc2VcclxuICAgICAgICAgICAgICAgIH0sIGZhbHNlKVxyXG4gICAgICAgICAgICB9LCBmdW5jdGlvbiAoX2luZm8pIHsgLy/msqHnnIvlroxcclxuICAgICAgICAgICAgICAgIHNlbGYub25jZUNsaWNrID0gdHJ1ZVxyXG4gICAgICAgICAgICAgICAgX2luZm8gPyBHYW1lQXBwLnVpTWFuYWdlci5zaG93VG9hc3QoX2luZm8pIDogR2FtZUFwcC51aU1hbmFnZXIuc2hvd1RvYXN0KFwi5pyq55yL5a6M6KeG6aKR77yBXCIpXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgc2VsZi5vbmNlQ2xpY2sgPSB0cnVlXHJcbiAgICAgICAgICAgIEdhbWVBcHAuZGF0YU1hbmFnZXIuYWRkUGxheWVkVmlkZW9OdW0oKVxyXG4gICAgICAgICAgICBHYW1lQXBwLnVpTWFuYWdlci5zaG93UG9wdXAoJ09wZW5Cb3hQb3B1cCcsIChub2RlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZ2V0TnVtID0gVG9vbHMucmFuZG9tTnVtKDEwMCwgMTAwMClcclxuICAgICAgICAgICAgICAgIEdhbWVBcHAuZGF0YU1hbmFnZXIuYWRkQ29pbihnZXROdW0pXHJcbiAgICAgICAgICAgICAgICBub2RlLmdldENvbXBvbmVudCgnT3BlbkJveFBvcHVwJykuaW5pdChHYW1lQXBwLnVpTWFuYWdlci5ib3hTa2luRGF0YUdyb3VwWzFdLCAxLCBnZXROdW0pXHJcbiAgICAgICAgICAgICAgICBzZWxmLm9uY2VDbGljayA9IHRydWVcclxuICAgICAgICAgICAgICAgIHNlbGYucmV3YXJkQnRuTm9kZS5pbnRlcmFjdGFibGUgPSBmYWxzZVxyXG4gICAgICAgICAgICB9LCBmYWxzZSlcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgcmVjb3JkQnRuQ2xpY2soKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLm9uY2VDbGljaykgcmV0dXJuXHJcbiAgICAgICAgdGhpcy5vbmNlQ2xpY2sgPSBmYWxzZVxyXG4gICAgICAgIHZhciBzZWxmID0gdGhpc1xyXG4gICAgICAgIEdhbWVBcHAuYXVkaW9NYW5hZ2VyLnBsYXlFZmZlY3QoJ2NsaWNrJylcclxuICAgICAgICBpZiAodGhpcy5jbGlja2VkU2hhcmUpIHtcclxuICAgICAgICAgICAgVXRpbHMuc2hhcmVSZWNvcmQoR2FtZUFwcC5kYXRhTWFuYWdlci5nbG9iYWxEYXRhLnJlY29yZFBhdGgsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIC8vIEdhbWVBcHAuZGF0YU1hbmFnZXIuY2hhbmdlUmVjb3JkU3RhdGUoUmVjb3JkU3RhdGUuUkVDT1JEKVxyXG4gICAgICAgICAgICAgICAgc2VsZi5vbmNlQ2xpY2sgPSB0cnVlXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWIhuS6q+WujOaIkOS6hlwiKVxyXG4gICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLm9uY2VDbGljayA9IHRydWVcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5YiG5Lqr5aSx6LSl5LqGXCIpXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIEdhbWVBcHAuZGF0YU1hbmFnZXIuY2hhbmdlUmVjb3JkU3RhdGUoUmVjb3JkU3RhdGUuUkVBRFkpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKEdhbWVBcHAuZGF0YU1hbmFnZXIuZ2xvYmFsRGF0YS5yZWNvcmRUaW1lciA8IDMpIHtcclxuICAgICAgICAgICAgc2VsZi5vbmNlQ2xpY2sgPSB0cnVlXHJcbiAgICAgICAgICAgIEdhbWVBcHAudWlNYW5hZ2VyLnNob3dUb2FzdChcIuW9leWxj+aXtumXtOWwj+S6jjPnp5IhXCIpXHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwi6K+36L+H5LiA5Lya5YS/5YaN5YiG5LqrXCIpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIue7k+adn+S6hlwiKVxyXG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXNcclxuICAgICAgICAgICAgVXRpbHMuc3RvcFJlY29yZChmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLmdsb2JhbERhdGEucmVjb3JkUGF0aCA9IHJlcy52aWRlb1BhdGhcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHNlbGYuY2xpY2tlZFNoYXJlID0gdHJ1ZVxyXG4gICAgICAgICAgICAgICAgR2FtZUFwcC5kYXRhTWFuYWdlci5jaGFuZ2VSZWNvcmRTdGF0ZShSZWNvcmRTdGF0ZS5SRUFEWSlcclxuICAgICAgICAgICAgICAgIFV0aWxzLnNoYXJlUmVjb3JkKEdhbWVBcHAuZGF0YU1hbmFnZXIuZ2xvYmFsRGF0YS5yZWNvcmRQYXRoLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gR2FtZUFwcC5kYXRhTWFuYWdlci5jaGFuZ2VSZWNvcmRTdGF0ZShSZWNvcmRTdGF0ZS5SRUNPUkQpXHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5vbmNlQ2xpY2sgPSB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLliIbkuqvlrozmiJDkuoZcIilcclxuICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLm9uY2VDbGljayA9IHRydWVcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWIhuS6q+Wksei0peS6hlwiKVxyXG4gICAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/PrepareUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2e391TZyyJPmYBLDqA+YUbL', 'PrepareUI');
// scripts/ui/PrepareUI.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    joystick: {
      "default": null,
      type: cc.Node,
      tooltip: '摇杆的脚本'
    },
    soundNode: cc.Node,
    shootBtn: cc.Node,
    reloadBtnNode: cc.Node,
    amoUI: cc.Label,
    allRoleNumUI: cc.Label,
    weaponBtnNode: cc.Node,
    prepareTopNode: cc.Node,
    countDownSpGroup: [cc.SpriteFrame],
    _shootFlag: false,
    _shootTimer: 0,
    _reloadFlag: false,
    _reloadTimer: 0,
    _timeCountDown: 20,
    _onceCountDownAnim: false,
    _onceExecute: true
  },
  onLoad: function onLoad() {
    var _this = this;

    GameApp.dataManager.globalData.isInGame = false;
    GameApp.eventManager.on(EventNames.EVENT_UPDATE_AMO_SHOW, this.updateAmoShow.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_SHOW_GUN_UI, this.updateGunUIShow.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_SHOW_RELOAD_UI, this.updateReloadUIShow.bind(this));
    GameApp.eventManager.on(EventNames.EVENT_SHOW_ALLROLENUM_UI, this.updateAllRoleNumUIShow.bind(this));
    this.shootBtn.on(cc.Node.EventType.TOUCH_START, this.onTouchBegin, this);
    this.shootBtn.on(cc.Node.EventType.TOUCH_END, this.onTouchLeave, this);
    this.shootBtn.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchLeave, this);
    GameApp.uiManager.showGame('PrepareMap');
    this.weaponBtnNode.children[0].runAction(cc.rotateBy(0.2, 90).repeatForever());
    this.prepareTopNode.children[0].runAction(cc.sequence(cc.callFunc(function () {
      _this.prepareTopNode.children[0].children[0].active = true;
    }), cc.delayTime(0.4), cc.callFunc(function () {
      _this.prepareTopNode.children[0].children[1].active = true;
    }), cc.delayTime(0.4), cc.callFunc(function () {
      _this.prepareTopNode.children[0].children[2].active = true;
    }), cc.delayTime(0.4), cc.callFunc(function () {
      _this.prepareTopNode.children[0].children[0].active = false;
      _this.prepareTopNode.children[0].children[1].active = false;
      _this.prepareTopNode.children[0].children[2].active = false;
    }), cc.delayTime(0.4)).repeatForever());
    this._timeCountDown = 20;
    GameApp.dataManager.globalData.inGameKillNum.push({
      _killNum: 0,
      _belongName: GameApp.dataManager.userData.playerName
    });
    this.updateSoundBtnShow();
  },
  onDestroy: function onDestroy() {
    GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_AMO_SHOW);
    GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_GUN_UI);
    GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_RELOAD_UI);
    GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_ALLROLENUM_UI);
  },
  update: function update(dt) {
    this._shootTimer -= dt;

    if (this._shootFlag && this._shootTimer < 0 && !this._reloadFlag) {
      this._shootTimer = GameApp.dataManager.globalData.shootInterval;
      this.shoot();
    }

    if (this._reloadFlag) {
      this._reloadTimer -= dt;

      if (this._reloadFlag && this._reloadTimer < 0) {
        this._reloadFlag = false;
        GameApp.dataManager.reloadAmo();
      }
    }

    this._timeCountDown -= dt;

    if (this._timeCountDown < 6) {
      this.prepareTopNode.children[0].active = false;
      this.prepareTopNode.children[1].active = true;
      this.prepareTopNode.children[2].active = true;
      this.countDownAnim();
      this.prepareTopNode.children[2].getComponent(cc.Sprite).spriteFrame = this.countDownSpGroup[Math.floor(this._timeCountDown - 1)];
    }

    if (Math.floor(this._timeCountDown) <= 0) {
      if (!this._onceExecute) return;
      this._onceExecute = false;
      GameApp.uiManager.showPopup('GiftPopup', function (node) {
        node.getComponent("GiftPopup").init("GameUI", 2);
      });
    }
  },
  showPlaneUI: function showPlaneUI(_speedUp) {
    GameApp.uiManager.showUI('PlaneUI', function (node) {
      node.getComponent('PlaneUI').init(_speedUp);
    });
  },
  countDownAnim: function countDownAnim() {
    var _this2 = this;

    if (this._onceCountDownAnim) return;
    this._onceCountDownAnim = true;
    cc.log("播放了");
    GameApp.audioManager.playEffect('waitSceneCutDown');
    var seq = cc.sequence(cc.scaleTo(0.2, 1.5), cc.scaleTo(0.3, 1), cc.delayTime(0.5), cc.callFunc(function () {
      _this2._onceCountDownAnim = false;
    }));
    this.prepareTopNode.children[2].runAction(seq);
  },
  onTouchBegin: function onTouchBegin(event) {
    this._shootFlag = true;
  },
  onTouchLeave: function onTouchLeave(event) {
    this._shootFlag = false;
    GameApp.eventManager.emit(EventNames.EVENT_AIM, false);
  },
  shoot: function shoot() {
    GameApp.eventManager.emit(EventNames.EVENT_AIM, true);
    GameApp.eventManager.emit(EventNames.EVENT_PLAYER_SHOOT);
  },
  updateAmoShow: function updateAmoShow() {
    this.amoUI.string = GameApp.dataManager.globalData.curAmoNum;
    GameApp.eventManager.emit(EventNames.EVENT_UPDATE_TOPBAR_SHOW);
  },
  updateGunUIShow: function updateGunUIShow(event, _gunData) {
    if (_gunData) {
      console.log(_gunData);
      this.weaponBtnNode.getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame("ui_weapon_" + _gunData.weaponid);
      this.weaponBtnNode.children[1].children[0].getComponent(cc.Label).string = _gunData.name;
    }

    this.weaponBtnNode.active = event;

    if (event) {
      this.weaponBtnNode.scaleX = 0;
      this.weaponBtnNode.scaleY = 0;
      this.weaponBtnNode.runAction(cc.scaleTo(0.3, 1).easing(cc.easeBackOut()));
    }
  },
  updateReloadUIShow: function updateReloadUIShow(event) {
    this.reloadBtnNode.active = event;
  },
  updateAllRoleNumUIShow: function updateAllRoleNumUIShow() {
    this.allRoleNumUI.string = GameApp.dataManager.globalData.allRoleArr.length;
  },
  reloadBtnClick: function reloadBtnClick() {
    GameApp.audioManager.playEffect('click');
    if (this._reloadFlag) return;
    this._reloadTimer = GameApp.dataManager.globalData.reloadInterval;
    this._reloadFlag = true;
    GameApp.eventManager.emit(EventNames.EVENT_PLAYER_RELOAD);
  },
  weaponBtnClick: function weaponBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.eventManager.emit(EventNames.EVENT_PICKUP_WEAPON);
  },
  backBtnClick: function backBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.showUI('LoginUI');
  },
  soundBtnClick: function soundBtnClick() {
    GameApp.audioManager.playEffect('click');
    var onoff = !GameApp.audioManager._effectOn;
    GameApp.audioManager.setEffect(onoff); // GameApp.audioManager.setEffect(onoff)

    this.updateSoundBtnShow();
  },
  updateSoundBtnShow: function updateSoundBtnShow() {
    this.soundNode.children[0].active = GameApp.audioManager._effectOn;
    this.soundNode.children[1].active = !GameApp.audioManager._effectOn;
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlcXFByZXBhcmVVSS5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsImpveXN0aWNrIiwidHlwZSIsIk5vZGUiLCJ0b29sdGlwIiwic291bmROb2RlIiwic2hvb3RCdG4iLCJyZWxvYWRCdG5Ob2RlIiwiYW1vVUkiLCJMYWJlbCIsImFsbFJvbGVOdW1VSSIsIndlYXBvbkJ0bk5vZGUiLCJwcmVwYXJlVG9wTm9kZSIsImNvdW50RG93blNwR3JvdXAiLCJTcHJpdGVGcmFtZSIsIl9zaG9vdEZsYWciLCJfc2hvb3RUaW1lciIsIl9yZWxvYWRGbGFnIiwiX3JlbG9hZFRpbWVyIiwiX3RpbWVDb3VudERvd24iLCJfb25jZUNvdW50RG93bkFuaW0iLCJfb25jZUV4ZWN1dGUiLCJvbkxvYWQiLCJHYW1lQXBwIiwiZGF0YU1hbmFnZXIiLCJnbG9iYWxEYXRhIiwiaXNJbkdhbWUiLCJldmVudE1hbmFnZXIiLCJvbiIsIkV2ZW50TmFtZXMiLCJFVkVOVF9VUERBVEVfQU1PX1NIT1ciLCJ1cGRhdGVBbW9TaG93IiwiYmluZCIsIkVWRU5UX1NIT1dfR1VOX1VJIiwidXBkYXRlR3VuVUlTaG93IiwiRVZFTlRfU0hPV19SRUxPQURfVUkiLCJ1cGRhdGVSZWxvYWRVSVNob3ciLCJFVkVOVF9TSE9XX0FMTFJPTEVOVU1fVUkiLCJ1cGRhdGVBbGxSb2xlTnVtVUlTaG93IiwiRXZlbnRUeXBlIiwiVE9VQ0hfU1RBUlQiLCJvblRvdWNoQmVnaW4iLCJUT1VDSF9FTkQiLCJvblRvdWNoTGVhdmUiLCJUT1VDSF9DQU5DRUwiLCJ1aU1hbmFnZXIiLCJzaG93R2FtZSIsImNoaWxkcmVuIiwicnVuQWN0aW9uIiwicm90YXRlQnkiLCJyZXBlYXRGb3JldmVyIiwic2VxdWVuY2UiLCJjYWxsRnVuYyIsImFjdGl2ZSIsImRlbGF5VGltZSIsImluR2FtZUtpbGxOdW0iLCJwdXNoIiwiX2tpbGxOdW0iLCJfYmVsb25nTmFtZSIsInVzZXJEYXRhIiwicGxheWVyTmFtZSIsInVwZGF0ZVNvdW5kQnRuU2hvdyIsIm9uRGVzdHJveSIsInJlbW92ZUxpc3RlbmVyIiwidXBkYXRlIiwiZHQiLCJzaG9vdEludGVydmFsIiwic2hvb3QiLCJyZWxvYWRBbW8iLCJjb3VudERvd25BbmltIiwiZ2V0Q29tcG9uZW50IiwiU3ByaXRlIiwic3ByaXRlRnJhbWUiLCJNYXRoIiwiZmxvb3IiLCJzaG93UG9wdXAiLCJub2RlIiwiaW5pdCIsInNob3dQbGFuZVVJIiwiX3NwZWVkVXAiLCJzaG93VUkiLCJsb2ciLCJhdWRpb01hbmFnZXIiLCJwbGF5RWZmZWN0Iiwic2VxIiwic2NhbGVUbyIsImV2ZW50IiwiZW1pdCIsIkVWRU5UX0FJTSIsIkVWRU5UX1BMQVlFUl9TSE9PVCIsInN0cmluZyIsImN1ckFtb051bSIsIkVWRU5UX1VQREFURV9UT1BCQVJfU0hPVyIsIl9ndW5EYXRhIiwiY29uc29sZSIsImNvbW1vbkF0bGFzIiwiZ2V0U3ByaXRlRnJhbWUiLCJ3ZWFwb25pZCIsIm5hbWUiLCJzY2FsZVgiLCJzY2FsZVkiLCJlYXNpbmciLCJlYXNlQmFja091dCIsImFsbFJvbGVBcnIiLCJsZW5ndGgiLCJyZWxvYWRCdG5DbGljayIsInJlbG9hZEludGVydmFsIiwiRVZFTlRfUExBWUVSX1JFTE9BRCIsIndlYXBvbkJ0bkNsaWNrIiwiRVZFTlRfUElDS1VQX1dFQVBPTiIsImJhY2tCdG5DbGljayIsInNvdW5kQnRuQ2xpY2siLCJvbm9mZiIsIl9lZmZlY3RPbiIsInNldEVmZmVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQUEsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLFFBQVEsRUFBRTtBQUNOLGlCQUFTLElBREg7QUFFTkMsTUFBQUEsSUFBSSxFQUFFTCxFQUFFLENBQUNNLElBRkg7QUFHTkMsTUFBQUEsT0FBTyxFQUFF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QjRELElBQXJCLENBQTBCMUQsVUFBVSxDQUFDZ0YsbUJBQXJDO0FBQ0gsR0E1Skk7QUE2SkxDLEVBQUFBLFlBN0pLLDBCQTZKVTtBQUNYdkYsSUFBQUEsT0FBTyxDQUFDMkQsWUFBUixDQUFxQkMsVUFBckIsQ0FBZ0MsT0FBaEM7QUFDQTVELElBQUFBLE9BQU8sQ0FBQ3NCLFNBQVIsQ0FBa0JtQyxNQUFsQixDQUF5QixTQUF6QjtBQUNILEdBaEtJO0FBaUtMK0IsRUFBQUEsYUFqS0ssMkJBaUtXO0FBQ1p4RixJQUFBQSxPQUFPLENBQUMyRCxZQUFSLENBQXFCQyxVQUFyQixDQUFnQyxPQUFoQztBQUNBLFFBQUk2QixLQUFLLEdBQUcsQ0FBQ3pGLE9BQU8sQ0FBQzJELFlBQVIsQ0FBcUIrQixTQUFsQztBQUNBMUYsSUFBQUEsT0FBTyxDQUFDMkQsWUFBUixDQUFxQmdDLFNBQXJCLENBQStCRixLQUEvQixFQUhZLENBSVo7O0FBQ0EsU0FBS25ELGtCQUFMO0FBQ0gsR0F2S0k7QUF3S0xBLEVBQUFBLGtCQXhLSyxnQ0F3S2dCO0FBQ2pCLFNBQUt4RCxTQUFMLENBQWUwQyxRQUFmLENBQXdCLENBQXhCLEVBQTJCTSxNQUEzQixHQUFvQzlCLE9BQU8sQ0FBQzJELFlBQVIsQ0FBcUIrQixTQUF6RDtBQUNBLFNBQUs1RyxTQUFMLENBQWUwQyxRQUFmLENBQXdCLENBQXhCLEVBQTJCTSxNQUEzQixHQUFvQyxDQUFDOUIsT0FBTyxDQUFDMkQsWUFBUixDQUFxQitCLFNBQTFEO0FBQ0gsR0EzS0ksQ0E0S0w7O0FBNUtLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIGpveXN0aWNrOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLk5vZGUsXHJcbiAgICAgICAgICAgIHRvb2x0aXA6ICfmkYfmnYbnmoTohJrmnKwnXHJcbiAgICAgICAgfSxcclxuICAgICAgICBzb3VuZE5vZGU6IGNjLk5vZGUsXHJcbiAgICAgICAgc2hvb3RCdG46IGNjLk5vZGUsXHJcbiAgICAgICAgcmVsb2FkQnRuTm9kZTogY2MuTm9kZSxcclxuICAgICAgICBhbW9VSTogY2MuTGFiZWwsXHJcbiAgICAgICAgYWxsUm9sZU51bVVJOiBjYy5MYWJlbCxcclxuICAgICAgICB3ZWFwb25CdG5Ob2RlOiBjYy5Ob2RlLFxyXG4gICAgICAgIHByZXBhcmVUb3BOb2RlOiBjYy5Ob2RlLFxyXG4gICAgICAgIGNvdW50RG93blNwR3JvdXA6IFtjYy5TcHJpdGVGcmFtZV0sXHJcblxyXG4gICAgICAgIF9zaG9vdEZsYWc6IGZhbHNlLFxyXG4gICAgICAgIF9zaG9vdFRpbWVyOiAwLFxyXG4gICAgICAgIF9yZWxvYWRGbGFnOiBmYWxzZSxcclxuICAgICAgICBfcmVsb2FkVGltZXI6IDAsXHJcblxyXG4gICAgICAgIF90aW1lQ291bnREb3duOiAyMCxcclxuICAgICAgICBfb25jZUNvdW50RG93bkFuaW06IGZhbHNlLFxyXG4gICAgICAgIF9vbmNlRXhlY3V0ZTogdHJ1ZSxcclxuICAgIH0sXHJcblxyXG4gICAgb25Mb2FkKCkge1xyXG4gICAgICAgIEdhbWVBcHAuZGF0YU1hbmFnZXIuZ2xvYmFsRGF0YS5pc0luR2FtZSA9IGZhbHNlXHJcbiAgICAgICAgR2FtZUFwcC5ldmVudE1hbmFnZXIub24oRXZlbnROYW1lcy5FVkVOVF9VUERBVEVfQU1PX1NIT1csIHRoaXMudXBkYXRlQW1vU2hvdy5iaW5kKHRoaXMpKVxyXG4gICAgICAgIEdhbWVBcHAuZXZlbnRNYW5hZ2VyLm9uKEV2ZW50TmFtZXMuRVZFTlRfU0hPV19HVU5fVUksIHRoaXMudXBkYXRlR3VuVUlTaG93LmJpbmQodGhpcykpXHJcbiAgICAgICAgR2FtZUFwcC5ldmVudE1hbmFnZXIub24oRXZlbnROYW1lcy5FVkVOVF9TSE9XX1JFTE9BRF9VSSwgdGhpcy51cGRhdGVSZWxvYWRVSVNob3cuYmluZCh0aGlzKSlcclxuICAgICAgICBHYW1lQXBwLmV2ZW50TWFuYWdlci5vbihFdmVudE5hbWVzLkVWRU5UX1NIT1dfQUxMUk9MRU5VTV9VSSwgdGhpcy51cGRhdGVBbGxSb2xlTnVtVUlTaG93LmJpbmQodGhpcykpXHJcbiAgICAgICAgdGhpcy5zaG9vdEJ0bi5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9TVEFSVCwgdGhpcy5vblRvdWNoQmVnaW4sIHRoaXMpO1xyXG4gICAgICAgIHRoaXMuc2hvb3RCdG4ub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELCB0aGlzLm9uVG91Y2hMZWF2ZSwgdGhpcyk7XHJcbiAgICAgICAgdGhpcy5zaG9vdEJ0bi5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9DQU5DRUwsIHRoaXMub25Ub3VjaExlYXZlLCB0aGlzKTtcclxuICAgICAgICBHYW1lQXBwLnVpTWFuYWdlci5zaG93R2FtZSgnUHJlcGFyZU1hcCcpXHJcbiAgICAgICAgdGhpcy53ZWFwb25CdG5Ob2RlLmNoaWxkcmVuWzBdLnJ1bkFjdGlvbihjYy5yb3RhdGVCeSgwLjIsIDkwKS5yZXBlYXRGb3JldmVyKCkpXHJcbiAgICAgICAgdGhpcy5wcmVwYXJlVG9wTm9kZS5jaGlsZHJlblswXS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoY2MuY2FsbEZ1bmMoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnByZXBhcmVUb3BOb2RlLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzBdLmFjdGl2ZSA9IHRydWVcclxuICAgICAgICB9KSwgY2MuZGVsYXlUaW1lKDAuNCksIGNjLmNhbGxGdW5jKCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5wcmVwYXJlVG9wTm9kZS5jaGlsZHJlblswXS5jaGlsZHJlblsxXS5hY3RpdmUgPSB0cnVlXHJcbiAgICAgICAgfSksIGNjLmRlbGF5VGltZSgwLjQpLCBjYy5jYWxsRnVuYygoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucHJlcGFyZVRvcE5vZGUuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMl0uYWN0aXZlID0gdHJ1ZVxyXG4gICAgICAgIH0pLCBjYy5kZWxheVRpbWUoMC40KSwgY2MuY2FsbEZ1bmMoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnByZXBhcmVUb3BOb2RlLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzBdLmFjdGl2ZSA9IGZhbHNlXHJcbiAgICAgICAgICAgIHRoaXMucHJlcGFyZVRvcE5vZGUuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMV0uYWN0aXZlID0gZmFsc2VcclxuICAgICAgICAgICAgdGhpcy5wcmVwYXJlVG9wTm9kZS5jaGlsZHJlblswXS5jaGlsZHJlblsyXS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgIH0pLCBjYy5kZWxheVRpbWUoMC40KSkucmVwZWF0Rm9yZXZlcigpKVxyXG4gICAgICAgIHRoaXMuX3RpbWVDb3VudERvd24gPSAyMFxyXG5cclxuICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLmdsb2JhbERhdGEuaW5HYW1lS2lsbE51bS5wdXNoKHtcclxuICAgICAgICAgICAgX2tpbGxOdW06IDAsXHJcbiAgICAgICAgICAgIF9iZWxvbmdOYW1lOiBHYW1lQXBwLmRhdGFNYW5hZ2VyLnVzZXJEYXRhLnBsYXllck5hbWVcclxuICAgICAgICB9KVxyXG4gICAgICAgIHRoaXMudXBkYXRlU291bmRCdG5TaG93KClcclxuICAgIH0sXHJcbiAgICBvbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgR2FtZUFwcC5ldmVudE1hbmFnZXIucmVtb3ZlTGlzdGVuZXIoRXZlbnROYW1lcy5FVkVOVF9VUERBVEVfQU1PX1NIT1cpXHJcbiAgICAgICAgR2FtZUFwcC5ldmVudE1hbmFnZXIucmVtb3ZlTGlzdGVuZXIoRXZlbnROYW1lcy5FVkVOVF9TSE9XX0dVTl9VSSlcclxuICAgICAgICBHYW1lQXBwLmV2ZW50TWFuYWdlci5yZW1vdmVMaXN0ZW5lcihFdmVudE5hbWVzLkVWRU5UX1NIT1dfUkVMT0FEX1VJKVxyXG4gICAgICAgIEdhbWVBcHAuZXZlbnRNYW5hZ2VyLnJlbW92ZUxpc3RlbmVyKEV2ZW50TmFtZXMuRVZFTlRfU0hPV19BTExST0xFTlVNX1VJKVxyXG5cclxuICAgIH0sXHJcbiAgICB1cGRhdGUoZHQpIHtcclxuICAgICAgICB0aGlzLl9zaG9vdFRpbWVyIC09IGR0XHJcbiAgICAgICAgaWYgKHRoaXMuX3Nob290RmxhZyAmJiB0aGlzLl9zaG9vdFRpbWVyIDwgMCAmJiAhdGhpcy5fcmVsb2FkRmxhZykge1xyXG4gICAgICAgICAgICB0aGlzLl9zaG9vdFRpbWVyID0gR2FtZUFwcC5kYXRhTWFuYWdlci5nbG9iYWxEYXRhLnNob290SW50ZXJ2YWxcclxuICAgICAgICAgICAgdGhpcy5zaG9vdCgpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLl9yZWxvYWRGbGFnKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3JlbG9hZFRpbWVyIC09IGR0XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9yZWxvYWRGbGFnICYmIHRoaXMuX3JlbG9hZFRpbWVyIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcmVsb2FkRmxhZyA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLnJlbG9hZEFtbygpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuX3RpbWVDb3VudERvd24gLT0gZHRcclxuICAgICAgICBpZiAodGhpcy5fdGltZUNvdW50RG93biA8IDYpIHtcclxuICAgICAgICAgICAgdGhpcy5wcmVwYXJlVG9wTm9kZS5jaGlsZHJlblswXS5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgICAgICB0aGlzLnByZXBhcmVUb3BOb2RlLmNoaWxkcmVuWzFdLmFjdGl2ZSA9IHRydWVcclxuICAgICAgICAgICAgdGhpcy5wcmVwYXJlVG9wTm9kZS5jaGlsZHJlblsyXS5hY3RpdmUgPSB0cnVlXHJcbiAgICAgICAgICAgIHRoaXMuY291bnREb3duQW5pbSgpXHJcbiAgICAgICAgICAgIHRoaXMucHJlcGFyZVRvcE5vZGUuY2hpbGRyZW5bMl0uZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSkuc3ByaXRlRnJhbWUgPSB0aGlzLmNvdW50RG93blNwR3JvdXBbTWF0aC5mbG9vcih0aGlzLl90aW1lQ291bnREb3duIC0gMSldXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChNYXRoLmZsb29yKHRoaXMuX3RpbWVDb3VudERvd24pIDw9IDApIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLl9vbmNlRXhlY3V0ZSkgcmV0dXJuXHJcbiAgICAgICAgICAgIHRoaXMuX29uY2VFeGVjdXRlID0gZmFsc2VcclxuICAgICAgICAgICAgR2FtZUFwcC51aU1hbmFnZXIuc2hvd1BvcHVwKCdHaWZ0UG9wdXAnLCAobm9kZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgbm9kZS5nZXRDb21wb25lbnQoXCJHaWZ0UG9wdXBcIikuaW5pdChcIkdhbWVVSVwiLCAyKVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgc2hvd1BsYW5lVUkoX3NwZWVkVXApIHtcclxuICAgICAgICBHYW1lQXBwLnVpTWFuYWdlci5zaG93VUkoJ1BsYW5lVUknLCAobm9kZSkgPT4ge1xyXG4gICAgICAgICAgICBub2RlLmdldENvbXBvbmVudCgnUGxhbmVVSScpLmluaXQoX3NwZWVkVXApXHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBjb3VudERvd25BbmltKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9vbmNlQ291bnREb3duQW5pbSkgcmV0dXJuXHJcbiAgICAgICAgdGhpcy5fb25jZUNvdW50RG93bkFuaW0gPSB0cnVlXHJcbiAgICAgICAgY2MubG9nKFwi5pKt5pS+5LqGXCIpXHJcbiAgICAgICAgR2FtZUFwcC5hdWRpb01hbmFnZXIucGxheUVmZmVjdCgnd2FpdFNjZW5lQ3V0RG93bicpXHJcbiAgICAgICAgdmFyIHNlcSA9IGNjLnNlcXVlbmNlKGNjLnNjYWxlVG8oMC4yLCAxLjUpLCBjYy5zY2FsZVRvKDAuMywgMSksIGNjLmRlbGF5VGltZSgwLjUpLCBjYy5jYWxsRnVuYygoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX29uY2VDb3VudERvd25BbmltID0gZmFsc2VcclxuICAgICAgICB9KSlcclxuICAgICAgICB0aGlzLnByZXBhcmVUb3BOb2RlLmNoaWxkcmVuWzJdLnJ1bkFjdGlvbihzZXEpXHJcbiAgICB9LFxyXG4gICAgb25Ub3VjaEJlZ2luKGV2ZW50KSB7XHJcbiAgICAgICAgdGhpcy5fc2hvb3RGbGFnID0gdHJ1ZVxyXG5cclxuICAgIH0sXHJcbiAgICBvblRvdWNoTGVhdmUoZXZlbnQpIHtcclxuICAgICAgICB0aGlzLl9zaG9vdEZsYWcgPSBmYWxzZVxyXG4gICAgICAgIEdhbWVBcHAuZXZlbnRNYW5hZ2VyLmVtaXQoRXZlbnROYW1lcy5FVkVOVF9BSU0sIGZhbHNlKVxyXG4gICAgfSxcclxuICAgIHNob290KCkge1xyXG4gICAgICAgIEdhbWVBcHAuZXZlbnRNYW5hZ2VyLmVtaXQoRXZlbnROYW1lcy5FVkVOVF9BSU0sIHRydWUpXHJcbiAgICAgICAgR2FtZUFwcC5ldmVudE1hbmFnZXIuZW1pdChFdmVudE5hbWVzLkVWRU5UX1BMQVlFUl9TSE9PVClcclxuICAgIH0sXHJcbiAgICB1cGRhdGVBbW9TaG93KCkge1xyXG4gICAgICAgIHRoaXMuYW1vVUkuc3RyaW5nID0gR2FtZUFwcC5kYXRhTWFuYWdlci5nbG9iYWxEYXRhLmN1ckFtb051bVxyXG4gICAgICAgIEdhbWVBcHAuZXZlbnRNYW5hZ2VyLmVtaXQoRXZlbnROYW1lcy5FVkVOVF9VUERBVEVfVE9QQkFSX1NIT1cpXHJcbiAgICB9LFxyXG4gICAgdXBkYXRlR3VuVUlTaG93KGV2ZW50LCBfZ3VuRGF0YSkge1xyXG4gICAgICAgIGlmIChfZ3VuRGF0YSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhfZ3VuRGF0YSlcclxuICAgICAgICAgICAgdGhpcy53ZWFwb25CdG5Ob2RlLmdldENvbXBvbmVudChjYy5TcHJpdGUpLnNwcml0ZUZyYW1lID0gR2FtZUFwcC51aU1hbmFnZXIuY29tbW9uQXRsYXMuZ2V0U3ByaXRlRnJhbWUoXCJ1aV93ZWFwb25fXCIgKyBfZ3VuRGF0YS53ZWFwb25pZClcclxuICAgICAgICAgICAgdGhpcy53ZWFwb25CdG5Ob2RlLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzBdLmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nID0gX2d1bkRhdGEubmFtZVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLndlYXBvbkJ0bk5vZGUuYWN0aXZlID0gZXZlbnRcclxuICAgICAgICBpZiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgdGhpcy53ZWFwb25CdG5Ob2RlLnNjYWxlWCA9IDBcclxuICAgICAgICAgICAgdGhpcy53ZWFwb25CdG5Ob2RlLnNjYWxlWSA9IDBcclxuICAgICAgICAgICAgdGhpcy53ZWFwb25CdG5Ob2RlLnJ1bkFjdGlvbihjYy5zY2FsZVRvKDAuMywgMSkuZWFzaW5nKGNjLmVhc2VCYWNrT3V0KCkpKVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICB1cGRhdGVSZWxvYWRVSVNob3coZXZlbnQpIHtcclxuICAgICAgICB0aGlzLnJlbG9hZEJ0bk5vZGUuYWN0aXZlID0gZXZlbnRcclxuICAgIH0sXHJcbiAgICB1cGRhdGVBbGxSb2xlTnVtVUlTaG93KCkge1xyXG4gICAgICAgIHRoaXMuYWxsUm9sZU51bVVJLnN0cmluZyA9IEdhbWVBcHAuZGF0YU1hbmFnZXIuZ2xvYmFsRGF0YS5hbGxSb2xlQXJyLmxlbmd0aFxyXG4gICAgfSxcclxuICAgIHJlbG9hZEJ0bkNsaWNrKCkge1xyXG4gICAgICAgIEdhbWVBcHAuYXVkaW9NYW5hZ2VyLnBsYXlFZmZlY3QoJ2NsaWNrJylcclxuICAgICAgICBpZiAodGhpcy5fcmVsb2FkRmxhZykgcmV0dXJuO1xyXG4gICAgICAgIHRoaXMuX3JlbG9hZFRpbWVyID0gR2FtZUFwcC5kYXRhTWFuYWdlci5nbG9iYWxEYXRhLnJlbG9hZEludGVydmFsXHJcbiAgICAgICAgdGhpcy5fcmVsb2FkRmxhZyA9IHRydWVcclxuICAgICAgICBHYW1lQXBwLmV2ZW50TWFuYWdlci5lbWl0KEV2ZW50TmFtZXMuRVZFTlRfUExBWUVSX1JFTE9BRClcclxuICAgIH0sXHJcbiAgICB3ZWFwb25CdG5DbGljaygpIHtcclxuICAgICAgICBHYW1lQXBwLmF1ZGlvTWFuYWdlci5wbGF5RWZmZWN0KCdjbGljaycpXHJcbiAgICAgICAgR2FtZUFwcC5ldmVudE1hbmFnZXIuZW1pdChFdmVudE5hbWVzLkVWRU5UX1BJQ0tVUF9XRUFQT04pXHJcbiAgICB9LFxyXG4gICAgYmFja0J0bkNsaWNrKCkge1xyXG4gICAgICAgIEdhbWVBcHAuYXVkaW9NYW5hZ2VyLnBsYXlFZmZlY3QoJ2NsaWNrJylcclxuICAgICAgICBHYW1lQXBwLnVpTWFuYWdlci5zaG93VUkoJ0xvZ2luVUknKVxyXG4gICAgfSxcclxuICAgIHNvdW5kQnRuQ2xpY2soKSB7XHJcbiAgICAgICAgR2FtZUFwcC5hdWRpb01hbmFnZXIucGxheUVmZmVjdCgnY2xpY2snKVxyXG4gICAgICAgIHZhciBvbm9mZiA9ICFHYW1lQXBwLmF1ZGlvTWFuYWdlci5fZWZmZWN0T25cclxuICAgICAgICBHYW1lQXBwLmF1ZGlvTWFuYWdlci5zZXRFZmZlY3Qob25vZmYpXHJcbiAgICAgICAgLy8gR2FtZUFwcC5hdWRpb01hbmFnZXIuc2V0RWZmZWN0KG9ub2ZmKVxyXG4gICAgICAgIHRoaXMudXBkYXRlU291bmRCdG5TaG93KClcclxuICAgIH0sXHJcbiAgICB1cGRhdGVTb3VuZEJ0blNob3coKSB7XHJcbiAgICAgICAgdGhpcy5zb3VuZE5vZGUuY2hpbGRyZW5bMF0uYWN0aXZlID0gR2FtZUFwcC5hdWRpb01hbmFnZXIuX2VmZmVjdE9uXHJcbiAgICAgICAgdGhpcy5zb3VuZE5vZGUuY2hpbGRyZW5bMV0uYWN0aXZlID0gIUdhbWVBcHAuYXVkaW9NYW5hZ2VyLl9lZmZlY3RPblxyXG4gICAgfSxcclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Tools.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '22582a+jCBHjZflQ11fhZCr', 'Tools');
// scripts/Tools.js

"use strict";

window.Tools = {
  addClickEvent: function addClickEvent(node, target, component, handler, customEventData) {
    // console.log(component + ":" + handler);
    var eventHandler = new cc.Component.EventHandler();
    eventHandler.target = target;
    eventHandler.component = component;
    eventHandler.handler = handler;

    if (customEventData) {
      eventHandler.customEventData = customEventData;
    }

    node.getComponent(cc.Button).clickEvents = [];
    node.getComponent(cc.Button).clickEvents.push(eventHandler);
  },
  //生成从minNum到maxNum的随机数(包含上限)
  randomNum: function randomNum(minNum, maxNum, _float) {
    if (_float) {
      return Math.random() * (maxNum - minNum + 1) + minNum;
    }

    return Math.floor(Math.random() * (maxNum - minNum + 1) + minNum);
  },
  //从数组arr内获取随机1个元素(可重复)
  getRandomElement: function getRandomElement(arr) {
    var num = arr.length;

    if (num > 0) {
      var i = Math.floor(Math.random() * num);
      if (i == num) i = num - 1;
      return arr[i];
    } else return null;
  },
  //获取数组arr内随机amount个元素且不会重复(返回对象新增了所有随机元素的下标数组)
  getRandomAmountElementUnRepeat: function getRandomAmountElementUnRepeat(arr, amount) {
    var arrLength = arr.length;

    if (amount >= arrLength) {
      var desArr = {
        nodeArr: arr,
        indexArr: []
      };

      for (var i = 0; i < arr.length; i++) {
        desArr.indexArr.push(i);
      }

      return desArr;
    } else if (amount <= 0) {
      return null;
    } else {
      //这里对于此项目做了特化处理
      var desArr = {
        nodeArr: [],
        indexArr: []
      };
      var tempArr = [];
      var temp = null;

      for (var i = 0; i < amount; i++) {
        do {
          temp = Math.floor(Math.random() * arrLength);
        } while (tempArr.indexOf(temp) > -1);

        tempArr.push(temp);
        desArr.nodeArr.push(arr[temp]);
        desArr.indexArr.push(temp);
      }

      return desArr;
    }
  },
  isCrit: function isCrit(_num) {
    var arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
    var result = this.getRandomAmountElementUnRepeat(arr, _num);

    if (result == null) {
      return false;
    } else {
      if (result.nodeArr.indexOf(7) != -1) {
        return true;
      } else {
        return false;
      }
    }
  },
  getIndex: function getIndex(_arr, _obj) {
    var len = _arr.length;

    for (var i = 0; i < len; i++) {
      if (_arr[i] == _obj) {
        return parseInt(i);
      }
    }

    return -1;
  },
  removeArray: function removeArray(_arr, _obj) {
    var length = _arr.length;

    for (var i = 0; i < length; i++) {
      if (_arr[i] == _obj) {
        if (i == 0) {
          _arr.shift(); //删除并返回数组的第一个元素


          return _arr;
        } else if (i == length - 1) {
          _arr.pop(); //删除并返回数组的最后一个元素


          return _arr;
        } else {
          _arr.splice(i, 1); //删除下标为i的元素


          return _arr;
        }
      }
    }
  },
  /// <summary>
  /// 在圆心为point，半径为radius的圆内，产生一个半径为radius_inner的圆的圆心
  /// </summary>
  /// <param name="point">外圆圆心</param>
  /// <param name="radius_outer">外圆半径</param>
  /// <param name="radius_inner">内圆半径</param>
  /// <returns>内圆圆心</returns>
  pointOfRandom: function pointOfRandom(point, radius_outer, radius_inner) {
    var x = Tools.randomNum(Math.floor(point.x - (radius_outer - radius_inner)), Math.floor(point.x + (radius_outer - radius_inner)));
    var y = Tools.randomNum(Math.floor(point.y - (radius_outer - radius_inner)), Math.floor(point.y + (radius_outer - radius_inner)));

    while (!this.isInRegion(x - point.x, y - point.y, radius_outer - radius_inner)) {
      x = Tools.randomNum(Math.floor(point.x - (radius_outer - radius_inner)), Math.floor(point.x + (radius_outer - radius_inner)));
      y = Tools.randomNum(Math.floor(point.y - (radius_outer - radius_inner)), Math.floor(point.y + (radius_outer - radius_inner)));
    }

    var p = cc.v2(x, y);
    return p;
  },
  /// <param name="x_off">与大圆圆心的x方向偏移量</param>
  /// <param name="y_off">与大圆圆心的y方向偏移量</param>
  /// <param name="distance">大圆与小圆半径的差</param>
  /// <returns>判断点是否在范围内</returns>
  isInRegion: function isInRegion(x_off, y_off, distance) {
    if (x_off * x_off + y_off * y_off <= distance * distance) {
      return true;
    }

    return false;
  },
  /// <summary>
  /// 判断两个圆是否重合，或者是相内切
  /// </summary>
  /// <param name="p_outer">外圆圆心</param>
  /// <param name="r_outer">外圆半径</param>
  /// <param name="p_inner">内圆圆心</param>
  /// <param name="r_inner">内圆半径</param>
  /// <returns>是否相内切</returns>
  isIntersect: function isIntersect(p_outer, r_outer, p_inner, r_inner) {
    //判定条件：两圆心的距离 + r_inner = r_outer
    var distance = parseFloat(Math.sqrt((p_outer.x - p_inner.x) * (p_outer.x - p_inner.x) + (p_outer.y - p_inner.y) * (p_outer.y - p_inner.y)));

    if (distance + r_inner >= r_outer) {
      return true;
    }

    return false;
  },
  scaleUpAndDowm: function scaleUpAndDowm(target, isShining, light) {
    target.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(0.3, 1.1).easing(cc.easeIn(2)), cc.scaleTo(0.6, 0.9).easing(cc.easeIn(2)), cc.scaleTo(0.6, 1.1).easing(cc.easeIn(2)), cc.scaleTo(0.6, 0.9).easing(cc.easeIn(2)))));

    if (isShining) {
      light.runAction(cc.repeatForever(cc.sequence(cc.fadeIn(0.3).easing(cc.easeIn(2)), cc.fadeOut(0.6).easing(cc.easeIn(2)), cc.fadeIn(0.6).easing(cc.easeIn(2)), cc.fadeOut(0.6).easing(cc.easeIn(2)))));
    }
  },
  shake: function shake(target) {
    target.runAction(cc.repeatForever(cc.sequence(cc.rotateTo(0.1, 5).easing(cc.easeIn(2)), cc.rotateTo(0.2, -5).easing(cc.easeIn(2)), cc.rotateTo(0.2, 5).easing(cc.easeIn(2)), cc.rotateTo(0.1, 0).easing(cc.easeIn(2)), cc.delayTime(0.5))));
  },
  // 0   , 0.2 , 0.2 , 0.6
  //     0.2, 0.2 , 0.2 , 0.4
  //     0.4, 0.2 , 0.2 , 0.2
  //     0.6, 0.2 , 0.2 , 0
  jumpOneByOne: function jumpOneByOne(target) {
    var nodeNum = target.childrenCount;

    for (var i = 0; i < nodeNum; i++) {
      target.children[i].runAction(cc.sequence(cc.delayTime(i * 0.2), cc.scaleTo(0.2, 1.3).easing(cc.easeBackOut()), cc.scaleTo(0.2, 1), cc.delayTime((nodeNum - 1 - i) * 0.2 + 1)).repeatForever());
    }
  },
  // 本地时间戳->2018/8/8
  toDateFormat: function toDateFormat() {
    var date = new Date();
    date = new Date(date.getTime());
    return {
      year: date.getFullYear(),
      month: date.getMonth() + 1,
      day: date.getDate()
    };
  },
  // 秒->08:08:08
  toTimeString2: function toTimeString2(s) {
    if (s <= 0) {
      return "00:00:00";
    }

    s = Math.floor(s);
    var hour = Math.floor(s / (60 * 60));
    s -= hour * (60 * 60);
    var minute = Math.floor(s / 60);
    s -= minute * 60;
    var ret = '';

    if (hour > 0) {
      ret += hour < 10 ? '0' + hour : hour;
    } else {
      ret += '00';
    }

    ret += ':';

    if (minute > 0) {
      ret += minute < 10 ? '0' + minute : minute;
    } else {
      ret += '00';
    }

    ret += ':';

    if (s > 0) {
      ret += s < 10 ? '0' + s : s;
    } else {
      ret += '00';
    } //return ret;


    return {
      hour: hour,
      minute: minute,
      s: s
    };
  },
  // 秒->08:08:08
  toTimeString: function toTimeString(s) {
    if (s <= 0) {
      return "00:00";
    }

    s = Math.floor(s);
    var hour = Math.floor(s / (60 * 60));
    s -= hour * (60 * 60);
    var minute = Math.floor(s / 60);
    s -= minute * 60;
    var ret = ''; // if (hour > 0) {
    //     ret += hour < 10 ? '0' + hour : hour
    // } else {
    //     ret += '00'
    // }
    // ret += ':'

    if (minute > 0) {
      ret += minute < 10 ? '0' + minute : minute;
    } else {
      ret += '00';
    }

    ret += ':';

    if (s > 0) {
      ret += s < 10 ? '0' + s : s;
    } else {
      ret += '00';
    }

    return ret; // return {
    //     hour: hour,
    //     minute: minute,
    //     s: s,
    // }
  },
  addNegativeCaculation: function addNegativeCaculation(isNegative, num, rate, strName) {
    return isNegative ? "-" + this.calculation(num, rate, strName) : this.calculation(num, rate, strName);
  },
  // calculation number
  calculation: function calculation(num, rate, strName) {
    var n1 = Math.floor(num / rate);
    var n2 = Math.floor(num % rate / rate * 10);

    if (n2 === 0) {
      return n1 + strName;
    } else {
      return n1 + "." + n2 + strName;
    }
  }
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/SkinUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8453a9XdO5IP5zIjb1wltqu', 'SkinUI');
// scripts/ui/SkinUI.js

"use strict";

var Utils = require("Utils");

cc.Class({
  "extends": cc.Component,
  properties: {
    scrollView: cc.ScrollView,
    itemPrefab: cc.Prefab,
    coinUI: cc.Label,
    onceClick: {
      "default": true,
      visible: false
    }
  },
  onLoad: function onLoad() {
    GameApp.eventManager.on(EventNames.EVENT_UPDATE_COIN_SHOW, this.updateCoinShow.bind(this));
    this.initData();
    this.updateCoinShow();
  },
  onDestroy: function onDestroy() {
    GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_COIN_SHOW);
  },
  initData: function initData() {
    var _this = this;

    this.scrollView.content.removeAllChildren();
    var i = 0;
    GameApp.dataManager.jsonData.SkinsData.forEach(function (skinData) {
      _this.scheduleOnce(function () {
        var item = cc.instantiate(_this.itemPrefab);

        _this.scrollView.content.addChild(item);

        item.getComponent("SkinItem").init(skinData);
      }, i += 0.05);
    });
  },
  updateCoinShow: function updateCoinShow() {
    this.coinUI.string = GameApp.dataManager.userData.coinNum;
  },
  coinBtnClick: function coinBtnClick() {
    if (window.wx) {
      GameApp.uiManager.showToast("暂未开放！");
      return;
    }

    if (!this.onceClick) return;
    this.onceClick = false;
    GameApp.audioManager.playEffect('click');
    var self = this;

    if (window.tt) {
      Utils.addVideo("addVideo", function () {
        //看完了
        self.onceClick = true;
        GameApp.uiManager.showToast("获得500金币");
        GameApp.dataManager.addCoin(500);
        self.updateCoinShow();
      }, function (_info) {
        //没看完
        self.onceClick = true;
        _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast("未看完视频！");
      });
    } else {
      self.onceClick = true;
      GameApp.uiManager.showToast("非真机,获得500金币");
      GameApp.dataManager.addCoin(500);
      self.updateCoinShow();
    }
  },
  backBtnClick: function backBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.showUI('LoginUI');
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlcXFNraW5VSS5qcyJdLCJuYW1lcyI6WyJVdGlscyIsInJlcXVpcmUiLCJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsInNjcm9sbFZpZXciLCJTY3JvbGxWaWV3IiwiaXRlbVByZWZhYiIsIlByZWZhYiIsImNvaW5VSSIsIkxhYmVsIiwib25jZUNsaWNrIiwidmlzaWJsZSIsIm9uTG9hZCIsIkdhbWVBcHAiLCJldmVudE1hbmFnZXIiLCJvbiIsIkV2ZW50TmFtZXMiLCJFVkVOVF9VUERBVEVfQ09JTl9TSE9XIiwidXBkYXRlQ29pblNob3ciLCJiaW5kIiwiaW5pdERhdGEiLCJvbkRlc3Ryb3kiLCJyZW1vdmVMaXN0ZW5lciIsImNvbnRlbnQiLCJyZW1vdmVBbGxDaGlsZHJlbiIsImkiLCJkYXRhTWFuYWdlciIsImpzb25EYXRhIiwiU2tpbnNEYXRhIiwiZm9yRWFjaCIsInNraW5EYXRhIiwic2NoZWR1bGVPbmNlIiwiaXRlbSIsImluc3RhbnRpYXRlIiwiYWRkQ2hpbGQiLCJnZXRDb21wb25lbnQiLCJpbml0Iiwic3RyaW5nIiwidXNlckRhdGEiLCJjb2luTnVtIiwiY29pbkJ0bkNsaWNrIiwid2luZG93Iiwid3giLCJ1aU1hbmFnZXIiLCJzaG93VG9hc3QiLCJhdWRpb01hbmFnZXIiLCJwbGF5RWZmZWN0Iiwic2VsZiIsInR0IiwiYWRkVmlkZW8iLCJhZGRDb2luIiwiX2luZm8iLCJiYWNrQnRuQ2xpY2siLCJzaG93VUkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQUMsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLFVBQVUsRUFBRUosRUFBRSxDQUFDSyxVQURQO0FBRVJDLElBQUFBLFVBQVUsRUFBRU4sRUFBRSxDQUFDTyxNQUZQO0FBR1JDLElBQUFBLE1BQU0sRUFBRVIsRUFBRSxDQUFDUyxLQUhIO0FBSVJDLElBQUFBLFNBQVMsRUFBRTtBQUNQLGlCQUFTLElBREY7QUFFUEMsTUFBQUEsT0FBTyxFQUFFO0FBRkY7QUFKSCxHQUhQO0FBY0xDLEVBQUFBLE1BZEssb0JBY0k7QUFDTEMsSUFBQUEsT0FBTyxDQUFDQyxZQUFSLENBQXFCQyxFQUFyQixDQUF3QkMsVUFBVSxDQUFDQyxzQkFBbkMsRUFBMkQsS0FBS0MsY0FBTCxDQUFvQkMsSUFBcEIsQ0FBeUIsSUFBekIsQ0FBM0Q7QUFDQSxTQUFLQyxRQUFMO0FBQ0EsU0FBS0YsY0FBTDtBQUVILEdBbkJJO0FBb0JMRyxFQUFBQSxTQXBCSyx1QkFvQk87QUFDUlIsSUFBQUEsT0FBTyxDQUFDQyxZQUFSLENBQXFCUSxjQUFyQixDQUFvQ04sVUFBVSxDQUFDQyxzQkFBL0M7QUFDSCxHQXRCSTtBQXVCTEcsRUFBQUEsUUF2Qkssc0JBdUJNO0FBQUE7O0FBQ1AsU0FBS2hCLFVBQUwsQ0FBZ0JtQixPQUFoQixDQUF3QkMsaUJBQXhCO0FBQ0EsUUFBSUMsQ0FBQyxHQUFHLENBQVI7QUFDQVosSUFBQUEsT0FBTyxDQUFDYSxXQUFSLENBQW9CQyxRQUFwQixDQUE2QkMsU0FBN0IsQ0FBdUNDLE9BQXZDLENBQStDLFVBQUFDLFFBQVEsRUFBSTtBQUN2RCxNQUFBLEtBQUksQ0FBQ0MsWUFBTCxDQUFrQixZQUFNO0FBQ3BCLFlBQUlDLElBQUksR0FBR2hDLEVBQUUsQ0FBQ2lDLFdBQUgsQ0FBZSxLQUFJLENBQUMzQixVQUFwQixDQUFYOztBQUNBLFFBQUEsS0FBSSxDQUFDRixVQUFMLENBQWdCbUIsT0FBaEIsQ0FBd0JXLFFBQXhCLENBQWlDRixJQUFqQzs7QUFDQUEsUUFBQUEsSUFBSSxDQUFDRyxZQUFMLENBQWtCLFVBQWxCLEVBQThCQyxJQUE5QixDQUFtQ04sUUFBbkM7QUFDSCxPQUpELEVBSUdMLENBQUMsSUFBSSxJQUpSO0FBS0gsS0FORDtBQU9ILEdBakNJO0FBa0NMUCxFQUFBQSxjQWxDSyw0QkFrQ1k7QUFDYixTQUFLVixNQUFMLENBQVk2QixNQUFaLEdBQXFCeEIsT0FBTyxDQUFDYSxXQUFSLENBQW9CWSxRQUFwQixDQUE2QkMsT0FBbEQ7QUFDSCxHQXBDSTtBQXFDTEMsRUFBQUEsWUFyQ0ssMEJBcUNVO0FBQ1gsUUFBSUMsTUFBTSxDQUFDQyxFQUFYLEVBQWU7QUFDWDdCLE1BQUFBLE9BQU8sQ0FBQzhCLFNBQVIsQ0FBa0JDLFNBQWxCLENBQTRCLE9BQTVCO0FBQ0E7QUFDSDs7QUFDRCxRQUFJLENBQUMsS0FBS2xDLFNBQVYsRUFBcUI7QUFDckIsU0FBS0EsU0FBTCxHQUFpQixLQUFqQjtBQUNBRyxJQUFBQSxPQUFPLENBQUNnQyxZQUFSLENBQXFCQyxVQUFyQixDQUFnQyxPQUFoQztBQUNBLFFBQUlDLElBQUksR0FBRyxJQUFYOztBQUVBLFFBQUlOLE1BQU0sQ0FBQ08sRUFBWCxFQUFlO0FBQ1hsRCxNQUFBQSxLQUFLLENBQUNtRCxRQUFOLENBQWUsVUFBZixFQUEyQixZQUFZO0FBQUU7QUFDckNGLFFBQUFBLElBQUksQ0FBQ3JDLFNBQUwsR0FBaUIsSUFBakI7QUFDQUcsUUFBQUEsT0FBTyxDQUFDOEIsU0FBUixDQUFrQkMsU0FBbEIsQ0FBNEIsU0FBNUI7QUFDQS9CLFFBQUFBLE9BQU8sQ0FBQ2EsV0FBUixDQUFvQndCLE9BQXBCLENBQTRCLEdBQTVCO0FBQ0FILFFBQUFBLElBQUksQ0FBQzdCLGNBQUw7QUFDSCxPQUxELEVBS0csVUFBVWlDLEtBQVYsRUFBaUI7QUFBRTtBQUNsQkosUUFBQUEsSUFBSSxDQUFDckMsU0FBTCxHQUFpQixJQUFqQjtBQUNBeUMsUUFBQUEsS0FBSyxHQUFHdEMsT0FBTyxDQUFDOEIsU0FBUixDQUFrQkMsU0FBbEIsQ0FBNEJPLEtBQTVCLENBQUgsR0FBd0N0QyxPQUFPLENBQUM4QixTQUFSLENBQWtCQyxTQUFsQixDQUE0QixRQUE1QixDQUE3QztBQUNILE9BUkQ7QUFTSCxLQVZELE1BVU87QUFDSEcsTUFBQUEsSUFBSSxDQUFDckMsU0FBTCxHQUFpQixJQUFqQjtBQUNBRyxNQUFBQSxPQUFPLENBQUM4QixTQUFSLENBQWtCQyxTQUFsQixDQUE0QixhQUE1QjtBQUNBL0IsTUFBQUEsT0FBTyxDQUFDYSxXQUFSLENBQW9Cd0IsT0FBcEIsQ0FBNEIsR0FBNUI7QUFDQUgsTUFBQUEsSUFBSSxDQUFDN0IsY0FBTDtBQUNIO0FBRUosR0FoRUk7QUFpRUxrQyxFQUFBQSxZQWpFSywwQkFpRVU7QUFDWHZDLElBQUFBLE9BQU8sQ0FBQ2dDLFlBQVIsQ0FBcUJDLFVBQXJCLENBQWdDLE9BQWhDO0FBQ0FqQyxJQUFBQSxPQUFPLENBQUM4QixTQUFSLENBQWtCVSxNQUFsQixDQUF5QixTQUF6QjtBQUNIO0FBcEVJLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFV0aWxzID0gcmVxdWlyZShcIlV0aWxzXCIpXHJcblxyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIHNjcm9sbFZpZXc6IGNjLlNjcm9sbFZpZXcsXHJcbiAgICAgICAgaXRlbVByZWZhYjogY2MuUHJlZmFiLFxyXG4gICAgICAgIGNvaW5VSTogY2MuTGFiZWwsXHJcbiAgICAgICAgb25jZUNsaWNrOiB7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IHRydWUsXHJcbiAgICAgICAgICAgIHZpc2libGU6IGZhbHNlXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgb25Mb2FkKCkge1xyXG4gICAgICAgIEdhbWVBcHAuZXZlbnRNYW5hZ2VyLm9uKEV2ZW50TmFtZXMuRVZFTlRfVVBEQVRFX0NPSU5fU0hPVywgdGhpcy51cGRhdGVDb2luU2hvdy5iaW5kKHRoaXMpKVxyXG4gICAgICAgIHRoaXMuaW5pdERhdGEoKVxyXG4gICAgICAgIHRoaXMudXBkYXRlQ29pblNob3coKVxyXG5cclxuICAgIH0sXHJcbiAgICBvbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgR2FtZUFwcC5ldmVudE1hbmFnZXIucmVtb3ZlTGlzdGVuZXIoRXZlbnROYW1lcy5FVkVOVF9VUERBVEVfQ09JTl9TSE9XKVxyXG4gICAgfSxcclxuICAgIGluaXREYXRhKCkge1xyXG4gICAgICAgIHRoaXMuc2Nyb2xsVmlldy5jb250ZW50LnJlbW92ZUFsbENoaWxkcmVuKClcclxuICAgICAgICB2YXIgaSA9IDBcclxuICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLmpzb25EYXRhLlNraW5zRGF0YS5mb3JFYWNoKHNraW5EYXRhID0+IHtcclxuICAgICAgICAgICAgdGhpcy5zY2hlZHVsZU9uY2UoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSBjYy5pbnN0YW50aWF0ZSh0aGlzLml0ZW1QcmVmYWIpXHJcbiAgICAgICAgICAgICAgICB0aGlzLnNjcm9sbFZpZXcuY29udGVudC5hZGRDaGlsZChpdGVtKVxyXG4gICAgICAgICAgICAgICAgaXRlbS5nZXRDb21wb25lbnQoXCJTa2luSXRlbVwiKS5pbml0KHNraW5EYXRhKVxyXG4gICAgICAgICAgICB9LCBpICs9IDAuMDUpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgdXBkYXRlQ29pblNob3coKSB7XHJcbiAgICAgICAgdGhpcy5jb2luVUkuc3RyaW5nID0gR2FtZUFwcC5kYXRhTWFuYWdlci51c2VyRGF0YS5jb2luTnVtXHJcbiAgICB9LFxyXG4gICAgY29pbkJ0bkNsaWNrKCkge1xyXG4gICAgICAgIGlmICh3aW5kb3cud3gpIHtcclxuICAgICAgICAgICAgR2FtZUFwcC51aU1hbmFnZXIuc2hvd1RvYXN0KFwi5pqC5pyq5byA5pS+77yBXCIpXHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXRoaXMub25jZUNsaWNrKSByZXR1cm47XHJcbiAgICAgICAgdGhpcy5vbmNlQ2xpY2sgPSBmYWxzZVxyXG4gICAgICAgIEdhbWVBcHAuYXVkaW9NYW5hZ2VyLnBsYXlFZmZlY3QoJ2NsaWNrJylcclxuICAgICAgICB2YXIgc2VsZiA9IHRoaXNcclxuXHJcbiAgICAgICAgaWYgKHdpbmRvdy50dCkge1xyXG4gICAgICAgICAgICBVdGlscy5hZGRWaWRlbyhcImFkZFZpZGVvXCIsIGZ1bmN0aW9uICgpIHsgLy/nnIvlrozkuoZcclxuICAgICAgICAgICAgICAgIHNlbGYub25jZUNsaWNrID0gdHJ1ZVxyXG4gICAgICAgICAgICAgICAgR2FtZUFwcC51aU1hbmFnZXIuc2hvd1RvYXN0KFwi6I635b6XNTAw6YeR5biBXCIpXHJcbiAgICAgICAgICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLmFkZENvaW4oNTAwKVxyXG4gICAgICAgICAgICAgICAgc2VsZi51cGRhdGVDb2luU2hvdygpXHJcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uIChfaW5mbykgeyAvL+ayoeeci+WujFxyXG4gICAgICAgICAgICAgICAgc2VsZi5vbmNlQ2xpY2sgPSB0cnVlXHJcbiAgICAgICAgICAgICAgICBfaW5mbyA/IEdhbWVBcHAudWlNYW5hZ2VyLnNob3dUb2FzdChfaW5mbykgOiBHYW1lQXBwLnVpTWFuYWdlci5zaG93VG9hc3QoXCLmnKrnnIvlrozop4bpopHvvIFcIilcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzZWxmLm9uY2VDbGljayA9IHRydWVcclxuICAgICAgICAgICAgR2FtZUFwcC51aU1hbmFnZXIuc2hvd1RvYXN0KFwi6Z2e55yf5py6LOiOt+W+lzUwMOmHkeW4gVwiKVxyXG4gICAgICAgICAgICBHYW1lQXBwLmRhdGFNYW5hZ2VyLmFkZENvaW4oNTAwKVxyXG4gICAgICAgICAgICBzZWxmLnVwZGF0ZUNvaW5TaG93KClcclxuICAgICAgICB9XHJcblxyXG4gICAgfSxcclxuICAgIGJhY2tCdG5DbGljaygpIHtcclxuICAgICAgICBHYW1lQXBwLmF1ZGlvTWFuYWdlci5wbGF5RWZmZWN0KCdjbGljaycpXHJcbiAgICAgICAgR2FtZUFwcC51aU1hbmFnZXIuc2hvd1VJKCdMb2dpblVJJylcclxuICAgIH0sXHJcblxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/OpenBoxPopup.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9a84fG3r59NkL5igHRQlhjW', 'OpenBoxPopup');
// scripts/ui/OpenBoxPopup.js

"use strict";

var Utils = require("Utils");

cc.Class({
  "extends": cc.Component,
  properties: {
    boxAnim: sp.Skeleton,
    delayShowPanel: cc.Node,
    //children 0是图，1是字
    _itemType: 1,
    _itemNum: 0,
    _pieceIndex: 0,
    onceClick: {
      "default": true,
      visible: false
    }
  },
  onLoad: function onLoad() {},
  init: function init(_skinData, _type, _num, _pieceIndex) {
    this._itemType = _type;
    this._itemNum = _num;
    this._pieceIndex = _pieceIndex;

    switch (_type) {
      case 1:
        this.addCoin(_num);
        break;

      case 2:
        this.addPiece(_num, _pieceIndex);
        break;
    }

    this.initSkinShow(_skinData);
  },
  initSkinShow: function initSkinShow(_skinData) {
    var _this = this;

    this.boxAnim.skeletonData = _skinData;
    var arr = ['appear', 'big--small', 'open', 'open_await']; //, 'last_open_await'

    var i = 0;
    this.boxAnim.setAnimation(0, arr[i++], false);
    this.boxAnim.setCompleteListener(function () {
      if (i > arr.length - 1) return;
      var loop = i == arr.length - 1;

      if (i == arr.length - 2) {
        _this.node.runAction(cc.sequence(cc.delayTime(0.8), cc.callFunc(function () {
          _this.delayShowPanel.active = true;
          Tools.scaleUpAndDowm(_this.delayShowPanel.children[2]);
        })));
      }

      _this.boxAnim.setAnimation(0, arr[i++], loop);
    });
  },
  sureBtnClick: function sureBtnClick() {
    if (window.wx) {
      GameApp.uiManager.showToast("暂未开放！");
      return;
    }

    if (!this.onceClick) return;
    this.onceClick = false;
    GameApp.audioManager.playEffect('click');
    var self = this;

    if (window.tt) {
      Utils.addVideo("addVideo", function () {
        //看完了
        self.onceClick = true;
        GameApp.dataManager.addPlayedVideoNum();

        switch (self._itemType) {
          case 1:
            GameApp.dataManager.addCoin(self._itemNum);
            GameApp.uiManager.showToast("获得金币*" + self._itemNum * 2);
            break;

          case 2:
            GameApp.dataManager.addPieceNum(self._pieceIndex, self._itemNum);
            GameApp.uiManager.showToast("获得<color=#faf80d>" + GameApp.dataManager.getSkinDataById(self._pieceIndex).name + "</color> 碎片*" + self._itemNum * 2);
            break;
        }

        GameApp.uiManager.closePopup("OpenBoxPopup");
      }, function (_info) {
        //没看完
        self.onceClick = true;
        _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast("未看完视频！");
      });
    } else {
      self.onceClick = true;
      GameApp.dataManager.addPlayedVideoNum();

      switch (self._itemType) {
        case 1:
          GameApp.dataManager.addCoin(self._itemNum);
          GameApp.uiManager.showToast("获得金币*" + self._itemNum * 2);
          break;

        case 2:
          GameApp.dataManager.addPieceNum(self._pieceIndex, self._itemNum);
          GameApp.uiManager.showToast("获得<color=#faf80d>" + GameApp.dataManager.getSkinDataById(self._pieceIndex).name + "</color> 碎片*" + self._itemNum * 2);
          break;
      }

      GameApp.uiManager.closePopup("OpenBoxPopup");
    }
  },
  skipBtnClick: function skipBtnClick() {
    GameApp.audioManager.playEffect('click');
    var self = this;

    switch (self._itemType) {
      case 1:
        GameApp.uiManager.showToast("获得金币*" + self._itemNum);
        break;

      case 2:
        GameApp.uiManager.showToast("获得<color=#faf80d>" + GameApp.dataManager.getSkinDataById(self._pieceIndex).name + "</color> 碎片*" + self._itemNum);
        break;
    }

    GameApp.uiManager.closePopup("OpenBoxPopup");
  },
  addCoin: function addCoin(_num) {
    this.delayShowPanel.children[1].getComponent(cc.RichText).string = "金币*" + _num;
  },
  addPiece: function addPiece(_num, _pieceIndex) {
    this.setpieceIcon(_pieceIndex);
    this.delayShowPanel.children[1].getComponent(cc.RichText).string = "<color=#faf80d>" + GameApp.dataManager.getSkinDataById(_pieceIndex).name + "</color> 碎片*" + _num;
  },
  setpieceIcon: function setpieceIcon(id) {
    var self = this;
    cc.loader.loadRes("texture/skin_piece/card_p_" + id, cc.SpriteFrame, function (err, spriteFrame) {
      self.delayShowPanel.children[0].getComponent(cc.Sprite).spriteFrame = spriteFrame;
    });
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/RankUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6d7790HceZM3JqLL+gUKux9', 'RankUI');
// scripts/ui/RankUI.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    allPlayNumUI: cc.Label,
    winNumUI: cc.Label,
    top5NumUI: cc.Label,
    winRateUI: cc.Label,
    kdUI: cc.Label,
    avgRankUI: cc.Label,
    mostKillUI: cc.Label,
    avgLifeTimeUI: cc.Label
  },
  onLoad: function onLoad() {
    this.allPlayNumUI.string = GameApp.dataManager.userData.allPlayNum;
    this.winNumUI.string = GameApp.dataManager.userData.winNum;
    this.top5NumUI.string = GameApp.dataManager.userData.top5Num;
    this.winRateUI.string = GameApp.dataManager.userData.winRate * 100 + "%";
    this.kdUI.string = GameApp.dataManager.userData.kd;
    this.avgRankUI.string = GameApp.dataManager.userData.avgRank;
    this.mostKillUI.string = GameApp.dataManager.userData.mostKill;
    this.avgLifeTimeUI.string = Tools.toTimeString(GameApp.dataManager.userData.avgLifeTime);
  },
  backBtnClick: function backBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.showUI('LoginUI');
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlcXFJhbmtVSS5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsImFsbFBsYXlOdW1VSSIsIkxhYmVsIiwid2luTnVtVUkiLCJ0b3A1TnVtVUkiLCJ3aW5SYXRlVUkiLCJrZFVJIiwiYXZnUmFua1VJIiwibW9zdEtpbGxVSSIsImF2Z0xpZmVUaW1lVUkiLCJvbkxvYWQiLCJzdHJpbmciLCJHYW1lQXBwIiwiZGF0YU1hbmFnZXIiLCJ1c2VyRGF0YSIsImFsbFBsYXlOdW0iLCJ3aW5OdW0iLCJ0b3A1TnVtIiwid2luUmF0ZSIsImtkIiwiYXZnUmFuayIsIm1vc3RLaWxsIiwiVG9vbHMiLCJ0b1RpbWVTdHJpbmciLCJhdmdMaWZlVGltZSIsImJhY2tCdG5DbGljayIsImF1ZGlvTWFuYWdlciIsInBsYXlFZmZlY3QiLCJ1aU1hbmFnZXIiLCJzaG93VUkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0FBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQO0FBR0xDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQyxJQUFBQSxZQUFZLEVBQUVKLEVBQUUsQ0FBQ0ssS0FEVDtBQUVSQyxJQUFBQSxRQUFRLEVBQUVOLEVBQUUsQ0FBQ0ssS0FGTDtBQUdSRSxJQUFBQSxTQUFTLEVBQUVQLEVBQUUsQ0FBQ0ssS0FITjtBQUlSRyxJQUFBQSxTQUFTLEVBQUVSLEVBQUUsQ0FBQ0ssS0FKTjtBQUtSSSxJQUFBQSxJQUFJLEVBQUVULEVBQUUsQ0FBQ0ssS0FMRDtBQU1SSyxJQUFBQSxTQUFTLEVBQUVWLEVBQUUsQ0FBQ0ssS0FOTjtBQU9STSxJQUFBQSxVQUFVLEVBQUVYLEVBQUUsQ0FBQ0ssS0FQUDtBQVFSTyxJQUFBQSxhQUFhLEVBQUVaLEVBQUUsQ0FBQ0s7QUFSVixHQUhQO0FBZUxRLEVBQUFBLE1BZkssb0JBZUk7QUFDTCxTQUFLVCxZQUFMLENBQWtCVSxNQUFsQixHQUEyQkMsT0FBTyxDQUFDQyxXQUFSLENBQW9CQyxRQUFwQixDQUE2QkMsVUFBeEQ7QUFDQSxTQUFLWixRQUFMLENBQWNRLE1BQWQsR0FBdUJDLE9BQU8sQ0FBQ0MsV0FBUixDQUFvQkMsUUFBcEIsQ0FBNkJFLE1BQXBEO0FBQ0EsU0FBS1osU0FBTCxDQUFlTyxNQUFmLEdBQXdCQyxPQUFPLENBQUNDLFdBQVIsQ0FBb0JDLFFBQXBCLENBQTZCRyxPQUFyRDtBQUNBLFNBQUtaLFNBQUwsQ0FBZU0sTUFBZixHQUF3QkMsT0FBTyxDQUFDQyxXQUFSLENBQW9CQyxRQUFwQixDQUE2QkksT0FBN0IsR0FBdUMsR0FBdkMsR0FBNkMsR0FBckU7QUFDQSxTQUFLWixJQUFMLENBQVVLLE1BQVYsR0FBbUJDLE9BQU8sQ0FBQ0MsV0FBUixDQUFvQkMsUUFBcEIsQ0FBNkJLLEVBQWhEO0FBQ0EsU0FBS1osU0FBTCxDQUFlSSxNQUFmLEdBQXdCQyxPQUFPLENBQUNDLFdBQVIsQ0FBb0JDLFFBQXBCLENBQTZCTSxPQUFyRDtBQUNBLFNBQUtaLFVBQUwsQ0FBZ0JHLE1BQWhCLEdBQXlCQyxPQUFPLENBQUNDLFdBQVIsQ0FBb0JDLFFBQXBCLENBQTZCTyxRQUF0RDtBQUNBLFNBQUtaLGFBQUwsQ0FBbUJFLE1BQW5CLEdBQTRCVyxLQUFLLENBQUNDLFlBQU4sQ0FBbUJYLE9BQU8sQ0FBQ0MsV0FBUixDQUFvQkMsUUFBcEIsQ0FBNkJVLFdBQWhELENBQTVCO0FBQ0gsR0F4Qkk7QUF5QkxDLEVBQUFBLFlBekJLLDBCQXlCVTtBQUNYYixJQUFBQSxPQUFPLENBQUNjLFlBQVIsQ0FBcUJDLFVBQXJCLENBQWdDLE9BQWhDO0FBQ0FmLElBQUFBLE9BQU8sQ0FBQ2dCLFNBQVIsQ0FBa0JDLE1BQWxCLENBQXlCLFNBQXpCO0FBQ0g7QUE1QkksQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNjLkNsYXNzKHtcclxuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgYWxsUGxheU51bVVJOiBjYy5MYWJlbCxcclxuICAgICAgICB3aW5OdW1VSTogY2MuTGFiZWwsXHJcbiAgICAgICAgdG9wNU51bVVJOiBjYy5MYWJlbCxcclxuICAgICAgICB3aW5SYXRlVUk6IGNjLkxhYmVsLFxyXG4gICAgICAgIGtkVUk6IGNjLkxhYmVsLFxyXG4gICAgICAgIGF2Z1JhbmtVSTogY2MuTGFiZWwsXHJcbiAgICAgICAgbW9zdEtpbGxVSTogY2MuTGFiZWwsXHJcbiAgICAgICAgYXZnTGlmZVRpbWVVSTogY2MuTGFiZWxcclxuICAgIH0sXHJcblxyXG5cclxuICAgIG9uTG9hZCgpIHtcclxuICAgICAgICB0aGlzLmFsbFBsYXlOdW1VSS5zdHJpbmcgPSBHYW1lQXBwLmRhdGFNYW5hZ2VyLnVzZXJEYXRhLmFsbFBsYXlOdW1cclxuICAgICAgICB0aGlzLndpbk51bVVJLnN0cmluZyA9IEdhbWVBcHAuZGF0YU1hbmFnZXIudXNlckRhdGEud2luTnVtXHJcbiAgICAgICAgdGhpcy50b3A1TnVtVUkuc3RyaW5nID0gR2FtZUFwcC5kYXRhTWFuYWdlci51c2VyRGF0YS50b3A1TnVtXHJcbiAgICAgICAgdGhpcy53aW5SYXRlVUkuc3RyaW5nID0gR2FtZUFwcC5kYXRhTWFuYWdlci51c2VyRGF0YS53aW5SYXRlICogMTAwICsgXCIlXCJcclxuICAgICAgICB0aGlzLmtkVUkuc3RyaW5nID0gR2FtZUFwcC5kYXRhTWFuYWdlci51c2VyRGF0YS5rZFxyXG4gICAgICAgIHRoaXMuYXZnUmFua1VJLnN0cmluZyA9IEdhbWVBcHAuZGF0YU1hbmFnZXIudXNlckRhdGEuYXZnUmFua1xyXG4gICAgICAgIHRoaXMubW9zdEtpbGxVSS5zdHJpbmcgPSBHYW1lQXBwLmRhdGFNYW5hZ2VyLnVzZXJEYXRhLm1vc3RLaWxsXHJcbiAgICAgICAgdGhpcy5hdmdMaWZlVGltZVVJLnN0cmluZyA9IFRvb2xzLnRvVGltZVN0cmluZyhHYW1lQXBwLmRhdGFNYW5hZ2VyLnVzZXJEYXRhLmF2Z0xpZmVUaW1lKVxyXG4gICAgfSxcclxuICAgIGJhY2tCdG5DbGljaygpIHtcclxuICAgICAgICBHYW1lQXBwLmF1ZGlvTWFuYWdlci5wbGF5RWZmZWN0KCdjbGljaycpXHJcbiAgICAgICAgR2FtZUFwcC51aU1hbmFnZXIuc2hvd1VJKCdMb2dpblVJJylcclxuICAgIH0sXHJcblxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/SkinItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '400f7aj7KtIOIhHbYk3GMvQ', 'SkinItem');
// scripts/ui/SkinItem.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    actorAnim: sp.Skeleton,
    nameUI: cc.Label,
    skinData: {
      "default": {}
    },
    methodBtnGroup: [cc.Node]
  },
  onLoad: function onLoad() {
    GameApp.eventManager.on(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, this.updateUnLockShow.bind(this));
  },
  onDestroy: function onDestroy() {
    GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW);
  },
  // update (dt) {},
  init: function init(_skinData) {
    this.skinData = _skinData;
    this.initNameShow();
    this.initSkinShow();
    this.updateMethodShow();
  },
  initNameShow: function initNameShow() {
    this.nameUI.string = this.skinData.name;
    var colorIndex = Math.floor((this.skinData.skinid - 1) / 5);
    this.nameUI.node.color = new cc.Color().fromHEX(NameColor[colorIndex]);
  },
  initSkinShow: function initSkinShow() {
    var _this = this;

    if (this.skinData.skinid < 21) {
      this.actorAnim.skeletonData = GameApp.uiManager.normalSkinData;
      this.actorAnim.setSkin(this.skinData.skinname);
    } else {
      this.actorAnim.skeletonData = GameApp.uiManager.advanceSkinDataGroup[this.skinData.skinid - 21];
    }

    if (this.skinData.skinid < 21) {
      this.actorAnim.setAnimation(0, 'await', true);
    } else {
      this.actorAnim.setAnimation(0, 'await_main_1', false);
      this.actorAnim.setCompleteListener(function () {
        _this.actorAnim.setAnimation(0, 'await_main_' + Tools.randomNum(1, 3), false);
      });
    }
  },
  updateMethodShow: function updateMethodShow() {
    if (this.skinData.skinid > 25) {
      this.methodBtnGroup[2].children[1].getComponent(cc.Label).string = GameApp.dataManager.userData.havePieceNum[this.skinData.skinid] + '/' + this.skinData.needpiece;
      this.setpieceIcon(this.skinData.skinid);
    }

    this.updateUnLockShow();
  },
  updateUnLockShow: function updateUnLockShow() {
    var _this2 = this;

    this.methodBtnGroup[0].active = this.skinData.needcoin;
    this.methodBtnGroup[1].active = this.skinData.needgem;
    this.methodBtnGroup[2].active = this.skinData.needpiece;
    this.methodBtnGroup[3].active = false;
    this.methodBtnGroup[0].children[1].getComponent(cc.Label).string = this.skinData.needcoin;
    this.methodBtnGroup[1].children[1].getComponent(cc.Label).string = GameApp.dataManager.userData.playedVideoNum + '/' + this.skinData.needgem;
    var unlockarr = GameApp.dataManager.userData.unLockedSkinIdArr.concat();
    unlockarr.sort(function (a, b) {
      return a - b;
    });
    unlockarr.forEach(function (element) {
      if (element == _this2.skinData.skinid) {
        _this2.methodBtnGroup[0].active = false;
        _this2.methodBtnGroup[1].active = false;
        _this2.methodBtnGroup[2].active = false;
        _this2.methodBtnGroup[3].active = true;
        return;
      }
    });
    this.updateChoosedShow();
  },
  updateChoosedShow: function updateChoosedShow() {
    if (GameApp.dataManager.getChoosedSkinId() == this.skinData.skinid) {
      this.methodBtnGroup[3].children[0].active = false;
      this.methodBtnGroup[3].children[1].active = true;
    } else {
      this.methodBtnGroup[3].children[0].active = true;
      this.methodBtnGroup[3].children[1].active = false;
    }
  },
  setpieceIcon: function setpieceIcon(id) {
    var self = this;
    cc.loader.loadRes("texture/skin_piece/card_p_" + id, cc.SpriteFrame, function (err, spriteFrame) {
      self.methodBtnGroup[2].children[0].getComponent(cc.Sprite).spriteFrame = spriteFrame;
    });
  },
  frameBtnClick: function frameBtnClick() {
    var _this3 = this;

    GameApp.audioManager.playEffect('click');
    GameApp.uiManager.showPopup("SkinInfoPopup", function (node) {
      node.getComponent("SkinInfoPopup").init(_this3.skinData);
    }, false);
  },
  selelctBtnClick: function selelctBtnClick() {
    GameApp.audioManager.playEffect('click');
    GameApp.dataManager.setChoosedSkinId(this.skinData.skinid);
    GameApp.eventManager.emit(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW);
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/migration/use_v2.1-2.2.1_cc.Toggle_event.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c6a4b0h4hNHo7t8OG5gSmcy', 'use_v2.1-2.2.1_cc.Toggle_event');
// migration/use_v2.1-2.2.1_cc.Toggle_event.js

"use strict";

/*
 * This script is automatically generated by Cocos Creator and is only used for projects compatible with the v2.1.0 ～ 2.2.1 version.
 * You do not need to manually add this script in any other project.
 * If you don't use cc.Toggle in your project, you can delete this script directly.
 * If your project is hosted in VCS such as git, submit this script together.
 *
 * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0 ~ 2.2.1 版本的工程，
 * 你无需在任何其它项目中手动添加此脚本。
 * 如果你的项目中没用到 Toggle，可直接删除该脚本。
 * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。
 */
if (cc.Toggle) {
  // Whether to trigger 'toggle' and 'checkEvents' events when modifying 'toggle.isChecked' in the code
  // 在代码中修改 'toggle.isChecked' 时是否触发 'toggle' 与 'checkEvents' 事件
  cc.Toggle._triggerEventInScript_isChecked = true;
}

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcbWlncmF0aW9uXFx1c2VfdjIuMS0yLjIuMV9jYy5Ub2dnbGVfZXZlbnQuanMiXSwibmFtZXMiOlsiY2MiLCJUb2dnbGUiLCJfdHJpZ2dlckV2ZW50SW5TY3JpcHRfaXNDaGVja2VkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7OztBQVlBLElBQUlBLEVBQUUsQ0FBQ0MsTUFBUCxFQUFlO0FBQ1g7QUFDQTtBQUNBRCxFQUFBQSxFQUFFLENBQUNDLE1BQUgsQ0FBVUMsK0JBQVYsR0FBNEMsSUFBNUM7QUFDSCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFRoaXMgc2NyaXB0IGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGJ5IENvY29zIENyZWF0b3IgYW5kIGlzIG9ubHkgdXNlZCBmb3IgcHJvamVjdHMgY29tcGF0aWJsZSB3aXRoIHRoZSB2Mi4xLjAg772eIDIuMi4xIHZlcnNpb24uXG4gKiBZb3UgZG8gbm90IG5lZWQgdG8gbWFudWFsbHkgYWRkIHRoaXMgc2NyaXB0IGluIGFueSBvdGhlciBwcm9qZWN0LlxuICogSWYgeW91IGRvbid0IHVzZSBjYy5Ub2dnbGUgaW4geW91ciBwcm9qZWN0LCB5b3UgY2FuIGRlbGV0ZSB0aGlzIHNjcmlwdCBkaXJlY3RseS5cbiAqIElmIHlvdXIgcHJvamVjdCBpcyBob3N0ZWQgaW4gVkNTIHN1Y2ggYXMgZ2l0LCBzdWJtaXQgdGhpcyBzY3JpcHQgdG9nZXRoZXIuXG4gKlxuICog5q2k6ISa5pys55SxIENvY29zIENyZWF0b3Ig6Ieq5Yqo55Sf5oiQ77yM5LuF55So5LqO5YW85a65IHYyLjEuMCB+IDIuMi4xIOeJiOacrOeahOW3peeoi++8jFxuICog5L2g5peg6ZyA5Zyo5Lu75L2V5YW25a6D6aG555uu5Lit5omL5Yqo5re75Yqg5q2k6ISa5pys44CCXG4gKiDlpoLmnpzkvaDnmoTpobnnm67kuK3msqHnlKjliLAgVG9nZ2xl77yM5Y+v55u05o6l5Yig6Zmk6K+l6ISa5pys44CCXG4gKiDlpoLmnpzkvaDnmoTpobnnm67mnInmiZjnrqHkuo4gZ2l0IOetieeJiOacrOW6k++8jOivt+WwhuatpOiEmuacrOS4gOW5tuS4iuS8oOOAglxuICovXG5cbmlmIChjYy5Ub2dnbGUpIHtcbiAgICAvLyBXaGV0aGVyIHRvIHRyaWdnZXIgJ3RvZ2dsZScgYW5kICdjaGVja0V2ZW50cycgZXZlbnRzIHdoZW4gbW9kaWZ5aW5nICd0b2dnbGUuaXNDaGVja2VkJyBpbiB0aGUgY29kZVxuICAgIC8vIOWcqOS7o+eggeS4reS/ruaUuSAndG9nZ2xlLmlzQ2hlY2tlZCcg5pe25piv5ZCm6Kem5Y+RICd0b2dnbGUnIOS4jiAnY2hlY2tFdmVudHMnIOS6i+S7tlxuICAgIGNjLlRvZ2dsZS5fdHJpZ2dlckV2ZW50SW5TY3JpcHRfaXNDaGVja2VkID0gdHJ1ZTtcbn1cbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/ToastUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a0c7fFQzm9IFYw0LACYPqiI', 'ToastUI');
// scripts/ui/ToastUI.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    labTxt: cc.RichText,
    _callback: null,
    //连续击杀的tip
    playerName: cc.RichText,
    killNum: cc.Label,
    killTipNode: cc.Node
  },
  start: function start() {
    this.node.setScale(0, 0);
  },
  show: function show(msg, callback, num) {
    this._callback = callback;
    this.node.stopAllActions();

    if (num) {
      this.playerName.string = msg;
      this.killNum.string = num;
      this.killTipNode.active = true;
    } else {
      this.labTxt.string = msg;
    }

    this.node.runAction(cc.sequence(cc.scaleTo(0.3, 1).easing(cc.easeBounceOut(2)), cc.delayTime(1), cc.callFunc(function () {
      this.dis();
    }.bind(this))));
  },
  dis: function dis() {
    this.node.runAction(cc.sequence(cc.spawn(cc.fadeOut(1), cc.moveBy(1, cc.v2(0, this.node.height))), cc.callFunc(function () {
      this.disIme();
    }.bind(this))));
  },
  //立即消失
  disIme: function disIme() {
    this.node.active = false;
    this.node.removeFromParent();
    this._callback && this._callback();
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlcXFRvYXN0VUkuanMiXSwibmFtZXMiOlsiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJsYWJUeHQiLCJSaWNoVGV4dCIsIl9jYWxsYmFjayIsInBsYXllck5hbWUiLCJraWxsTnVtIiwiTGFiZWwiLCJraWxsVGlwTm9kZSIsIk5vZGUiLCJzdGFydCIsIm5vZGUiLCJzZXRTY2FsZSIsInNob3ciLCJtc2ciLCJjYWxsYmFjayIsIm51bSIsInN0b3BBbGxBY3Rpb25zIiwic3RyaW5nIiwiYWN0aXZlIiwicnVuQWN0aW9uIiwic2VxdWVuY2UiLCJzY2FsZVRvIiwiZWFzaW5nIiwiZWFzZUJvdW5jZU91dCIsImRlbGF5VGltZSIsImNhbGxGdW5jIiwiZGlzIiwiYmluZCIsInNwYXduIiwiZmFkZU91dCIsIm1vdmVCeSIsInYyIiwiaGVpZ2h0IiwiZGlzSW1lIiwicmVtb3ZlRnJvbVBhcmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLE1BQU0sRUFBRUosRUFBRSxDQUFDSyxRQURIO0FBRVJDLElBQUFBLFNBQVMsRUFBRSxJQUZIO0FBR1I7QUFDQUMsSUFBQUEsVUFBVSxFQUFFUCxFQUFFLENBQUNLLFFBSlA7QUFLUkcsSUFBQUEsT0FBTyxFQUFFUixFQUFFLENBQUNTLEtBTEo7QUFNUkMsSUFBQUEsV0FBVyxFQUFFVixFQUFFLENBQUNXO0FBTlIsR0FIUDtBQVlMQyxFQUFBQSxLQVpLLG1CQVlHO0FBQ0osU0FBS0MsSUFBTCxDQUFVQyxRQUFWLENBQW1CLENBQW5CLEVBQXNCLENBQXRCO0FBQ0gsR0FkSTtBQWdCTEMsRUFBQUEsSUFoQkssZ0JBZ0JBQyxHQWhCQSxFQWdCS0MsUUFoQkwsRUFnQmVDLEdBaEJmLEVBZ0JvQjtBQUNyQixTQUFLWixTQUFMLEdBQWlCVyxRQUFqQjtBQUVBLFNBQUtKLElBQUwsQ0FBVU0sY0FBVjs7QUFDQSxRQUFJRCxHQUFKLEVBQVM7QUFDTCxXQUFLWCxVQUFMLENBQWdCYSxNQUFoQixHQUF5QkosR0FBekI7QUFDQSxXQUFLUixPQUFMLENBQWFZLE1BQWIsR0FBc0JGLEdBQXRCO0FBQ0EsV0FBS1IsV0FBTCxDQUFpQlcsTUFBakIsR0FBMEIsSUFBMUI7QUFDSCxLQUpELE1BSU87QUFDSCxXQUFLakIsTUFBTCxDQUFZZ0IsTUFBWixHQUFxQkosR0FBckI7QUFDSDs7QUFDRCxTQUFLSCxJQUFMLENBQVVTLFNBQVYsQ0FDSXRCLEVBQUUsQ0FBQ3VCLFFBQUgsQ0FDSXZCLEVBQUUsQ0FBQ3dCLE9BQUgsQ0FBVyxHQUFYLEVBQWdCLENBQWhCLEVBQW1CQyxNQUFuQixDQUEwQnpCLEVBQUUsQ0FBQzBCLGFBQUgsQ0FBaUIsQ0FBakIsQ0FBMUIsQ0FESixFQUVJMUIsRUFBRSxDQUFDMkIsU0FBSCxDQUFhLENBQWIsQ0FGSixFQUdJM0IsRUFBRSxDQUFDNEIsUUFBSCxDQUFZLFlBQVk7QUFDcEIsV0FBS0MsR0FBTDtBQUNILEtBRlcsQ0FFVkMsSUFGVSxDQUVMLElBRkssQ0FBWixDQUhKLENBREo7QUFVSCxHQXJDSTtBQXVDTEQsRUFBQUEsR0F2Q0ssaUJBdUNDO0FBQ0YsU0FBS2hCLElBQUwsQ0FBVVMsU0FBVixDQUNJdEIsRUFBRSxDQUFDdUIsUUFBSCxDQUNJdkIsRUFBRSxDQUFDK0IsS0FBSCxDQUNJL0IsRUFBRSxDQUFDZ0MsT0FBSCxDQUFXLENBQVgsQ0FESixFQUVJaEMsRUFBRSxDQUFDaUMsTUFBSCxDQUFVLENBQVYsRUFBYWpDLEVBQUUsQ0FBQ2tDLEVBQUgsQ0FBTSxDQUFOLEVBQVMsS0FBS3JCLElBQUwsQ0FBVXNCLE1BQW5CLENBQWIsQ0FGSixDQURKLEVBS0luQyxFQUFFLENBQUM0QixRQUFILENBQVksWUFBWTtBQUNwQixXQUFLUSxNQUFMO0FBQ0gsS0FGVyxDQUVWTixJQUZVLENBRUwsSUFGSyxDQUFaLENBTEosQ0FESjtBQVdILEdBbkRJO0FBcURMO0FBQ0FNLEVBQUFBLE1BdERLLG9CQXNESTtBQUNMLFNBQUt2QixJQUFMLENBQVVRLE1BQVYsR0FBbUIsS0FBbkI7QUFDQSxTQUFLUixJQUFMLENBQVV3QixnQkFBVjtBQUNBLFNBQUsvQixTQUFMLElBQWtCLEtBQUtBLFNBQUwsRUFBbEI7QUFDSDtBQTFESSxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIGxhYlR4dDogY2MuUmljaFRleHQsXHJcbiAgICAgICAgX2NhbGxiYWNrOiBudWxsLFxyXG4gICAgICAgIC8v6L+e57ut5Ye75p2A55qEdGlwXHJcbiAgICAgICAgcGxheWVyTmFtZTogY2MuUmljaFRleHQsXHJcbiAgICAgICAga2lsbE51bTogY2MuTGFiZWwsXHJcbiAgICAgICAga2lsbFRpcE5vZGU6IGNjLk5vZGVcclxuICAgIH0sXHJcblxyXG4gICAgc3RhcnQoKSB7XHJcbiAgICAgICAgdGhpcy5ub2RlLnNldFNjYWxlKDAsIDApXHJcbiAgICB9LFxyXG5cclxuICAgIHNob3cobXNnLCBjYWxsYmFjaywgbnVtKSB7XHJcbiAgICAgICAgdGhpcy5fY2FsbGJhY2sgPSBjYWxsYmFjaztcclxuXHJcbiAgICAgICAgdGhpcy5ub2RlLnN0b3BBbGxBY3Rpb25zKCk7XHJcbiAgICAgICAgaWYgKG51bSkge1xyXG4gICAgICAgICAgICB0aGlzLnBsYXllck5hbWUuc3RyaW5nID0gbXNnXHJcbiAgICAgICAgICAgIHRoaXMua2lsbE51bS5zdHJpbmcgPSBudW1cclxuICAgICAgICAgICAgdGhpcy5raWxsVGlwTm9kZS5hY3RpdmUgPSB0cnVlXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5sYWJUeHQuc3RyaW5nID0gbXNnO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm5vZGUucnVuQWN0aW9uKFxyXG4gICAgICAgICAgICBjYy5zZXF1ZW5jZShcclxuICAgICAgICAgICAgICAgIGNjLnNjYWxlVG8oMC4zLCAxKS5lYXNpbmcoY2MuZWFzZUJvdW5jZU91dCgyKSksXHJcbiAgICAgICAgICAgICAgICBjYy5kZWxheVRpbWUoMSksXHJcbiAgICAgICAgICAgICAgICBjYy5jYWxsRnVuYyhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kaXMoKTtcclxuICAgICAgICAgICAgICAgIH0uYmluZCh0aGlzKSlcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICk7XHJcblxyXG4gICAgfSxcclxuXHJcbiAgICBkaXMoKSB7XHJcbiAgICAgICAgdGhpcy5ub2RlLnJ1bkFjdGlvbihcclxuICAgICAgICAgICAgY2Muc2VxdWVuY2UoXHJcbiAgICAgICAgICAgICAgICBjYy5zcGF3bihcclxuICAgICAgICAgICAgICAgICAgICBjYy5mYWRlT3V0KDEpLFxyXG4gICAgICAgICAgICAgICAgICAgIGNjLm1vdmVCeSgxLCBjYy52MigwLCB0aGlzLm5vZGUuaGVpZ2h0KSksXHJcbiAgICAgICAgICAgICAgICApLFxyXG4gICAgICAgICAgICAgICAgY2MuY2FsbEZ1bmMoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGlzSW1lKCk7XHJcbiAgICAgICAgICAgICAgICB9LmJpbmQodGhpcykpXHJcbiAgICAgICAgICAgIClcclxuICAgICAgICApO1xyXG4gICAgfSxcclxuXHJcbiAgICAvL+eri+WNs+a2iOWksVxyXG4gICAgZGlzSW1lKCkge1xyXG4gICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLm5vZGUucmVtb3ZlRnJvbVBhcmVudCgpO1xyXG4gICAgICAgIHRoaXMuX2NhbGxiYWNrICYmIHRoaXMuX2NhbGxiYWNrKClcclxuICAgIH0sXHJcbn0pO1xyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ui/SplashUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '80d85q9LDVJk5VXIllfACwI', 'SplashUI');
// scripts/ui/SplashUI.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {},
  onLoad: function onLoad() {
    this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function () {
      GameApp.uiManager.showUI("LoginUI");
    })));
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcdWlcXFNwbGFzaFVJLmpzIl0sIm5hbWVzIjpbImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwib25Mb2FkIiwibm9kZSIsInJ1bkFjdGlvbiIsInNlcXVlbmNlIiwiZGVsYXlUaW1lIiwiY2FsbEZ1bmMiLCJHYW1lQXBwIiwidWlNYW5hZ2VyIiwic2hvd1VJIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUNBQSxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUUsRUFIUDtBQVFMQyxFQUFBQSxNQVJLLG9CQVFJO0FBQ0wsU0FBS0MsSUFBTCxDQUFVQyxTQUFWLENBQW9CTixFQUFFLENBQUNPLFFBQUgsQ0FBWVAsRUFBRSxDQUFDUSxTQUFILENBQWEsQ0FBYixDQUFaLEVBQTZCUixFQUFFLENBQUNTLFFBQUgsQ0FBWSxZQUFNO0FBQy9EQyxNQUFBQSxPQUFPLENBQUNDLFNBQVIsQ0FBa0JDLE1BQWxCLENBQXlCLFNBQXpCO0FBQ0gsS0FGZ0QsQ0FBN0IsQ0FBcEI7QUFHSDtBQVpJLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jYy5DbGFzcyh7XHJcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG5cclxuICAgIH0sXHJcblxyXG5cclxuICAgIG9uTG9hZCgpIHtcclxuICAgICAgICB0aGlzLm5vZGUucnVuQWN0aW9uKGNjLnNlcXVlbmNlKGNjLmRlbGF5VGltZSgyKSwgY2MuY2FsbEZ1bmMoKCkgPT4ge1xyXG4gICAgICAgICAgICBHYW1lQXBwLnVpTWFuYWdlci5zaG93VUkoXCJMb2dpblVJXCIpXHJcbiAgICAgICAgfSkpKVxyXG4gICAgfSxcclxuXHJcblxyXG59KTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__node_modules/events/events.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------
