{"version":3,"sources":["assets/scripts/ui/ActivityPopup.js","assets/scripts/manager/AudioManager.js","assets/scripts/ui/BoxUI.js","assets/scripts/game/Bullet.js","assets/scripts/manager/ConfigManager.js","assets/scripts/data/Consts.js","assets/scripts/ui/DailyPopup.js","assets/scripts/manager/DataManager.js","assets/scripts/game/DropBox.js","assets/scripts/game/Enemy.js","assets/scripts/manager/EventManager.js","assets/scripts/GameApp.js","assets/scripts/ui/GameMap.js","assets/scripts/ui/GameUI.js","assets/scripts/ui/GiftPopup.js","assets/scripts/game/GroundItem.js","assets/scripts/ui/GunUI.js","assets/scripts/game/JoystickCommon.js","assets/scripts/game/Joystick.js","assets/scripts/data/JsonPath.js","assets/scripts/Launch/LaunchScript.js","assets/scripts/ui/LoginUI.js","assets/scripts/ui/OpenBoxPopup.js","assets/scripts/ui/OverPopup.js","assets/scripts/game/ParatrooperEnemy.js","assets/scripts/game/ParatrooperPlayer.js","assets/scripts/ui/PlaneUI.js","assets/scripts/game/Player.js","assets/scripts/data/PrefabPath.js","assets/scripts/ui/PrepareMap.js","assets/scripts/ui/PrepareUI.js","assets/scripts/Protocol.js","assets/scripts/ui/RankUI.js","assets/scripts/data/RouletteData.js","assets/scripts/ui/SkinInfoPopup.js","assets/scripts/ui/SkinItem.js","assets/scripts/ui/SkinUI.js","assets/scripts/ui/SplashUI.js","assets/scripts/ui/ToastUI.js","assets/scripts/Tools.js","assets/scripts/manager/UIManager.js","assets/scripts/Utils.js","assets/migration/use_reversed_rotateBy.js","assets/migration/use_v2.1-2.2.1_cc.Toggle_event.js"],"names":["cc","Class","extends","Component","properties","page1","Node","page2","btn1","btn2","activeProgress","ProgressBar","progressBtnGroup","activeUI","Label","curPageIndex","onLineTaskNum","activityTaskNum","activityCoinNum","onLoad","a","GameApp","dataManager","globalData","onLineGiftCurNum","this","activityCurNum","concat","activityCurCoin","btn1Click","eventTouch","audioManager","playEffect","children","active","showPage1","btn2Click","showPage2","updateOnlineTask","finishAll","i","getOnLineGiftsState","sys","localStorage","setItem","setOnLineGiftsState","TaskState","Unfinish","updateOnLineTaskShow","getComponent","string","updateOnlineTaskBtnShow","_minuteTime","getOnlineTimeMinute","Canget","updateActivityTask","getActivityGiftsState","activityAddNum","JSON","stringify","activityAddCoin","setActivityGiftsState","updateActivityTaskShow","arr1","updateActivityTaskBtnShow","activityNum","updateProgressShow","updateProgressBtnShow","onLineTaskBtnClick","customEventData","selectId","parseInt","Got","addCoin","uiManager","showToast","activityTaskBtnClick","addActiveValue","progress","activeValue","progressBtnClick","progressGifts","arr2","setProgressGifts","arr","closeBtnClick","eventManager","emit","EventNames","EVENT_SHOW_ACTIVITYBTN","node","destroy","name","_musicOn","_musicAudioID","_musicName","_effectOn","_effectAudioID","_Audios","default","ctor","game","on","EVENT_HIDE","console","log","audioEngine","pauseAll","EVENT_SHOW","resumeAll","tempSound","getItem","undefined","getMusicName","AudioClip","raw","getEffectName","playMusic","restart","_this","stopMusic","loader","loadRes","err","clip","setMusic","stop","_volume","_loop","_this2","play","setEffect","Utils","require","coinUI","needCoinUI","box1CoinRewardUI","box2CoinRewardUI","onceClick","visible","EVENT_UPDATE_COIN_SHOW","updateUIShow","bind","onDestroy","removeListener","userData","coinNum","box1NeedCoinNum","box1RewardCoinNum","box2RewardCoinNum","oneBtnClick","reduceCoin","showPopup","getNum","Tools","randomNum","init","boxSkinDataGroup","twoBtnClick","window","wx","self","tt","addVideo","addPlayedVideoNum","Math","floor","_info","threeBtnClick","getIndex","addPieceNum","coinBtnClick","backBtnClick","showUI","_belongTag","_belongName","gunData","_pbc","PhysicsBoxCollider","_doFly","_flyDir","v2","_flySpeed","_maxRange","_curRange","_power","_isCrit","_onceExec","bulletAtlas","SpriteAtlas","_data","cloneId","weaponid","Sprite","spriteFrame","getSpriteFrame","speed","range","size","enabled","update","dt","x","y","mag","apply","doAnim","runAction","sequence","delayTime","callFunc","bsp","spIndex","tempSp","repeatForever","onBeginContact","contact","other","tag","Tags","collider","player","enemy","paths","Skin","ConfigManager","allConfigs","loadConfig","_name","_call","path","res","error","message","tempData","loadAllConfig","key","hasOwnProperty","getAllConfig","module","exports","WS_SERVERS","TEST","INSPECT","RELEASE","SERVER","VERSION","NameColor","item","bullet","empty","box","boom","ItemType","weapon","EquipType","damage","def","crit","ItemAttr","attr","des","EVENT_UPDATE_SHOP_CHOOSED_SHOW","EVENT_UPDATE_AMO_SHOW","EVENT_PLAYER_SHOOT","EVENT_PLAYER_RELOAD","EVENT_UPDATE_TOPBAR_SHOW","EVENT_SHOW_GUN_UI","EVENT_SHOW_ALLROLENUM_UI","EVENT_SHOW_RELOAD_UI","EVENT_PICKUP_WEAPON","EVENT_AIM","EVENT_GAME_BEGIN","EVENT_UPDATE_MIPMAP_PLAYER","EVENT_THEGAMESTART","EVENT_UPDATE_RANK_SHOW","EVENT_UPDATE_GAS_SHOW","EVENT_FLASH","EVENT_RESUME_HEALTH","EVENT_DROP_BOX","EVENT_NOTYFY_BOX_DISMISS","EVENT_NOTYFY_BOOM_DISMISS","EVENT_SHOW_BOXITEM","EVENT_UPDATE_STAR_SHOW","EVENT_NOTIFY_ENEMY_MAPBOX","dailyGroup","dailyGotNum","type","number","closeBtn","initShow","show","scaleTo","curDailyGot","Button","interactable","easing","easeBackOut","getBtnClick","getSkinDataById","RecordState","Enum","READY","RECORD","PAUSE","MD5Code","isFirstPlay","playerName","choosedSkinId","unLockedSkinIdArr","playedVideoNum","havePieceNum","26","27","28","29","30","baseHp","baseDamage","baseCrit","baseSpeed","baseCd","baseDef","baseRecovery","alDieNum","allKillNum","allPlayNum","winNum","top5Num","winRate","kd","avgRank","mostKill","avgLifeTime","days","shootInterval","reloadInterval","maxAmoNum","curAmoNum","maxHp","curHp","curDamage","curCrit","curSpeed","curCd","curDef","curRecovery","allRoleArr","allGunArr","allBoxArr","isInGame","inGameKillNum","gasConfig","getItemAttrArr","rank","equipItemAttr","lifeTime","onLineTime","onLineGifts","activityGifts","playerNameArr","recordPath","recordTimer","recordState","jsonData","SkinsData","WeaponData","RobotName","initSomeAttr","getState","tempOnLinetime","tempOnLineGifts","parse","tempOnLineGiftCurNum","tempactiveValue","tempactivityGifts","tempactivityNum","tempactivityCurNum","tempactivityCurCoin","tempprogressGifts","setPlayerName","save","_num","unLockSkin","_skinId","indexOf","push","_pieceIndex","forEach","index","needpiece","_this3","needgem","setChoosedSkinId","_val","addSkinAttr","curSkinData","att_hpmax","att_damage","att_crit","att_speed","att_cd","att_defense","att_recovery","getChoosedSkinId","reduceHp","getResumeHealthNum","getSkillCD","addHp","reduceAmo","reloadAmo","addKillNum","_index","_killNum","equipBoxItem","_rank","getEquipItemAttr","getEquipShowAttr","_state","newtime","toTimeString2","hour","minute","addActivityNum","changeRecordState","state","setMD5Code","getMD5Code","boxIndex","_showToPlayer","progressBar","_beginOpen","_hadOpen","_openTimer","_belongTagsArr","toString","length","enemyEquipBoxItem","onEndContact","removeArray","_JoystickCommon","moveDir","displayName","tooltip","_speedType","SpeedType","STOP","_moveSpeed","stopSpeed","Integer","normalSpeed","fastSpeed","roleAnim","sp","Skeleton","_gunDir","gunAnim","gunNode","_haveGun","_mapNoGun","_mapNoBox","thisName","skinData","nameUI","bulletPrefab","Prefab","_choosedSkinId","hpBar","amoBar","starNode","_maxHp","_curHp","_shootInterval","_reloadInterval","_maxAmoNum","_curAmoNum","_curDamage","_curCrit","_curSpeed","_curCd","_curDef","_curRecovery","_shootFlag","_shootTimer","_reloadFlag","_reloadTimer","lastHitBullet","_desTime","_desTime2","_isAim","_aimDir","_aimTimer","_aimInterval","_isDie","_move","_isProtect","_isBlock","_isGas","_inGasTimer","_inGasInterval","theGameStart","notifyMapBox","onEnable","onDisable","_names","roleProtect","initNameShow","initSkinShow","setSpeedType","FAST","opacity","_selectIndex","getRandomElement","updateStarShow","_sum","level","starNum","commonAtlas","skeletonData","normalSkinData","setSkin","skinname","advanceSkinDataGroup","setAnimation","move","theAngle","misc","radiansToDegrees","atan2","scaleX","newPos","position","add","mul","setPosition","doParser","setDir","rotate","dir","safePosition","sub","distance","gasCircle","beDamage","normalize","searchBox","desDir","searchGun","minDis","aimGun","aimBox","_type","_dir","setGunDir","rotation","scaleY","NORMAL","aimToNearest","shoot","lateUpdate","aimEnemy","power","ceil","isCrit","isInMapSight","bullet1","instantiate","bullet2","bullet3","bulletPos","parent","convertToNodeSpaceAR","convertToWorldSpaceAR","cloneGunDir","bulletC1","bulletC2","degreesToRadians","bulletC3","_bulletPos","bulletC","updateAmoShow","reload","updateHpShow","equipWeapon","_kind","shootdelay","reloaddelay","clipnum","gunSkinDataGroup","groundItem","itemType","bC","rotateSelf","scheduleOnce","_belongIndex","_weaponid","showGameObject","originPos","_isDef","str","RichText","desPos","bezier","seq","spawn","fadeIn","bezierTo","fadeOut","getGame","getChildByName","killNum","soundIndex","theParentC","gameRoot","ddd","allGunNode","_param","stopActionByTag","EventEmitter","_eventEmitter","setMaxListeners","eventName","func","once","param","removeAllListeners","AudioManager","UIManager","DataManager","EventManager","Start","_properties","tiledMap","TiledMap","objectPrefab","colliderPrefab","groundItemPrefab","allObjectNode","allColliderNode","otherGunPos","enemySpawnPosGroupNode","paratrooperNode","cloudNode","mapAtlas","_timer0","_timer","readyToSort","gasPanel","dropPanel","boomPanel","safeCircle","_gasState","_dropTime","_mipBoxGroup","updateGasShow","dropBox","notifyBoxDismiss","EVENT_DROP_BOOM","dropBoom","initMapShow","_chooseType","_bili","_speedUpJump","showCloud","showParatrooperPlayer","schedule","showParatrooperEnemy","initGas","gasCountDown","sortAll","width","height","fadeTo","event","delt","isIntersect","abs","k","x_off","parseFloat","sqrt","_thePos","div","_theWidth","boomArr","pointOfRandom","dropItBoom","_delay","moveBy","coli","theAnim","setCompleteListener","_this4","wallLayer","getLayer","getObjectGroup","_objects","element","obj","split","getPositionAt","getTilePos","offset","addChild","_this5","pC","getUI","joystick","theX","theY","_this6","_this7","_jumpTime","mapCamera","zoomRatio","each0_05","act","gameBegin","_this8","landUpPos","destroyAllChildren","showGun","showPlayer","showEnemy","_this9","posNode","posInPixel","mapSize","getContentSize","tileSize","getTileSize","c","_this10","tempPosArr","standardArr","_i","tagNum","cloneObjArr","tempDict","tempIndex","_i2","sort","b","setSiblingIndex","btnArr","soundNode","gameUIPanel","shootBtn","reloadBtnNode","amoUI","allRoleNumUI","weaponBtnNode","mipmapNode","prepareTopNode","countDownSpGroup","SpriteFrame","rankGroup","_theGameBegin","_protectTimeCountDown","_onceCountDownAnim","_onceGasCountDownAnim","gasNodeUI","safeNode","gasNode","boomNode","_gasCountDownTimer","_gasCountDownInterval","_boxCountDownTimer","_boxCountDownInterval","_boomCountDownTimer","_boomCountDownInterval","tipNode","flashBtn","flashCDUI","healthBtn","healthCDUI","_flashTimer","_flashInCD","_healthTimer","_healthInCD","mipNode","boxAttrNodeGroup","equipAttrNodeGroup","updateGunUIShow","updateReloadUIShow","updateAllRoleNumUIShow","updateMipmapPlayer","updateRankShow","notifyBoomDismiss","showBoxItemUI","EventType","TOUCH_START","onTouchBegin","TOUCH_END","onTouchLeave","TOUCH_CANCEL","rotateBy","moveTo","updateSoundBtnShow","showGame","boxCountDown","boomCountDown","duleFlash","duleHealth","protectCcountDown","protectCcountDownAnim","quietGasState","refreshCircleAndCD","reduceCircleAndTip","theWidth","repeat","theNumArr","thePos","paramPos","randNum","getRandomAmountElementUnRepeat","nodeArr","boxItemUIBtnClick","updateEquipShowUI","_gunData","theRank","getPopup","updateMipmapBox","theArr","theName","reloadBtnClick","weaponBtnClick","flashBtnClick","healthBtnClick","soundBtnClick","onoff","updateRecordBtnShow","recordBtnClick","pauseRecord","resumeRecord","closeBtnNode","sureBtnNode","nextUIName","_popupType","titleUI","coinSp","coinInfo","speedSp","speedInfo","scaleUpAndDowm","sureBtnClick","closeBtnClick2","closePopup","_speedUp","showPlaneUI","_default","JoystickType","FIXED","FOLLOW","DirectionType","FOUR","EIGHT","ALL","dot","ring","joystickType","directionType","_stickPos","_touchLocation","_radius","_initTouchEvent","_touchStartEvent","TOUCH_MOVE","_touchMoveEvent","_touchEndEvent","touchPos","getLocation","getPosition","posX","posY","p","Player","start","loadSkeletonDataResources","getSkeletonDataByName","data","SkeletonData","EditBox","curPlayerAnim","moreBtn","moreSprites","spriteIndex","activityBtnNode","originActivityBtnPos","showActivityBtn","updateCoinShow","updateNameShow","passDays","date","Date","getTime","dailyDate","newDate","startRecord","videoPath","recorder","soloBtnClick","onNameChanged","skinBtnClick","boxBtnClick","rankBtnClick","shopBtnClick","shareBtnClick","shareFromHomePage","moreGameBtnClick","getSystemInfoSync","platform","showMoreGamesModal","appLaunchOptions","appId","query","extraData","success","errMsg","fail","stopAllActions","easeBounceOut","activityBtnClick","boxAnim","delayShowPanel","_itemType","_itemNum","_skinData","addPiece","loop","skipBtnClick","setpieceIcon","id","winTitle","winSprite","loseTitle","rankUI","killUI","allRewardUI","rankRewardUI","killRewardUI","rewardBtnNode","homeBtnNode","clickedShare","_isWin","rankCoin","killCoin","allCoin","toFixed","homeBtnClick","rewardBtnClick","shareRecord","stopRecord","_borderGroup","_bg","planeNode","mapNode","posIndex","angle","jumpBtnClick","allL","curL","bili","tempGroundWeapon","_stepTimer","_stepInterval","arrowNode","pickUpWeapon","updatePlayerTopBarShow","aimState","doFlash","doResumeHealth","resumeHealth","_flash","newPos1","setArrowDir","checkGas","arrowToNearestGun","uiRoot","ToastUI","SplashUI","LoginUI","SkinUI","SkinInfoPopup","BoxUI","GunUI","RankUI","GiftPopup","OpenBoxPopup","PrepareUI","PrepareMap","Enemy","GroundItem","PlaneUI","GameUI","GameMap","ParatrooperPlayer","ParatrooperEnemy","InfoLabel","DropBox","MipBox","Boom","OverPopup","DailyPopup","ActivityPopup","waitLabel","_timeCountDown","_onceExecute","countDownAnim","statics","Initialize","allPlayNumUI","winNumUI","top5NumUI","winRateUI","kdUI","avgRankUI","mostKillUI","avgLifeTimeUI","toTimeString","RouletteData","ALLROATE","num","deviation","zhuanpanData","duration","rotateNum","load","end","actorAnim","descUI","methodUIGroup","methodBtnGroup","updateUnLockShow","updateMethodShow","colorIndex","skinid","color","Color","fromHEX","needcoin","unlockarr","updateChoosedShow2","selelctBtnClick","videoBtnClick","pieceBtnClick","onCloseBtnClick","updateChoosedShow","frameBtnClick","scrollView","ScrollView","itemPrefab","initData","content","removeAllChildren","labTxt","_callback","killTipNode","setScale","msg","callback","dis","disIme","removeFromParent","addClickEvent","target","component","handler","eventHandler","EventHandler","clickEvents","minNum","maxNum","_float","random","amount","arrLength","desArr","indexArr","tempArr","temp","result","_arr","_obj","len","shift","pop","splice","point","radius_outer","radius_inner","isInRegion","y_off","p_outer","r_outer","p_inner","r_inner","isShining","light","easeIn","shake","rotateTo","jumpOneByOne","nodeNum","childrenCount","toDateFormat","year","getFullYear","month","getMonth","day","getDate","s","ret","addNegativeCaculation","isNegative","rate","strName","calculation","n1","n2","PREFAB_PATH","JSON_PATH","conMag","popupRoot","toastRoot","toastPrefab","loadingMask","loadingProgress","splashUI","_Prefabs","_Jsons","Camera","mipmapCamera","addPersistRootNode","director","getCollisionManager","enabledDrawBoundingBox","enabledDebugDraw","manager","getPhysicsManager","debugDrawFlags","PhysicsManager","DrawBits","e_aabbBit","e_pairBit","e_centerOfMassBit","e_jointBit","e_shapeBit","frameSize","view","getFrameSize","canvas","devicePixelRatio","setLoadingMaskVisible","startLoading","loadAll","completedCount","totalCount","per","isNaN","cbProgress","cbComplete","ii","prefabCount","jj","name2","jsonCount","loadResArray","prefabs","names","Object","keys","names2","j","json","cb","prefab","parentNode","_curGameName","_curName","clearGames","eachUI","clearPopups","popUI","uis","_target","cameraWidth","cameraHeight","getWorldToScreenPoint","clean","_curPopupName","popPopup","popups","_step","value","_iterator","_createForOfIteratorHelperLoose","done","_step2","_loop2","_iterator2","toast","moveUp","isShow","util","bannerIdTab","addBanner","m_banner","moregameBtn","vedioAd","recordNatureStop","vedioIdTab","shareImgUrl","baseurl","shareTxts","idx","txt","_getShareObject","from","_callSuccess","_callFailed","title","desc","imageUrl","e","shareAppMessage","channel","templateId","extra","videoTopics","createChallenge","_id","_sy","phone","w","screenWidth","h","screenHeight","bannerAd","createBannerAd","adUnitId","style","then","onResize","top","left","removeBanner","hide","addMoreGameBtn","_url","createMoreGamesButton","image","lineHeight","backgroundColor","textColor","textAlign","fontSize","borderRadius","borderWidth","borderColor","onNavigateToMiniGame","closeMoreGameBtn","createRewardedVideoAd","errorFunc","offError","closeFunc","offClose","warn","errCode","onError","isEnded","onClose","_onNatureClose","getGameRecorderManager","onStart","onStop","onPause","pause","onResume","resume","RotateBy","_reverse","Toggle","_triggerEventInScript_isChecked"],"mappings":"wjBACAA,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIC,MAAAL,GAAAM,KACAC,MAAAP,GAAAM,KACAE,KAAAR,GAAAM,KACAG,KAAAT,GAAAM,KACAI,eAAAV,GAAAW,YACAC,iBAAAZ,GAAAM,KACAO,SAAAb,GAAAc,MACAC,aAAA,EACAC,cAAA,GACAC,gBAAA,GACAC,gBAAA,IAGJC,OAAA,WACI,IAAAC,EAAAC,QAAAC,YAAAC,WAAAC,iBACAC,KAAAT,cAAA,CAAAI,EAAA,GAAAA,EAAA,EAAAA,GACAK,KAAAR,gBAAAI,QAAAC,YAAAC,WAAAG,eAAAC,SACAF,KAAAP,gBAAAG,QAAAC,YAAAC,WAAAK,gBAAAD,SACAF,KAAAI,aAEJA,UAAA,SAAAC,GACI,GAAAL,KAAAV,cAAAe,IACAL,KAAAV,aAAA,EACAe,GAAAT,QAAAU,aAAAC,WAAA,SACAP,KAAAjB,KAAAyB,SAAA,GAAAC,QAAA,EACAT,KAAAjB,KAAAyB,SAAA,GAAAC,QAAA,EACAT,KAAAhB,KAAAwB,SAAA,GAAAC,QAAA,EACAT,KAAAhB,KAAAwB,SAAA,GAAAC,QAAA,EACAT,KAAAlB,MAAA2B,QAAA,EACAT,KAAAU,cAEJC,UAAA,SAAAN,GACI,GAAAL,KAAAV,cAAAe,IACAL,KAAAV,aAAA,EACAe,GAAAT,QAAAU,aAAAC,WAAA,SACAP,KAAAjB,KAAAyB,SAAA,GAAAC,QAAA,EACAT,KAAAjB,KAAAyB,SAAA,GAAAC,QAAA,EACAT,KAAAhB,KAAAwB,SAAA,GAAAC,QAAA,EACAT,KAAAhB,KAAAwB,SAAA,GAAAC,QAAA,EACAT,KAAApB,MAAA6B,QAAA,EACAT,KAAAY,cAEJC,iBAAA,WACI,IAAAC,GAAA,EACA,IAAA,IAAAC,KAAAf,KAAApB,MAAA4B,SACI,GAAA,GAAAZ,QAAAC,YAAAmB,oBAAAD,GAAA,CACID,GAAA,EACA,MAGR,GAAAA,EAAA,CACIlB,QAAAC,YAAAC,WAAAC,kBAAA,GACAxB,GAAA0C,IAAAC,aAAAC,QAAA,8BAAAvB,QAAAC,YAAAC,WAAAC,kBACA,IAAAJ,EAAAC,QAAAC,YAAAC,WAAAC,iBACAC,KAAAT,cAAA,CAAAI,EAAA,GAAAA,EAAA,EAAAA,GACAC,QAAAC,YAAAuB,oBAAA,EAAAC,UAAAC,UACA1B,QAAAC,YAAAuB,oBAAA,EAAAC,UAAAC,UACA1B,QAAAC,YAAAuB,oBAAA,EAAAC,UAAAC,UAEJtB,KAAAuB,wBAEJA,qBAAA,WACI,IAAA,IAAAR,KAAAf,KAAApB,MAAA4B,SACIR,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAA,uCAAAzB,KAAAT,cAAAwB,GAAA,eACAf,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAA,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAAzB,KAAAT,cAAAwB,GAEJf,KAAA0B,2BAEJA,wBAAA,WACI,IAAAC,EAAA/B,QAAAC,YAAA+B,sBACA,IAAA,IAAAb,KAAAf,KAAApB,MAAA4B,SACI,OAAAZ,QAAAC,YAAAmB,oBAAAD,IACI,KAAA,EACIY,GAAA3B,KAAAT,cAAAwB,IACInB,QAAAC,YAAAuB,oBAAAL,EAAAM,UAAAQ,QACA7B,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,IAEAT,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,GAEJ,MACJ,KAAA,EACIT,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACA,MACJ,KAAA,EACIT,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAApB,MAAA4B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,IAKhBqB,mBAAA,WACI,IAAA,IAAAf,KAAAf,KAAAR,gBACI,GAAAI,QAAAC,YAAAkC,sBAAAhB,KACInB,QAAAC,YAAAC,WAAAG,eAAAc,IAAAnB,QAAAC,YAAAC,WAAAkC,eAAAjB,GACAxC,GAAA0C,IAAAC,aAAAC,QAAA,4BAAAc,KAAAC,UAAAtC,QAAAC,YAAAC,WAAAG,iBACAL,QAAAC,YAAAC,WAAAK,gBAAAY,IAAAnB,QAAAC,YAAAC,WAAAqC,gBAAApB,GACAxC,GAAA0C,IAAAC,aAAAC,QAAA,6BAAAc,KAAAC,UAAAtC,QAAAC,YAAAC,WAAAK,kBACAP,QAAAC,YAAAuC,sBAAArB,EAAAM,UAAAC,WAIRtB,KAAAR,gBAAAI,QAAAC,YAAAC,WAAAG,eAAAC,SACAF,KAAAP,gBAAAG,QAAAC,YAAAC,WAAAK,gBAAAD,SACAF,KAAAqC,0BAEJA,uBAAA,WACI,IAAAC,EAAA,CAAA,mDAAAtC,KAAAR,gBAAA,GAAA,SAAA,2BAAAQ,KAAAR,gBAAA,GAAA,SAAA,2BAAAQ,KAAAR,gBAAA,GAAA,UAGA,IAAA,IAAAuB,KAAAf,KAAAR,gBACIQ,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAAa,EAAAvB,GACAf,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAA,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAAzB,KAAAP,gBAAAsB,GAGJf,KAAAuC,6BAEJA,0BAAA,WACI,IAAA,IAAAxB,KAAAf,KAAAR,gBACI,OAAAI,QAAAC,YAAAkC,sBAAAhB,IACI,KAAA,EACInB,QAAAC,YAAAC,WAAA0C,YAAAzB,IAAAf,KAAAR,gBAAAuB,IACInB,QAAAC,YAAAuC,sBAAArB,EAAAM,UAAAQ,QACA7B,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,IAEAT,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,GAEJ,MACJ,KAAA,EACIT,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACA,MACJ,KAAA,EACIT,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAT,KAAAlB,MAAA0B,SAAAO,GAAAP,SAAA,GAAAA,SAAA,GAAAC,QAAA,IAKhBC,UAAA,WACIV,KAAAa,mBAEAb,KAAApB,MAAA6B,QAAA,GAEJG,UAAA,WACIZ,KAAA8B,qBACA9B,KAAAyC,qBACAzC,KAAA0C,wBACA1C,KAAAlB,MAAA2B,QAAA,GAEJkC,mBAAA,SAAAtC,EAAAuC,GACI,IAAAC,EAAAC,SAAAF,GACA,GAAAhD,QAAAC,YAAAmB,oBAAA6B,EAAA,KACIjD,QAAAC,YAAAuB,oBAAAyB,EAAA,EAAAxB,UAAA0B,KACAnD,QAAAC,YAAAmD,QAAAhD,KAAAT,cAAAsD,EAAA,IACAjD,QAAAqD,UAAAC,UAAA,4BAAAlD,KAAAT,cAAAsD,EAAA,IACA7C,KAAA0B,4BAGRyB,qBAAA,SAAA9C,EAAAuC,GACI,IAAAC,EAAAC,SAAAF,GACA,GAAAhD,QAAAC,YAAAkC,sBAAAc,EAAA,KACIjD,QAAAC,YAAAuC,sBAAAS,EAAA,EAAAxB,UAAA0B,KACAnD,QAAAC,YAAAmD,QAAAhD,KAAAP,gBAAAoD,EAAA,IACAjD,QAAAC,YAAAuD,eAAA,IACApD,KAAAyC,qBACA7C,QAAAqD,UAAAC,UAAA,4BAAAlD,KAAAP,gBAAAoD,EAAA,IACA7C,KAAAuC,8BAGRE,mBAAA,WACIzC,KAAAf,eAAAoE,SAAAzD,QAAAC,YAAAC,WAAAwD,YAAA,IACAtD,KAAAZ,SAAAqC,OAAA7B,QAAAC,YAAAC,WAAAwD,aAGJC,iBAAA,SAAAlD,EAAAuC,GACI,IAAAC,EAAAC,SAAAF,GACA,GAAA,GAAAhD,QAAAC,YAAAC,WAAA0D,cAAAX,EAAA,GAAA,CACIjD,QAAAU,aAAAC,WAAA,SACA,IACAkD,EAAA,CAAA,IAAA,IAAA,IAAA,KAEA7D,QAAAC,YAAAmD,QAAAS,EAAAZ,EAAA,IACAjD,QAAAqD,UAAAC,UAAA,4BAAAO,EAAAZ,EAAA,IACAjD,QAAAC,YAAA6D,iBAAAb,EAAA,EAAA,GACA7C,KAAA0C,0BAKRA,sBAAA,WACI,IAAAiB,EAAA,CAAA,GAAA,GAAA,GAAA,KACA,IAAA,IAAA5C,KAAA4C,EACI,GAAA/D,QAAAC,YAAAC,WAAA0D,cAAAzC,IACInB,QAAAC,YAAAC,WAAAwD,aAAAK,EAAA5C,IACInB,QAAAC,YAAA6D,iBAAA3C,EAAA,GAMZ,IAAA,IAAAA,KAAAf,KAAAb,iBAAAqB,SACI,GAAAZ,QAAAC,YAAAC,WAAA0D,cAAAzC,IACIf,KAAAb,iBAAAqB,SAAAO,GAAAP,SAAA,GAAAC,QAAA,EACAT,KAAAb,iBAAAqB,SAAAO,GAAAP,SAAA,GAAAC,QAAA,IAEAT,KAAAb,iBAAAqB,SAAAO,GAAAP,SAAA,GAAAC,QAAA,EACAT,KAAAb,iBAAAqB,SAAAO,GAAAP,SAAA,GAAAC,QAAA,IAKZmD,cAAA,WACIhE,QAAAU,aAAAC,WAAA,SACAX,QAAAiE,aAAAC,KAAAC,WAAAC,wBACAhE,KAAAiE,KAAAC,gICxOR3F,GAAAC,MAAA,CACI2F,KAAA,eAEAxF,WAAA,CACIyF,UAAA,EACAC,cAAA,KACAC,WAAA,GAEAC,WAAA,EACAC,eAAA,KAEAC,QAAA,CACIC,QAAA,KAIRC,KAAA,WACIpG,GAAAqG,KAAAC,GAAAtG,GAAAqG,KAAAE,WAAA,WACIC,QAAAC,IAAA,2BACAzG,GAAA0G,YAAAC,aAEJ3G,GAAAqG,KAAAC,GAAAtG,GAAAqG,KAAAO,WAAA,WACIJ,QAAAC,IAAA,4BACAzG,GAAA0G,YAAAG,cAGJ,IAAAC,EAAA9G,GAAA0C,IAAAC,aAAAoE,QAAA,oBAMA,MAAAD,GAAA,IAAAA,GAAAE,MAAAF,IACIA,EAAA,QAAAA,EACArF,KAAAuE,UAAAc,IAIRG,aAAA,SAAArB,GACI,OAAA5F,GAAAkH,UAAAC,IAAA,yBAAAvB,EAAA,SAGJwB,cAAA,SAAAxB,GACI,OAAA5F,GAAAkH,UAAAC,IAAA,0BAAAvB,EAAA,SAGJyB,UAAA,SAAAzB,EAAA0B,GAAyB,IAAAC,EAAA9F,KACrB,KAAAmE,GAAAnE,KAAAsE,aAAAH,IAAA0B,IAGA7F,KAAAsE,WAAAH,EACAnE,KAAAoE,WACI7F,GAAA0G,YAAAc,UAAA/F,KAAAqE,eAEA9F,GAAAyH,OAAAC,QAAA,eAAA9B,EAAA,OAAA5F,GAAAkH,UAAA,SAAAS,EAAAC,GACIL,EAAAzB,cAAA9F,GAAA0G,YAAAW,UAAAO,GAAA,GAAA,QAMZC,SAAA,SAAAvB,GACI7E,KAAAoE,SAAAS,EACAtG,GAAA0C,IAAAC,aAAAC,QAAA,WAAA,GAAA0D,GACAA,EACI7E,KAAA4F,UAAA5F,KAAAsE,YAAA,GAEA/F,GAAA0G,YAAAoB,KAAArG,KAAAqE,gBAIR9D,WAAA,SAAA4D,EAAAmC,EAAAC,GAAiC,IAAAC,EAAAxG,KAC7BA,KAAAuE,YACI,GAAAgC,GAAAhI,GAAA0G,YAAAoB,KAAArG,KAAAwE,gBACAjG,GAAAyH,OAAAC,QAAA,gBAAA9B,EAAA5F,GAAAkH,UAAA,SAAAS,EAAAC,GACI,IAAAxG,EAAApB,GAAA0G,YAAAwB,KAAAN,EAAA,GAAAI,EAAAD,GAAA,GAGA,GAAAC,IACIC,EAAAhC,eAAA7E,OAShB+G,UAAA,SAAA7B,GACI7E,KAAAuE,UAAAM,EACAtG,GAAA0C,IAAAC,aAAAC,QAAA,mBAAA,GAAA0D,GACAA,GACItG,GAAA0G,YAAAoB,KAAArG,KAAAwE,wHC5FZ,IAAAmC,EAAAC,EAAA,SAEArI,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIkI,OAAAtI,GAAAc,MACAyH,WAAAvI,GAAAc,MACA0H,iBAAAxI,GAAAc,MACA2H,iBAAAzI,GAAAc,MAEA4H,UAAA,CACIvC,SAAA,EACAwC,SAAA,IAGRxH,OAAA,WACIE,QAAAiE,aAAAgB,GAAAd,WAAAoD,uBAAAnH,KAAAoH,aAAAC,KAAArH,OACAA,KAAAoH,gBAEJE,UAAA,WACI1H,QAAAiE,aAAA0D,eAAAxD,WAAAoD,yBAEJC,aAAA,WACIpH,KAAA6G,OAAApF,OAAA7B,QAAAC,YAAA2H,SAAAC,QACAzH,KAAA8G,WAAArF,OAAA7B,QAAAC,YAAA2H,SAAAE,gBACA1H,KAAA+G,iBAAAtF,OAAA7B,QAAAC,YAAA2H,SAAAG,kBAAA,GAAA,IAAA/H,QAAAC,YAAA2H,SAAAG,kBAAA,GACA3H,KAAAgH,iBAAAvF,OAAA7B,QAAAC,YAAA2H,SAAAI,kBAAA,GAAA,IAAAhI,QAAAC,YAAA2H,SAAAI,kBAAA,IAEJC,YAAA,WAAc,IAAA/B,EAAA9F,KACVA,KAAAiH,YACAjH,KAAAiH,WAAA,EACArH,QAAAU,aAAAC,WAAA,SACAX,QAAAC,YAAAiI,WAAAlI,QAAAC,YAAA2H,SAAAE,iBACI9H,QAAAqD,UAAA8E,UAAA,eAAA,SAAA9D,GACI,IAAA+D,EAAAC,MAAAC,UAAAtI,QAAAC,YAAA2H,SAAAG,kBAAA,GAAA/H,QAAAC,YAAA2H,SAAAG,kBAAA,IACA/H,QAAAC,YAAAmD,QAAAgF,GACA/D,EAAAzC,aAAA,gBAAA2G,KAAAvI,QAAAqD,UAAAmF,iBAAA,GAAA,EAAAJ,GACApI,QAAAC,YAAA2H,SAAAE,gBAAA,OACI9H,QAAAC,YAAA2H,SAAAE,iBAAA,EACA9H,QAAAC,YAAA2H,SAAAG,kBAAA,GAAA/H,QAAAC,YAAA2H,SAAAE,gBAAA,EACA9H,QAAAC,YAAA2H,SAAAG,kBAAA,GAAA,IAAA/H,QAAAC,YAAA2H,SAAAE,iBAEJ5B,EAAAsB,eACAtB,EAAAmB,WAAA,KAGJjH,KAAAiH,WAAA,EACArH,QAAAqD,UAAAC,UAAA,gCAGRmF,YAAA,WACI,GAAAC,OAAAC,GACI3I,QAAAqD,UAAAC,UAAA,uCAGJ,GAAAlD,KAAAiH,UAAA,CACAjH,KAAAiH,WAAA,EACArH,QAAAU,aAAAC,WAAA,SACA,IAAAiI,EAAAxI,KACAsI,OAAAG,GACI9B,EAAA+B,SAAA,WAAA,WACIF,EAAAvB,WAAA,EACArH,QAAAC,YAAA8I,oBACA/I,QAAAqD,UAAA8E,UAAA,eAAA,SAAA9D,GACI,IAAA+D,EAAAC,MAAAC,UAAAtI,QAAAC,YAAA2H,SAAAI,kBAAA,GAAAhI,QAAAC,YAAA2H,SAAAI,kBAAA,IACAhI,QAAAC,YAAAmD,QAAAgF,GACA/D,EAAAzC,aAAA,gBAAA2G,KAAAvI,QAAAqD,UAAAmF,iBAAA,GAAA,EAAAJ,GACApI,QAAAC,YAAA2H,SAAAI,kBAAA,GAAA,OACIhI,QAAAC,YAAA2H,SAAAI,kBAAA,GAAAgB,KAAAC,MAAA,IAAAjJ,QAAAC,YAAA2H,SAAAI,kBAAA,IACAhI,QAAAC,YAAA2H,SAAAI,kBAAA,GAAAgB,KAAAC,MAAA,IAAAjJ,QAAAC,YAAA2H,SAAAI,kBAAA,KAEJY,EAAApB,eACAoB,EAAAvB,WAAA,KAEP,SAAA6B,GACGN,EAAAvB,WAAA,EACA6B,EAAAlJ,QAAAqD,UAAAC,UAAA4F,GAAAlJ,QAAAqD,UAAAC,UAAA,2CAGJsF,EAAAvB,WAAA,EACArH,QAAAC,YAAA8I,oBACA/I,QAAAqD,UAAA8E,UAAA,eAAA,SAAA9D,GACI,IAAA+D,EAAAC,MAAAC,UAAAtI,QAAAC,YAAA2H,SAAAI,kBAAA,GAAAhI,QAAAC,YAAA2H,SAAAI,kBAAA,IACAhI,QAAAC,YAAAmD,QAAAgF,GACA/D,EAAAzC,aAAA,gBAAA2G,KAAAvI,QAAAqD,UAAAmF,iBAAA,GAAA,EAAAJ,GACApI,QAAAC,YAAA2H,SAAAI,kBAAA,GAAA,OACIhI,QAAAC,YAAA2H,SAAAI,kBAAA,GAAAgB,KAAAC,MAAA,IAAAjJ,QAAAC,YAAA2H,SAAAI,kBAAA,IACAhI,QAAAC,YAAA2H,SAAAI,kBAAA,GAAAgB,KAAAC,MAAA,IAAAjJ,QAAAC,YAAA2H,SAAAI,kBAAA,KAEJY,EAAApB,eACAoB,EAAAvB,WAAA,OAIZ8B,cAAA,WACI,GAAAT,OAAAC,GACI3I,QAAAqD,UAAAC,UAAA,uCAGJ,GAAAlD,KAAAiH,UAAA,CACAjH,KAAAiH,WAAA,EACArH,QAAAU,aAAAC,WAAA,SACA,IAAAiI,EAAAxI,KAEA,GAAAsI,OAAAG,GACI9B,EAAA+B,SAAA,WAAA,WACIF,EAAAvB,WAAA,EACArH,QAAAC,YAAA8I,oBACA,IAAAK,EAAAf,MAAAC,UAAA,GAAA,IAEAtI,QAAAC,YAAAoJ,YAAAD,EADA,GAEApJ,QAAAqD,UAAA8E,UAAA,eAAA,SAAA9D,GACIA,EAAAzC,aAAA,gBAAA2G,KAAAvI,QAAAqD,UAAAmF,iBAAA,GAAA,EAHJ,EAGIY,GACAR,EAAAvB,WAAA,KAEP,SAAA6B,GACGN,EAAAvB,WAAA,EACA6B,EAAAlJ,QAAAqD,UAAAC,UAAA4F,GAAAlJ,QAAAqD,UAAAC,UAAA,8CAEP,CACGsF,EAAAvB,WAAA,EACArH,QAAAC,YAAA8I,oBACA,IAAAK,EAAAf,MAAAC,UAAA,GAAA,IAEAtI,QAAAC,YAAAoJ,YAAAD,EADA,GAEApJ,QAAAqD,UAAA8E,UAAA,eAAA,SAAA9D,GACIA,EAAAzC,aAAA,gBAAA2G,KAAAvI,QAAAqD,UAAAmF,iBAAA,GAAA,EAHJ,EAGIY,GACAR,EAAAvB,WAAA,OAMZiC,aAAA,WACI,GAAAlJ,KAAAiH,UAAA,CACAjH,KAAAiH,WAAA,EACArH,QAAAU,aAAAC,WAAA,SACA,IAAAiI,EAAAxI,KAEAsI,OAAAG,GACI9B,EAAA+B,SAAA,WAAA,WACIF,EAAAvB,WAAA,EACArH,QAAAqD,UAAAC,UAAA,+BACAtD,QAAAC,YAAAmD,QAAA,KACAwF,EAAApB,gBACH,SAAA0B,GACGN,EAAAvB,WAAA,EACA6B,EAAAlJ,QAAAqD,UAAAC,UAAA4F,GAAAlJ,QAAAqD,UAAAC,UAAA,2CAGJsF,EAAAvB,WAAA,EACArH,QAAAqD,UAAAC,UAAA,kDACAtD,QAAAC,YAAAmD,QAAA,KACAwF,EAAApB,kBAIR+B,aAAA,WACIvJ,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAmG,OAAA,kIC/JR7K,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACI0K,YAAA,EACAC,YAAA,GACAC,QAAA,CACI7E,QAAA,IAEJ8E,KAAAjL,GAAAkL,mBACAC,QAAA,EACAC,QAAA,CACIjF,QAAAnG,GAAAqL,GAAA,EAAA,IAEJC,UAAA,EACAC,UAAA,IACAC,UAAA,EACAC,OAAA,EACAC,SAAA,EACAC,WAAA,EACAC,YAAA5L,GAAA6L,aAGJ1K,OAAA,WACIM,KAAAwJ,KAAAxJ,KAAAiE,KAAAzC,aAAAjD,GAAAkL,qBAKJtB,KAAA,SAAAkC,EAAAL,EAAAC,GACIjK,KAAAuJ,QAAAc,EACArK,KAAAgK,OAAAA,EACAhK,KAAAiK,QAAAA,EACA,IAAAK,EAAAtK,KAAAuJ,QAAAgB,SACAD,EAAA,OACIA,GAAA,KAEJtK,KAAAwB,aAAAjD,GAAAiM,QAAAC,YAAAzK,KAAAmK,YAAAO,eAAAJ,EAAA,KACAtK,KAAA6J,UAAA7J,KAAAuJ,QAAAoB,MACA3K,KAAA8J,UAAA9J,KAAAuJ,QAAAqB,MACA5K,KAAAwJ,KAAAqB,KAAA,IAAAtM,GAAAsM,KAAA,GAAA,IACA7K,KAAAwJ,KAAAsB,SAAA,EACA9K,KAAA0J,QAAA,GAEJqB,OAAA,SAAAC,GACIhL,KAAA0J,QACI1J,KAAAiE,KAAAgH,GAAAjL,KAAA2J,QAAAsB,EAAAjL,KAAA6J,UAAAmB,EACAhL,KAAAiE,KAAAiH,GAAAlL,KAAA2J,QAAAuB,EAAAlL,KAAA6J,UAAAmB,EACAhL,KAAA+J,WAAA/J,KAAA2J,QAAAwB,MAAAH,EAAA,IAEAhL,KAAA+J,UAAA/J,KAAA8J,YACI,MAAA9J,KAAAuJ,QAAAgB,UAAA,MAAAvK,KAAAuJ,QAAAgB,WACIvK,KAAAwJ,KAAAqB,KAAA,IAAAtM,GAAAsM,KAAA,IAAA,KACA7K,KAAAwJ,KAAA4B,SAEJpL,KAAA0J,QAAA,IAGJ1J,KAAAqL,UAGRA,OAAA,WAAS,IAAAvF,EAAA9F,KACL,GAAAA,KAAAkK,UAAA,CACAlK,KAAAkK,WAAA,EACAlK,KAAAiE,KAAAqH,UAAA/M,GAAAgN,SAAAhN,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACI3F,EAAA0D,KAAAsB,SAAA,MAEJ,IAAAY,EAAA1L,KAAAwB,aAAAjD,GAAAiM,QACAmB,EAAA,EACA3L,KAAAiE,KAAAqH,UAAA/M,GAAAgN,SAAAhN,GAAAkN,SAAA,WACI,IAAAnB,EAAAxE,EAAAyD,QAAAgB,SACAD,EAAA,OACIA,GAAA,KAEJ,IAAAsB,EAAA9F,EAAAqE,YAAAO,eAAAJ,EAAA,IAAA,IAAAqB,GACA,MAAAC,GACIF,EAAAjB,YAAAmB,IACAD,GAEA7F,EAAA7B,KAAAC,YAEP3F,GAAAiN,UAAA,KAAAK,mBAELC,eAAA,SAAAC,EAAAvD,EAAAwD,GACIA,EAAAC,KAAAjM,KAAAqJ,aACA2C,EAAAC,KAAAC,KAAAC,UAAAH,EAAAC,KAAAC,KAAAE,QAAAJ,EAAAC,KAAAC,KAAAG,SAEI,MAAArM,KAAAuJ,QAAAgB,UAAA,OAAAvK,KAAAuJ,QAAAgB,WACIvK,KAAAwJ,KAAAqB,KAAA,IAAAtM,GAAAsM,KAAA,IAAA,KACA7K,KAAAwJ,KAAA4B,SAEJpL,KAAA0J,QAAA,2kHC5FZ,IAAA4C,EAAA,CACIC,KAAA,mBAGJC,EAAA,CACIC,WAAA,GACAC,WAAA,SAAAC,EAAAC,GAEI,IAAAC,EAAAP,EAAAK,GACApO,GAAAyH,OAAAC,QAAA4G,EAAA,SAAA3G,EAAA4G,GACI,GAAA5G,EAGI,OAFAnB,QAAAC,IAAA,uCACAD,QAAAgI,MAAA7G,EAAA8G,SAAA9G,GAGJ,IAAA+G,EAAAH,EAEA9M,KAAAyM,WAAAE,GAAAM,EACAL,GAAAA,KAEHvF,KAAArH,QAELkN,cAAA,SAAAN,GACI,IAAA,IAAAO,KAAAb,EACIA,EAAAc,eAAAD,IAEInN,KAAA0M,WAAAS,EAAAP,IAIZS,aAAA,WACI,OAAArN,KAAAyM,aAIRa,EAAAC,QAAAf,yGClCAlE,OAAAkF,WAAA,CACIC,KAAA,mCACAC,QAAA,GACAC,QAAA,IASJrF,OAAAsF,OALI,OAMJtF,OAAAuF,QAAA,QACAvF,OAAAwF,UAAA,CAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WASAxF,OAAA4D,KAAA,CACIC,SAAA,EACAC,OAAA,EACA2B,KAAA,EACAC,OAAA,EACAC,MAAA,EACAC,IAAA,EACAC,KAAA,EACA9B,MAAA,IAKJ/D,OAAA8F,SAAA,CACIC,OAAA,EACAN,KAAA,GAEJzF,OAAAgG,UAAA,CACIC,OAAA,EACAC,IAAA,EACA7D,MAAA,EACA8D,KAAA,GAGJnG,OAAAoG,SAAA,CAAA,CAAA,CAGYC,KAAA,GACAC,IAAA,oBAFJ,CAKID,KAAA,GACAC,IAAA,oBAFJ,CAKID,KAAA,GACAC,IAAA,qBAFJ,CAAA,CAOID,KAAA,GACAC,IAAA,oBAFJ,CAKID,KAAA,GACAC,IAAA,oBAFJ,CAKID,KAAA,GACAC,IAAA,qBAFJ,CAAA,CAOID,KAAA,GACAC,IAAA,oBAFJ,CAKID,KAAA,GACAC,IAAA,oBAFJ,CAKID,KAAA,GACAC,IAAA,qBAFJ,CAAA,CAOID,KAAA,EACAC,IAAA,oBAFJ,CAKID,KAAA,EACAC,IAAA,oBAFJ,CAKID,KAAA,EACAC,IAAA,sBAIZtG,OAAAjH,UAAA,CACIC,SAAA,EACAO,OAAA,EACAkB,IAAA,GAGJuF,OAAAvE,WAAA,CACI8K,+BAAA,iCACA1H,uBAAA,yBACA2H,sBAAA,wBACAC,mBAAA,qBACAC,oBAAA,sBACAC,yBAAA,2BACAC,kBAAA,oBACAC,yBAAA,2BACAC,qBAAA,uBACAC,oBAAA,sBACAC,UAAA,YACAC,iBAAA,mBACAC,2BAAA,6BACAC,mBAAA,qBACAC,uBAAA,yBACAC,sBAAA,wBACAC,YAAA,cACAC,oBAAA,sBACAC,eAAA,iBACAC,yBAAA,2BACAC,0BAAA,4BACAC,mBAAA,qBACAC,uBAAA,yBACAC,0BAAA,4BACAnM,uBAAA,yICzIJ4C,EAAA,SAEArI,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIyR,WAAA7R,GAAAM,KACAwR,YAAA,CACI3L,QAAA,EACA4L,KAAA/R,GAAAgS,OACArJ,SAAA,GAEJsJ,SAAAjS,GAAAM,KAEAoI,WAAA,GAGJvH,OAAA,WACIM,KAAAqQ,YAAA9R,GAAA0C,IAAAC,aAAAoE,QAAA,0BACA,MAAAtF,KAAAqQ,aAAA9K,MAAAvF,KAAAqQ,aAAA,IAAArQ,KAAAqQ,aACIrQ,KAAAqQ,YAAA,EACA9R,GAAA0C,IAAAC,aAAAC,QAAA,yBAAA,IAEAnB,KAAAqQ,YAAAvN,SAAA9C,KAAAqQ,aAEJrQ,KAAAyQ,WAEA,IAAAC,EAAAnS,GAAAgN,SAAAhN,GAAAiN,UAAA,GAAAjN,GAAAoS,QAAA,GAAA,IACA3Q,KAAAwQ,SAAAlF,UAAAoF,GACA9Q,QAAAC,YAAAC,WAAA8Q,aACI5Q,KAAAoQ,WAAA5P,SAAAR,KAAAqQ,YAAA,GAAA7O,aAAAjD,GAAAsS,QAAAC,cAAA,EACA9Q,KAAAoQ,WAAA5P,SAAAR,KAAAqQ,YAAA,GAAA7P,SAAA,GAAAC,QAAA,GAEAT,KAAAoQ,WAAA5P,SAAAR,KAAAqQ,aAAA7P,SAAA,GAAAC,QAAA,GAIRgQ,SAAA,WACI,GAAAzQ,KAAAqQ,YAAA,EACI,IAAA,IAAAtP,EAAA,EAAAA,EAAAf,KAAAqQ,YAAAtP,IACIf,KAAAoQ,WAAA5P,SAAAO,GAAAP,SAAA,GAAA8K,UAAA/M,GAAAoS,QAAA,GAAA,GAAAI,OAAAxS,GAAAyS,iBAoEZC,YAAA,SAAA5Q,EAAAuC,GACI,IAAAC,EAAAC,SAAAF,GACAhD,QAAAC,YAAAC,WAAA8Q,aACA5Q,KAAAqQ,aAAAxN,EAAA,IACAjD,QAAAU,aAAAC,WAAA,SACAP,KACAiH,WAAA,EACAjH,KAAAoQ,WAAA5P,SAAAR,KAAAqQ,aAAA7O,aAAAjD,GAAAsS,QAAAC,cAAA,EACAlR,QAAAC,YAAAC,WAAA8Q,aAAA,EACArS,GAAA0C,IAAAC,aAAAC,QAAA,4BAAA,GACAnB,KAAAoQ,WAAA5P,SAAAR,KAAAqQ,aAAA7P,SAAA,GAAA8K,UAAA/M,GAAAgN,SAAAhN,GAAAoS,QAAA,GAAA,GAAAI,OAAAxS,GAAAyS,eAAAzS,GAAAkN,SAAA,WACI,IAAAnJ,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACAmB,EAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KACA,GAAAnB,EAAAtC,KAAAqQ,cACIzQ,QAAAqD,UAAAC,UAAA,4BAAAO,EAAAzD,KAAAqQ,cACAzQ,QAAAC,YAAAmD,QAAAS,EAAAzD,KAAAqQ,eACH,GAAA/N,EAAAtC,KAAAqQ,eACGzQ,QAAAqD,UAAAC,UAAA,8BAAAtD,QAAAC,YAAAqR,gBAAA,IAAA/M,KAAA,yBAAAV,EAAAzD,KAAAqQ,cACAzQ,QAAAC,YAAAoJ,YAAA,GAAAxF,EAAAzD,KAAAqQ,eAGJrQ,KAAAqQ,cACA,GAAArQ,KAAAqQ,cACIrQ,KAAAqQ,YAAA,GAEJ9R,GAAA0C,IAAAC,aAAAC,QAAA,yBAAAnB,KAAAqQ,cAEHhJ,KAAArH,MAAAA,UAEL4D,cAAA,WACIhE,QAAAU,aAAAC,WAAA,SACAP,KAAAiE,KAAAC,2IC1IRoE,OAAA6I,YAAA5S,GAAA6S,KAAA,CACIC,MAAA,EACAC,OAAA,EACAC,MAAA,IAEJhT,GAAAC,MAAA,CACI2F,KAAA,cAEAxF,WAAA,CACI6S,QAAA,KACAhK,SAAA,CACI9C,QAAA,KAIRC,KAAA,WACI3E,KAAAwH,SAAA,CACIiK,aAAA,EACAC,WAAA,2BACAjK,QAAA,EACAkK,cAAA,EACAC,kBAAA,CAAA,GAEAC,eAAA,EACAC,aAAA,CACIC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GAEJzK,gBAAA,IACAC,kBAAA,CAAA,GAAA,KACAC,kBAAA,CAAA,IAAA,KAGAwK,OAAA,IACAC,WAAA,EACAC,SAAA,EACAC,UAAA,IACAC,OAAA,EACAC,QAAA,EACAC,aAAA,EAGAC,SAAA,EACAC,WAAA,EACAC,WAAA,EACAC,OAAA,EACAC,QAAA,EACAC,QAAA,EACAC,GAAA,EACAC,QAAA,EACAC,SAAA,EACAC,YAAA,GAEJpT,KAAAF,WAAA,CACIuT,KAAA,EACAzC,aAAA,EAEA0C,cAAA,EACAC,eAAA,EACAC,UAAA,GACAC,UAAA,GAEAC,MAAA,IACAC,MAAA,IACAC,UAAA,EACAC,QAAA,EACAC,SAAA,IACAC,MAAA,EACAC,OAAA,EACAC,YAAA,EAEAC,WAAA,GACAC,UAAA,GACAC,UAAA,GACAC,UAAA,EACAC,cAAA,GACAC,UAAA,KACAC,eAAA,CAAA,CACIC,KAAA,EACA1G,KAAA,MAFa,CAIb0G,KAAA,EACA1G,KAAA,MAFD,CAIC0G,KAAA,EACA1G,KAAA,MAFD,CAIC0G,KAAA,EACA1G,KAAA,OAEJ2G,cAAA,CAAA,EAAA,EAAA,EAAA,GAEAC,SAAA,EAIAC,WAAA,EACAC,YAAA,CAAA,EAAA,EAAA,GACA9U,iBAAA,EAGAuD,YAAA,EACAwR,cAAA,CAAA,EAAA,EAAA,GACAtS,YAAA,CAAA,EAAA,EAAA,GACAvC,eAAA,CAAA,EAAA,EAAA,GACAE,gBAAA,CAAA,EAAA,EAAA,GAEAqD,cAAA,CAAA,EAAA,EAAA,EAAA,GAEAxB,eAAA,CAAA,EAAA,EAAA,GACAG,gBAAA,CAAA,GAAA,IAAA,KAEA4S,cAAA,CAAA,qBAAA,qBAAA,qBAAA,qBAAA,qBAAA,qBAAA,qBAAA,qBAAA,qBAAA,eAAA,qBAAA,qBAAA,qBAAA,qBAAA,qBAAA,eAAA,qBAAA,qBAAA,qBAAA,qBAAA,qBAAA,qBAAA,qBAAA,qBAAA,eAAA,eAAA,qBAAA,sBA6BAC,WAAA,KACAC,YAAA,EACAC,YAAA/D,YAAAE,OAGJrR,KAAAmV,SAAA,CACIC,UAAA,GACAC,WAAA,GACAC,UAAA,KAGRC,aAAA,WAAe,IAAAzP,EAAA9F,KACXzB,GAAAqG,KAAAC,GAAAtG,GAAAqG,KAAAE,WAAA,WACIC,QAAAC,IAAA,gEACAzG,GAAA0C,IAAAC,aAAAC,QAAA,wBAAA2B,SAAAgD,EAAAhG,WAAA8U,eAGJ,IAAAY,EAAAjX,GAAA0C,IAAAC,aAAAoE,QAAA,4BAEItF,KAAAF,WAAA8Q,YADJ,QAAA4E,GAAA,GAAAA,EAKA,IAAAC,EAAAlX,GAAA0C,IAAAC,aAAAoE,QAAA,yBACA,MAAAmQ,GAAAlQ,MAAAkQ,GAAA,IAAAA,GACIA,EAAA,EACAlX,GAAA0C,IAAAC,aAAAC,QAAA,wBAAA,IAEAsU,EAAA3S,SAAA2S,GAEJzV,KAAAF,WAAA8U,WAAAa,EAEA,IAAAC,EAAAnX,GAAA0C,IAAAC,aAAAoE,QAAA,0BACA,MAAAoQ,GAAAnQ,MAAAmQ,GAAA,IAAAA,GACIA,EAAA,CAAA,EAAA,EAAA,GACAnX,GAAA0C,IAAAC,aAAAC,QAAA,yBAAAc,KAAAC,UAAAwT,KAEAA,EAAAzT,KAAA0T,MAAAD,GAEJ1V,KAAAF,WAAA+U,YAAAa,EAGA,IAAAE,EAAArX,GAAA0C,IAAAC,aAAAoE,QAAA,+BACA,MAAAsQ,GAAArQ,MAAAqQ,GAAA,IAAAA,GACIA,EAAA,EACArX,GAAA0C,IAAAC,aAAAC,QAAA,8BAAA,IAEAyU,EAAA9S,SAAA8S,GAEJ5V,KAAAF,WAAAC,iBAAA6V,EAIA,IAAAC,EAAAtX,GAAA0C,IAAAC,aAAAoE,QAAA,0BACA,MAAAuQ,GAAAtQ,MAAAsQ,GAAA,IAAAA,GACIA,EAAA,EACAtX,GAAA0C,IAAAC,aAAAC,QAAA,yBAAA,IAEA0U,EAAA/S,SAAA+S,GAEJ7V,KAAAF,WAAAwD,YAAAuS,EAEA,IAAAC,EAAAvX,GAAA0C,IAAAC,aAAAoE,QAAA,4BACA,MAAAwQ,GAAAvQ,MAAAuQ,GAAA,IAAAA,GACIA,EAAA,CAAA,EAAA,EAAA,GACAvX,GAAA0C,IAAAC,aAAAC,QAAA,2BAAAc,KAAAC,UAAA4T,KAEAA,EAAA7T,KAAA0T,MAAAG,GAEJ9V,KAAAF,WAAAgV,cAAAgB,EAEA,IAAAC,EAAAxX,GAAA0C,IAAAC,aAAAoE,QAAA,0BACA,MAAAyQ,GAAAxQ,MAAAwQ,GAAA,IAAAA,GACIA,EAAA,CAAA,EAAA,EAAA,GACAxX,GAAA0C,IAAAC,aAAAC,QAAA,yBAAAc,KAAAC,UAAA6T,KAEAA,EAAA9T,KAAA0T,MAAAI,GAEJ/V,KAAAF,WAAA0C,YAAAuT,EAEA,IAAAC,EAAAzX,GAAA0C,IAAAC,aAAAoE,QAAA,6BACA,MAAA0Q,GAAAzQ,MAAAyQ,GAAA,IAAAA,GACIA,EAAA,CAAA,EAAA,EAAA,GACAzX,GAAA0C,IAAAC,aAAAC,QAAA,4BAAAc,KAAAC,UAAA8T,KAEAA,EAAA/T,KAAA0T,MAAAK,GAEJhW,KAAAF,WAAAG,eAAA+V,EAEA,IAAAC,EAAA1X,GAAA0C,IAAAC,aAAAoE,QAAA,8BACA,MAAA2Q,GAAA1Q,MAAA0Q,GAAA,IAAAA,GACIA,EAAA,CAAA,EAAA,EAAA,GACA1X,GAAA0C,IAAAC,aAAAC,QAAA,6BAAAc,KAAAC,UAAA+T,KAEAA,EAAAhU,KAAA0T,MAAAM,GAEJjW,KAAAF,WAAAK,gBAAA8V,EAEA,IAAAC,EAAA3X,GAAA0C,IAAAC,aAAAoE,QAAA,4BACA,MAAA4Q,GAAA3Q,MAAA2Q,GAAA,IAAAA,GACIA,EAAA,CAAA,EAAA,EAAA,EAAA,GACA3X,GAAA0C,IAAAC,aAAAC,QAAA,2BAAAc,KAAAC,UAAAgU,KAEAA,EAAAjU,KAAA0T,MAAAO,GAEJlW,KAAAF,WAAA0D,cAAA0S,EAGAlW,KAAAF,WAAAoU,WAAA,GACAlU,KAAAF,WAAAqU,UAAA,GACAnU,KAAAF,WAAAsU,UAAA,GACApU,KAAAF,WAAAwU,cAAA,GACAtU,KAAAF,WAAAyU,UAAA,KACAvU,KAAAF,WAAA0U,eAAA,CAAA,CACIC,KAAA,EACA1G,KAAA,MAF8B,CAI9B0G,KAAA,EACA1G,KAAA,MAFD,CAIC0G,KAAA,EACA1G,KAAA,MAFD,CAIC0G,KAAA,EACA1G,KAAA,OAEJ/N,KAAAF,WAAA4U,cAAA,CAAA,EAAA,EAAA,EAAA,GACA1U,KAAAF,WAAA4T,MAAA1T,KAAAF,WAAA6T,MAAA3T,KAAAwH,SAAA4K,OACApS,KAAAF,WAAA8T,UAAA5T,KAAAwH,SAAA6K,WACArS,KAAAF,WAAA+T,QAAA7T,KAAAwH,SAAA8K,SACAtS,KAAAF,WAAAgU,SAAA9T,KAAAwH,SAAA+K,UACAvS,KAAAF,WAAAiU,MAAA/T,KAAAwH,SAAAgL,OACAxS,KAAAF,WAAAkU,OAAAhU,KAAAwH,SAAAiL,QACAzS,KAAAF,WAAAmU,YAAAjU,KAAAwH,SAAAkL,cASJyD,cAAA,SAAAxJ,GACI3M,KAAAwH,SAAAkK,WAAA/E,EACA3M,KAAAoW,QAEJpT,QAAA,SAAAqT,GACIrW,KAAAwH,SAAAC,SAAA4O,EACAzW,QAAAiE,aAAAC,KAAAC,WAAAoD,wBACAnH,KAAAoW,QAEJtO,WAAA,SAAAuO,GACI,IAAA1W,EAAAK,KAAAwH,SAAAC,QAAA4O,EACA,QAAA1W,EAAA,IAGIK,KAAAwH,SAAAC,QAAA9H,EACAC,QAAAiE,aAAAC,KAAAC,WAAAoD,wBACAnH,KAAAoW,OACA,KAIRE,WAAA,SAAAC,IACI,GAAAvW,KAAAwH,SAAAoK,kBAAA4E,QAAAD,IACIvW,KAAAwH,SAAAoK,kBAAA6E,KAAAF,IAGRtN,YAAA,SAAAyN,EAAAL,GAA+B,IAAA7P,EAAAxG,KAC3BA,KAAAwH,SAAAsK,aAAA4E,IAAAL,EACA,CAAA,GAAA,GAAA,GAAA,GAAA,IACAM,QAAA,SAAAC,GACIpQ,EAAAgB,SAAAsK,aAAA8E,IAAApQ,EAAA0K,gBAAA0F,GAAAC,WACIrQ,EAAA8P,WAAAM,KAGR5W,KAAAoW,QAEJzN,kBAAA,WAAoB,IAAAmO,EAAA9W,KAChBA,KAAAwH,SAAAqK,iBACA,CAAA,GAAA,GAAA,GAAA,GAAA,IACA8E,QAAA,SAAAC,GACIE,EAAAtP,SAAAqK,gBAAAiF,EAAA5F,gBAAA0F,GAAAG,SACID,EAAAR,WAAAM,KAGR5W,KAAAoW,QAEJlF,gBAAA,SAAAqF,GACI,OAAAvW,KAAAmV,SAAAC,UAAAmB,EAAA,IAGJS,iBAAA,SAAAC,GACKA,EAAA,KAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,IACDjX,KAAAwH,SAAAmK,cAAAsF,EACAjX,KAAAkX,cACAlX,KAAAoW,QAEJc,YAAA,WACI,IAAAC,EAAAnX,KAAAkR,gBAAAlR,KAAAwH,SAAAmK,eACA3R,KAAAF,WAAA4T,MAAA1T,KAAAF,WAAA6T,MAAA3T,KAAAwH,SAAA4K,OAAAxJ,KAAAC,MAAA7I,KAAAwH,SAAA4K,QAAA+E,EAAAC,UAAA,MACApX,KAAAF,WAAA8T,UAAA5T,KAAAwH,SAAA6K,WAAA8E,EAAAE,WAAA,IACArX,KAAAF,WAAA+T,QAAA7T,KAAAwH,SAAA8K,SAAA6E,EAAAG,SAAA,GACAtX,KAAAF,WAAAgU,SAAA9T,KAAAwH,SAAA+K,UAAA3J,KAAAC,MAAA7I,KAAAwH,SAAA+K,WAAA4E,EAAAI,UAAA,MACAvX,KAAAF,WAAAiU,MAAA/T,KAAAwH,SAAAgL,OAAA2E,EAAAK,OAAA,IACAxX,KAAAF,WAAAkU,OAAAhU,KAAAwH,SAAAiL,QAAA0E,EAAAM,YAAA,IACAzX,KAAAF,WAAAmU,YAAAjU,KAAAwH,SAAAkL,aAAAyE,EAAAO,aAAA,KAEJC,iBAAA,WACI,OAAA3X,KAAAwH,SAAAmK,eAEJiG,SAAA,SAAAvB,GACI,IAAA1W,EAAAK,KAAAF,WAAA6T,MAAA0C,EACA,OAAA1W,GAAA,GACIK,KAAAF,WAAA6T,MAAA,EACA/T,QAAAiE,aAAAC,KAAAC,WAAAkL,2BACA,IAEAjP,KAAAF,WAAA6T,MAAAhU,EACAC,QAAAiE,aAAAC,KAAAC,WAAAkL,2BACA,IAGR4I,mBAAA,WACI,OAAA,GAAA7X,KAAAF,WAAAmU,aAEJ6D,WAAA,WACI,OAAA,IAAA,EAAA9X,KAAAF,WAAAiU,QAEJgE,MAAA,SAAA1B,GACI,IAAA1W,EAAAK,KAAAF,WAAA6T,MAAA0C,EACA1W,EAAAK,KAAAF,WAAA4T,MACI1T,KAAAF,WAAA6T,MAAA3T,KAAAF,WAAA4T,MAEA1T,KAAAF,WAAA6T,MAAAhU,EAEJC,QAAAiE,aAAAC,KAAAC,WAAAkL,2BAEJ+I,UAAA,WACI,IAAArY,EAAAK,KAAAF,WAAA2T,UAAA,EACA,OAAA9T,EAAA,GACIK,KAAAF,WAAA2T,UAAA,EACA7T,QAAAiE,aAAAC,KAAAC,WAAA+K,wBACA,IAEA9O,KAAAF,WAAA2T,UAAA9T,EACAC,QAAAiE,aAAAC,KAAAC,WAAA+K,wBACA,IAGRmJ,UAAA,WACIjY,KAAAF,WAAA2T,UAAAzT,KAAAF,WAAA0T,UACA5T,QAAAiE,aAAAC,KAAAC,WAAA+K,wBAEJoJ,WAAA,SAAAC,EAAA7O,GASI,OARA,GAAA6O,EACIA,EAAA,EAEAA,GAAA,EAEJnY,KAAAF,WAAAwU,cAAA6D,GAAAC,WACApY,KAAAF,WAAAwU,cAAA6D,GAAA7O,YAAAA,EACA1J,QAAAiE,aAAAC,KAAAC,WAAA2L,wBACA1P,KAAAF,WAAAwU,cAAA6D,GAAAC,UAEJC,aAAA,SAAAF,GACI,IAAAG,EAAAtY,KAAAF,WAAA0U,eAAA2D,GAAA1D,KAAA,EACAzU,KAAAF,WAAA0U,eAAA2D,GAAA,CACI1D,KAAA6D,EACAvK,KAAAW,SAAAyJ,GAAAG,EAAA,IAMJtY,KAAAF,WAAA4U,cAAAyD,GAAAnY,KAAAF,WAAA0U,eAAA2D,GAAApK,KAAAY,KACA/O,QAAAiE,aAAAC,KAAAC,WAAAmM,yBAEJqI,iBAAA,SAAAJ,GACI,OAAAnY,KAAAF,WAAA4U,cAAAyD,IAEJK,iBAAA,WACI,IAAA7U,EAAA,GACA,IAAA,IAAA5C,KAAAf,KAAAF,WAAA0U,eAEI,GADAxU,KAAAF,WAAA0U,eAAAzT,GAAA0T,KAEI9Q,EAAA8S,KAAA,MAEA9S,EAAA8S,KAAAzW,KAAAF,WAAA0U,eAAAzT,IAGR,OAAA4C,GAEJ3C,oBAAA,SAAAmX,GACI,OAAAnY,KAAAF,WAAA+U,YAAAsD,IAEJpW,sBAAA,SAAAoW,GACI,OAAAnY,KAAAF,WAAAgV,cAAAqD,IAEJ/W,oBAAA,SAAA+W,EAAAM,GACIzY,KAAAF,WAAA+U,YAAAsD,GAAAM,EACAla,GAAA0C,IAAAC,aAAAC,QAAA,yBAAAc,KAAAC,UAAAlC,KAAAF,WAAA+U,eAEJzS,sBAAA,SAAA+V,EAAAM,GACIzY,KAAAF,WAAAgV,cAAAqD,GAAAM,EACAla,GAAA0C,IAAAC,aAAAC,QAAA,2BAAAc,KAAAC,UAAAlC,KAAAF,WAAAgV,iBAEJlT,oBAAA,WACI,IACA8W,EAAAzQ,MAAA0Q,cAAA3Y,KAAAF,WAAA8U,YAEA,OADAhM,KAAAC,MAAA,GAAA6P,EAAAE,KAAAF,EAAAG,SAGJzV,eAAA,SAAAiT,GACI,IAAA1W,EAAAK,KAAAF,WAAAwD,YAAA+S,EACA1W,EAAA,MACIA,EAAA,KAEJK,KAAAF,WAAAwD,YAAA3D,EACA,IAAAgE,EAAA,CAAA,GAAA,GAAA,GAAA,KACA,IAAA,IAAA5C,KAAA4C,EACI,GAAA3D,KAAAF,WAAA0D,cAAAzC,IACIf,KAAAF,WAAAwD,aAAAK,EAAA5C,IACIf,KAAA0D,iBAAA3C,EAAA,GAIZxC,GAAA0C,IAAAC,aAAAC,QAAA,yBAAAnB,KAAAF,WAAAwD,cAEJwV,eAAA,SAAAX,EAAA9B,GACIrW,KAAAF,WAAA0C,YAAA2V,IAAA9B,EACA9X,GAAA0C,IAAAC,aAAAC,QAAA,yBAAAc,KAAAC,UAAAlC,KAAAF,WAAA0C,eAEJkB,iBAAA,SAAAyU,EAAAM,GACIzY,KAAAF,WAAA0D,cAAA2U,GAAAM,EACAla,GAAA0C,IAAAC,aAAAC,QAAA,2BAAAc,KAAAC,UAAAlC,KAAAF,WAAA0D,iBAEJ4S,KAAA,WACI7X,GAAA0C,IAAAC,aAAAC,QAAA,sBAAAc,KAAAC,UAAAlC,KAAAwH,YAGJuR,kBAAA,SAAAC,GACIhZ,KAAAF,WAAAoV,YAAA8D,GAEJC,WAAA,SAAA5O,GACIrK,KAAAwR,QAAAnH,GAGJ6O,WAAA,WACI,OAAAlZ,KAAAwR,oHC9eRjT,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIwa,SAAA,QACAC,eAAA,EACAC,YAAA9a,GAAAW,YACAoa,YAAA,EACAC,UAAA,EACAC,WAAA,EACAC,eAAA,GACAzN,MAAA,MAIJtM,OAAA,WACIM,KAAAyZ,eAAA,IAEJtR,KAAA,SAAAgQ,GAEInY,KAAAmZ,SAAAhB,GAEJpN,OAAA,SAAAC,GACI,IAAAhL,KAAAuZ,SAAA,CAEA,GAAAvZ,KAAAsZ,YAEI,GADAtZ,KAAAwZ,YAAAxO,EACAhL,KAAAwZ,YAAA,EAAA,CACI,GAAAxZ,KAAAuZ,SAAA,OAGA,GAFAvZ,KAAAuZ,UAAA,EACA3Z,QAAAiE,aAAAC,KAAAC,WAAAgM,yBAAA/P,KAAAmZ,SAAAO,YACA,GAAA1Z,KAAAyZ,eAAAE,OAAA,QACA,GAAA3Z,KAAAyZ,eAAAjD,QAAAtK,KAAAE,QACIxM,QAAAiE,aAAAC,KAAAC,WAAAkM,oBAGAjQ,KAAAgM,OAAAhM,KAAAgM,MAAA/H,KAAAzC,aAAA,SAAAoY,0BAKR5Z,KAAAwZ,YAAAxO,EACAhL,KAAAwZ,WAAA,IACIxZ,KAAAwZ,WAAA,GAGRxZ,KAAAqZ,YAAAhW,SAAArD,KAAAwZ,WAAA,IAEJ1N,eAAA,SAAAC,EAAAvD,EAAAwD,IACIA,EAAAC,KAAAC,KAAAE,QAAAJ,EAAAC,KAAAC,KAAAG,SACIrM,KAAAsZ,YAAA,GAEA,GAAAtZ,KAAAyZ,eAAAjD,QAAAxK,EAAAC,MACIjM,KAAAyZ,eAAAhD,KAAAzK,EAAAC,OAKZ4N,aAAA,SAAA9N,EAAAvD,EAAAwD,GACI,GAAAA,EAAAC,KAAAC,KAAAE,QAAAJ,EAAAC,KAAAC,KAAAG,MAAA,CACI,GAAArM,KAAAwZ,YAAA,EAAA,CAEI,GADAxZ,KAAAgM,MAAAA,EACAhM,KAAAuZ,SAAA,OAGA,GAFAvZ,KAAAuZ,UAAA,EACA3Z,QAAAiE,aAAAC,KAAAC,WAAAgM,yBAAA/P,KAAAmZ,SAAAO,YACA,GAAA1Z,KAAAyZ,eAAAE,OAAA,OAOA,aANA,GAAA3Z,KAAAyZ,eAAAjD,QAAAtK,KAAAE,QACIxM,QAAAiE,aAAAC,KAAAC,WAAAkM,oBAGAjE,EAAA/H,KAAAzC,aAAA,SAAAoY,sBAMR,GAAA5Z,KAAAyZ,eAAAjD,QAAAxK,EAAAC,MACIhE,MAAA6R,YAAA9Z,KAAAyZ,eAAAzN,EAAAC,KAEJ,GAAAjM,KAAAyZ,eAAAE,SACI3Z,KAAAsZ,YAAA,4GCjFhB,IAAAS,EAAAnT,EAAA,kBAEArI,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UACAC,WAAA,CAGIqb,QAAA,CACItV,QAAAnG,GAAAqL,GAAA,EAAA,GACAqQ,YAAA,WACAC,QAAA,4BAEJC,WAAA,CACIzV,QAAAqV,EAAAK,UAAAC,KACAJ,YAAA,aACA3J,KAAAyJ,EAAAK,UACAF,QAAA,4BAIJI,WAAA,CACI5V,QAAA,EACAuV,YAAA,aACAC,QAAA,4BAGJK,UAAA,CACI7V,QAAA,EACA4L,KAAA/R,GAAAic,QACAN,QAAA,kCAEJO,YAAA,CACI/V,QAAA,IACA4L,KAAA/R,GAAAic,QACAN,QAAA,4BAEJQ,UAAA,CACIhW,QAAA,IACA4L,KAAA/R,GAAAic,QACAN,QAAA,4BAGJS,SAAA,CACIjW,QAAA,KACA4L,KAAAsK,GAAAC,SACAX,QAAA,mDAEJY,QAAA,CACIpW,QAAAnG,GAAAqL,GAAA,EAAA,IAEJmR,QAAA,CACIrW,QAAA,KACA4L,KAAAsK,GAAAC,SACAX,QAAA,6CAEJc,QAAA,CACItW,QAAA,KACA4L,KAAA/R,GAAAM,KACAqb,QAAA,sBAEJe,UAAA,EACAC,WAAA,EACAC,WAAA,EACAC,SAAA,GACA7R,QAAA,CACI7E,QAAA,IAEJ2W,SAAA,CACI3W,QAAA,IAEJ8E,KAAAjL,GAAAkL,mBACA6R,OAAA/c,GAAAc,MACAkc,aAAAhd,GAAAid,OAEAC,eAAA,EAEAC,MAAAnd,GAAAW,YACAyc,OAAApd,GAAAW,YAEA0c,SAAArd,GAAAM,KACAgd,OAAA,IACAC,OAAA,IACAC,eAAA,EACAC,gBAAA,EACAC,WAAA,GACAC,WAAA,GAEAC,WAAA,EACAC,SAAA,EACAC,UAAA,IACAC,OAAA,EACAC,QAAA,EACAC,aAAA,EAEAhI,eAAA,GACAE,cAAA,GAGA+H,YAAA,EACAC,YAAA,GACAC,aAAA,EACAC,aAAA,EACAC,cAAA,KAEAC,SAAA,EACAC,UAAA,EACAC,QAAA,EACAC,QAAA,KACAC,UAAA,EACAC,aAAA,GACAC,QAAA,EACAC,OAAA,EACAC,YAAA,EACAC,UAAA,EACAC,QAAA,EACAC,YAAA,EACAC,eAAA,IAEJhe,OAAA,WACIM,KAAAwU,eAAA,CAAA,CACIC,KAAA,EACA1G,KAAA,MAFmB,CAInB0G,KAAA,EACA1G,KAAA,MAFD,CAIC0G,KAAA,EACA1G,KAAA,MAFD,CAIC0G,KAAA,EACA1G,KAAA,OAEJ/N,KAAA0U,cAAA,CAAA,EAAA,EAAA,EAAA,GAEA9U,QAAAiE,aAAAgB,GAAAd,WAAA0L,mBAAAzP,KAAA2d,aAAAtW,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAoM,0BAAAnQ,KAAA4d,aAAAvW,KAAArH,OAGAA,KAAAwJ,KAAAxJ,KAAAwB,aAAAjD,GAAAkL,qBAGJoU,SAAA,aAGAC,UAAA,aAEAxW,UAAA,WACI1H,QAAAiE,aAAA0D,eAAAxD,WAAA0L,oBACA7P,QAAAiE,aAAA0D,eAAAxD,WAAAoM,4BAEJhI,KAAA,SAAAgQ,EAAA4F,GAKIne,QAAAC,YAAAC,WAAAuU,UACIrU,KAAAge,cAEJhe,KAAAyb,eAAAtD,EACAnY,KAAAqb,SAAAzb,QAAAC,YAAAsV,SAAAC,UAAA+C,EAAA,GACAnY,KAAAkX,cACAlX,KAAAie,aAAAF,GACA/d,KAAAke,eACAle,KAAAme,aAAApE,EAAAK,UAAAgE,OAGJlH,YAAA,WACI,IAAAC,EAAAnX,KAAAqb,SACArb,KAAA6b,OAAA7b,KAAA8b,OAAAlc,QAAAC,YAAA2H,SAAA4K,OAAAxJ,KAAAC,MAAAjJ,QAAAC,YAAA2H,SAAA4K,QAAA+E,EAAAC,UAAA,MACApX,KAAAmc,WAAAvc,QAAAC,YAAA2H,SAAA6K,WAAA8E,EAAAE,WAAA,IACArX,KAAAoc,SAAAxc,QAAAC,YAAA2H,SAAA8K,SAAA6E,EAAAG,SAAA,GACAtX,KAAAqc,UAAAzc,QAAAC,YAAA2H,SAAA+K,UAAA3J,KAAAC,MAAAjJ,QAAAC,YAAA2H,SAAA+K,WAAA4E,EAAAI,UAAA,MACAvX,KAAAsc,OAAA1c,QAAAC,YAAA2H,SAAAgL,OAAA2E,EAAAK,OAAA,IACAxX,KAAAuc,QAAA3c,QAAAC,YAAA2H,SAAAiL,QAAA0E,EAAAM,YAAA,IACAzX,KAAAwc,aAAA5c,QAAAC,YAAA2H,SAAAkL,aAAAyE,EAAAO,aAAA,KAEJsG,YAAA,WACIhe,KAAAsd,YAAA,EACAtd,KAAAiE,KAAAoa,QAAA,GAEJV,aAAA,WACI3d,KAAAiE,KAAAoa,QAAA,IACAre,KAAAsd,YAAA,GAEJM,aAAA,WACI5d,KAAAmb,WAAA,GAEJvB,kBAAA,WAGI,IAFA,IAAAjW,EAAA,CAAA,EAAA,EAAA,EAAA,GACA2a,EAAA,EACA,GAAAte,KAAAwU,eAAA8J,GAAA7J,MAAA,CAEI,GADAxM,MAAA6R,YAAAnW,EAAA2a,GACA,GAAA3a,EAAAgW,OACI,OAEJ2E,EAAArW,MAAAsW,iBAAA5a,GAIJ,IAAA2U,EAAAtY,KAAAwU,eAAA8J,GAAA7J,KAAA,EACAzU,KAAAwU,eAAA8J,GAAA,CACI7J,KAAA6D,EACAvK,KAAAW,SAAA4P,GAAAhG,EAAA,IAEJtY,KAAA0U,cAAA4J,GAAAte,KAAAwU,eAAA8J,GAAAvQ,KAAAY,KACA3O,KAAAwe,kBAEJA,eAAA,WAEI,IADA,IAAAC,EAAA,EACA1d,EAAA,EAAAA,EAAA,EAAAA,IACI0d,GAAAze,KAAAwU,eAAAzT,GAAA0T,KAEJ,GAAA,GAAAgK,EACIze,KAAA4b,SAAAnb,QAAA,MACH,CACG,IAAAie,EAAA5b,UAAA2b,EAAA,GAAA,GACAE,EAAAF,EAAA,EAAAC,EACA1e,KAAA4b,SAAApb,SAAA,GAAAgB,aAAAjD,GAAAiM,QAAAC,YAAA7K,QAAAqD,UAAA2b,YAAAlU,eAAA,aAAAgU,EAAA,IACA1e,KAAA4b,SAAApb,SAAA,GAAAgB,aAAAjD,GAAAiM,QAAAC,YAAA7K,QAAAqD,UAAA2b,YAAAlU,eAAA,eAAAgU,EAAA,GAAA,IAAAC,GACA3e,KAAA4b,SAAAnb,QAAA,IAGRwd,aAAA,SAAAF,GACI/d,KAAAob,SAAA2C,EACA/d,KAAAsb,OAAA7Z,OAAAsc,EACAne,QAAAC,YAAAC,WAAAuU,WACIrU,KAAA0b,MAAAzX,KAAAxD,QAAA,IAKRyd,aAAA,WACIle,KAAAyb,eAAA,IACIzb,KAAA2a,SAAAkE,aAAAjf,QAAAqD,UAAA6b,eACA9e,KAAA2a,SAAAoE,QAAA/e,KAAAqb,SAAA2D,WAEAhf,KAAA2a,SAAAkE,aAAAjf,QAAAqD,UAAAgc,qBAAAjf,KAAAyb,eAAA,IAEJ,IAAA9X,EAAA3D,KAAAyb,eAAA,GAAA,CAAA,SAAA,CAAA,iBACAzb,KAAA2a,SAAAuE,aAAA,EAAAvb,EAAA,IAAA,IAGJwb,KAAA,SAAAnU,GAII,GAAAhL,KAAAga,QAAA,CACA,IAAAoF,EAAA,GAAA7gB,GAAA8gB,KAAAC,iBAAA1W,KAAA2W,MAAAvf,KAAAga,QAAA9O,EAAAlL,KAAAga,QAAA/O,IAEIjL,KAAA2a,SAAA1W,KAAAub,OADJJ,EAAA,KAAAA,EAAA,GACI,EAEA,EAEJ,IAAAK,EAAAzf,KAAAiE,KAAAyb,SAAAC,IAAA3f,KAAAga,QAAA4F,IAAA5f,KAAAsa,WAAAtP,IACAhL,KAAAiE,KAAA4b,YAAAJ,KAGJK,SAAA,SAAA9U,GAGI,GAFAhL,KAAA8c,UAAA9R,EACAhL,KAAA+c,WAAA/R,EACAhL,KAAAgd,OACIhd,KAAA+c,UAAA,IACI/c,KAAA+c,UAAA,EACA/c,KAAAib,UAEIjb,KAAAud,UAAAvd,KAAA+f,OAAA/f,KAAAid,UAGAjd,KAAAud,UAAAvd,KAAA+f,OAAA/f,KAAAid,QAAA+C,OAAA,WARZ,CAaA,GAAA,MAAApgB,QAAAC,YAAAC,WAAAyU,UAAA,CACI,IAAA0L,EAAA1hB,GAAAqL,GAAAhK,QAAAC,YAAAC,WAAAyU,UAAA2L,cAAAC,IAAA5hB,GAAAqL,GAAA5J,KAAAiE,KAAAyb,WACAU,EAAAH,EAAA9U,MACA,GAAAvL,QAAAC,YAAAC,WAAAyU,UAAA8L,UAAA,GAAAD,EAAAxgB,QAAAC,YAAAC,WAAAyU,UAAA8L,UAAA,EAQI,OAPArgB,KAAAyd,aAAAzS,EACAhL,KAAAyd,YAAA,IACIzd,KAAAyd,YAAAzd,KAAA0d,eACA1d,KAAAsgB,SAAA,GAAA,IAEJtgB,KAAAwd,QAAA,QACAxd,KAAAud,UAAAvd,KAAA+f,OAAAE,EAAAM,cAGAvgB,KAAAwd,QAAA,OAGJxd,KAAAwd,QAAA,EAGJ,GAAAxd,KAAA8c,SAAA,EAEI,GAAA9c,KAAAwd,QAAAxd,KAAAkb,WAAAlb,KAAAib,SAKI,IAAAjb,KAAAwd,QAAA5d,QAAAC,YAAAC,WAAAuU,WAAArU,KAAAmb,WAAAnb,KAAAib,SACIjb,KAAA8c,SAAA,GAEA9c,KAAAwgB,gBACH,CAEGxgB,KAAA8c,SAAA7U,MAAAC,UAAA,EAAA,GACA,IAAAuY,EAAAliB,GAAAqL,GAAA,EAAA,GAAAoW,OAAAzhB,GAAA8gB,KAAAC,iBAAArX,MAAAC,UAAA,EAAA,QACAlI,KAAAud,UAAAvd,KAAA+f,OAAAU,QAZJzgB,KAAA8c,SAAA,IAEA9c,KAAAud,UAAAvd,KAAA0gB,cAgBZA,UAAA,WAII,IAHA,IAAAvM,EAAAvU,QAAAC,YAAAC,WAAAqU,UAAAjU,SACAygB,EAAA,IACA/J,GAAA,EACA7V,EAAA,EAAAA,EAAAoT,EAAAwF,OAAA5Y,IAAA,CACI,IAAAqf,EAAA7hB,GAAAqL,GAAAuK,EAAApT,GAAA2e,UAAAS,IAAA5hB,GAAAqL,GAAA5J,KAAAiE,KAAAyb,WAAAvU,MACA,GAAAiV,EAAAO,EAAA,CACI,GAAA,MAAA/gB,QAAAC,YAAAC,WAAAyU,WACIhW,GAAAqL,GAAAhK,QAAAC,YAAAC,WAAAyU,UAAA2L,cAAAC,IAAA5hB,GAAAqL,GAAAuK,EAAApT,GAAA2e,WAAAvU,MACAvL,QAAAC,YAAAC,WAAAyU,UAAA8L,UAAA,EACI,SAGRM,EAAAP,EACAxJ,EAAA7V,GAGR,IAAAkf,EAAA,KACA,IAAA,GAAArJ,EACI5W,KAAAkb,WAAA,MACH,CACG,IAAA0F,EAAAzM,EAAAyC,GACAqJ,EAAA1hB,GAAAqL,GAAAgX,EAAAlB,UAAAS,IAAA5hB,GAAAqL,GAAA5J,KAAAiE,KAAAyb,WAAAa,YAEJvgB,KAAA+f,OAAAE,IAEJO,UAAA,WAII,IAHA,IAAApM,EAAAxU,QAAAC,YAAAC,WAAAsU,UAAAlU,SACAygB,EAAA,IACA/J,GAAA,EACA7V,EAAA,EAAAA,EAAAqT,EAAAuF,OAAA5Y,IAAA,CACI,IAAAqf,EAAA7hB,GAAAqL,GAAAwK,EAAArT,GAAA2e,UAAAS,IAAA5hB,GAAAqL,GAAA5J,KAAAiE,KAAAyb,WAAAvU,MACA,GAAAiV,EAAA,GAEI,YADApgB,KAAA+f,OAAAxhB,GAAAqL,GAAA,EAAA,IAGJ,GAAAwW,EAAAO,EAAA,CACI,GAAA,MAAA/gB,QAAAC,YAAAC,WAAAyU,WACIhW,GAAAqL,GAAAhK,QAAAC,YAAAC,WAAAyU,UAAA2L,cAAAC,IAAA5hB,GAAAqL,GAAAwK,EAAArT,GAAA2e,WAAAvU,MACAvL,QAAAC,YAAAC,WAAAyU,UAAA8L,UAAA,EACI,SAGRM,EAAAP,EACAxJ,EAAA7V,GAGR,IAAAkf,EAAA1hB,GAAAqL,GAAA,EAAA,GACA,IAAA,GAAAgN,EACI5W,KAAAmb,WAAA,MACH,CACG,IAAA0F,EAAAzM,EAAAwC,GACAqJ,EAAA1hB,GAAAqL,GAAAiX,EAAAnB,UAAAS,IAAA5hB,GAAAqL,GAAA5J,KAAAiE,KAAAyb,WAAAa,YAEJvgB,KAAA+f,OAAAE,IAEJ9B,aAAA,SAAA2C,GACI,IAAA9gB,KAAAod,QACApd,KAAAma,YAAA2G,EAAA,CACI9gB,KAAAma,WAAA2G,EAEA,IAAAnd,EAAA3D,KAAAyb,eAAA,GAAA,CAAA,QAAA,OAAA,QAAA,CAAA,gBAAA,MAAA,OACAzb,KAAA2a,SAAAuE,aAAA,EAAAvb,EAAAmd,IAAA,KAGRf,OAAA,SAAAgB,GACI/gB,KAAAod,SACA2D,GAAA,GAAAA,EAAA5V,MACInL,KAAAme,aAAApE,EAAAK,UAAAC,MAEAra,KAAAme,aAAApE,EAAAK,UAAAgE,MAEJpe,KAAAga,QAAA+G,EACA/gB,KAAAgd,QACAhd,KAAAghB,UAAAD,KAEJC,UAAA,SAAAD,GAMI,GALA,MAAAA,IACIA,EAAA/gB,KAAAga,SAEJha,KAAA8a,QAAAiG,EACA/gB,KAAAid,QAAA8D,EACA/gB,KAAAib,SAAA,CACAjb,KAAAgb,QAAAiG,UAAA1iB,GAAA8gB,KAAAC,iBAAA1W,KAAA2W,MAAAwB,EAAA7V,EAAA6V,EAAA9V,IAGA,IAAAmU,EAAA,GAAApf,KAAAgb,QAAAiG,SAGIjhB,KAAAgb,QAAAkG,OADJ9B,EAAA,KAAAA,EAAA,GACI,EAEA,IAGRrU,OAAA,SAAAC,GACI,IAAAhL,KAAAod,OAAA,CAEA,OADApd,KAAA8f,SAAA9U,GACAhL,KAAAma,YACI,KAAAJ,EAAAK,UAAAC,KACIra,KAAAsa,WAAAta,KAAAua,UACA,MACJ,KAAAR,EAAAK,UAAA+G,OACInhB,KAAAsa,WAAAta,KAAAya,YAEA,MACJ,KAAAV,EAAAK,UAAAgE,KACIpe,KAAAsa,WAAAta,KAAAqc,UAAAzT,KAAAC,MAAA7I,KAAAqc,UAAArc,KAAA0U,cAAApG,UAAA3D,QAKR3K,KAAAmf,KAAAnU,GAEAhL,KAAAsd,aAEAtd,KAAAkd,WAAAlS,EACAhL,KAAAkd,UAAA,IACIld,KAAAkd,UAAAld,KAAAmd,aACAnd,KAAAohB,gBAEJphB,KAAAgd,SACIhd,KAAA0c,aAAA1R,EACAhL,KAAA0c,YAAA,IAAA1c,KAAA2c,cACI3c,KAAA0c,YAAA1c,KAAA+b,eACA/b,KAAAqhB,UAIRrhB,KAAA2c,cACI3c,KAAA4c,cAAA5R,EACAhL,KAAA2c,aAAA3c,KAAA4c,aAAA,IACI5c,KAAA2c,aAAA,EACA3c,KAAAiY,iBAKZqJ,WAAA,aAMAF,aAAA,WAEIphB,KAAAib,WACIjb,KAAAuJ,QAAAqB,MAAA,KAEJ,IAAAsJ,EAAAtU,QAAAC,YAAAC,WAAAoU,WAAAhU,SAOA+H,MAAA6R,YAAA5F,EAAAlU,KAAAwB,aAAA,UAGA,IAFA,IAAAmf,EAAA,IACA/J,GAAA,EACA7V,EAAA,EAAAA,EAAAmT,EAAAyF,OAAA5Y,IAAA,CACI,IAAAqf,EAAA7hB,GAAAqL,GAAAsK,EAAAnT,GAAAkD,KAAAyb,UAAAS,IAAA5hB,GAAAqL,GAAA5J,KAAAiE,KAAAyb,WAAAvU,MACAiV,EAAAO,GAAAP,EAAA,IAAApgB,KAAAuJ,QAAAqB,QACI+V,EAAAP,EACAxJ,EAAA7V,GAGR,IAAAkf,EAAA,KACA,IAAA,GAAArJ,EACI5W,KAAAgd,QAAA,MACH,CACG,IAAAuE,EAAArN,EAAA0C,GAAA3S,KACAgc,EAAA1hB,GAAAqL,GAAA2X,EAAA7B,UAAAS,IAAA5hB,GAAAqL,GAAA5J,KAAAiE,KAAAyb,WAAAa,YACAvgB,KAAAgd,QAAA,EAEJhd,KAAAghB,UAAAf,IAGJoB,MAAA,WACI,GAAArhB,KAAAib,SAAA,CACA,GAAAjb,KAAAgY,YAAA,CACIhY,KAAA+a,QAAAmE,aAAA,EAAA,UAAAlf,KAAAuJ,QAAAyV,UAAA,GACA,IAAAwC,EAAA5Y,KAAA6Y,KAAAzhB,KAAAuJ,QAAAiY,OAAAxhB,KAAAmc,WAAAnc,KAAA0U,cAAApG,UAAAC,UACAmT,GAAA,EAMA,GALAzZ,MAAAyZ,OAAA1hB,KAAAoc,SAAApc,KAAA0U,cAAApG,UAAAG,SACI+S,GAAA,EACAE,GAAA,GAGJ,MAAA1hB,KAAAuJ,QAAAgB,SAAA,CACI3K,QAAAqD,UAAA0e,aAAA3hB,KAAAiE,OAAArE,QAAAU,aAAAC,WAAA,aAAA,IAAA,GACA,IAAAqhB,EAAArjB,GAAAsjB,YAAA7hB,KAAAub,cACAuG,EAAAvjB,GAAAsjB,YAAA7hB,KAAAub,cACAwG,EAAAxjB,GAAAsjB,YAAA7hB,KAAAub,cACAyG,EAAAhiB,KAAAiE,KAAAge,OAAAA,OAAAC,qBAAAliB,KAAAgb,QAAAxa,SAAA,GAAA2hB,sBAAA5jB,GAAAqL,GAAA,EAAA,KACAgY,EAAAK,OAAAH,EAAAG,OAAAF,EAAAE,OAAAjiB,KAAAiE,KAAAge,OAAAA,OACAL,EAAA/B,YAAAmC,GACAF,EAAAjC,YAAAmC,GACAD,EAAAlC,YAAAmC,GACAJ,EAAAX,SAAAjhB,KAAAgb,QAAAiG,SACAa,EAAAb,SAAAjhB,KAAAgb,QAAAiG,SAAA,GACAc,EAAAd,SAAAjhB,KAAAgb,QAAAiG,SAAA,GACA,IAAAmB,EAAA7jB,GAAAqL,GAAA5J,KAAA8a,SACAuH,EAAAT,EAAApgB,aAAA,UACA6gB,EAAAhZ,WAAArJ,KAAAwJ,KAAAyC,IACAoW,EAAA/Y,YAAAtJ,KAAAob,SACAiH,EAAA1Y,QAAAyY,EACAC,EAAAla,KAAAnI,KAAAuJ,QAAAiY,EAAAE,GACA,IAAAY,EAAAR,EAAAtgB,aAAA,UACA8gB,EAAAjZ,WAAArJ,KAAAwJ,KAAAyC,IACAqW,EAAAhZ,YAAAtJ,KAAAob,SACAkH,EAAA3Y,QAAAyY,EAAApC,QAAAzhB,GAAA8gB,KAAAkD,iBAAA,KACAD,EAAAna,KAAAnI,KAAAuJ,QAAAiY,EAAAE,GACA,IAAAc,EAAAT,EAAAvgB,aAAA,UACAghB,EAAAnZ,WAAArJ,KAAAwJ,KAAAyC,IACAuW,EAAAlZ,YAAAtJ,KAAAob,SACAoH,EAAA7Y,QAAAyY,EAAApC,QAAAzhB,GAAA8gB,KAAAkD,kBAAA,KACAC,EAAAra,KAAAnI,KAAAuJ,QAAAiY,EAAAE,OACH,CACG,MAAA1hB,KAAAuJ,QAAAgB,SACI3K,QAAAqD,UAAA0e,aAAA3hB,KAAAiE,OAAArE,QAAAU,aAAAC,WAAA,eAAA,IAAA,GACH,MAAAP,KAAAuJ,QAAAgB,UACG3K,QAAAqD,UAAA0e,aAAA3hB,KAAAiE,OAAArE,QAAAU,aAAAC,WAAA,gBAAA,IAAA,GAEJ,IAAAyN,EAAAzP,GAAAsjB,YAAA7hB,KAAAub,cACAkH,EAAAziB,KAAAiE,KAAAge,OAAAA,OAAAC,qBAAAliB,KAAAgb,QAAAxa,SAAA,GAAA2hB,sBAAA5jB,GAAAqL,GAAA,EAAA,KACAoE,EAAAiU,OAAAjiB,KAAAiE,KAAAge,OAAAA,OACAjU,EAAA6R,YAAA4C,GACAzU,EAAAiT,SAAAjhB,KAAAgb,QAAAiG,SACA,IAAAyB,EAAA1U,EAAAxM,aAAA,UACAkhB,EAAArZ,WAAArJ,KAAAwJ,KAAAyC,IACAyW,EAAApZ,YAAAtJ,KAAAob,SACAsH,EAAA/Y,QAAA3J,KAAA8a,QACA4H,EAAAva,KAAAnI,KAAAuJ,QAAAiY,EAAAE,GAEJ1hB,KAAA2iB,qBAEA3iB,KAAA4iB,SAEJ,GAAA5iB,KAAAkc,YACIlc,KAAA4iB,WAGR5K,UAAA,WACI,IAAArY,EAAAK,KAAAkc,WAAA,EACA,OAAAvc,EAAA,GACIK,KAAAkc,WAAA,EACAlc,KAAA2iB,iBACA,IAEA3iB,KAAAkc,WAAAvc,EACAK,KAAA2iB,iBACA,IAGRC,OAAA,WACI5iB,KAAAib,WACAjb,KAAA2c,cACA/c,QAAAqD,UAAA0e,aAAA3hB,KAAAiE,OAAArE,QAAAU,aAAAC,WAAA,SAAA,IACAP,KAAA+a,QAAAmE,aAAA,EAAA,UAAAlf,KAAAuJ,QAAAyV,UAAA,GACAhf,KAAA4c,aAAA5c,KAAAgc,gBACAhc,KAAA2c,aAAA,KAEJ1E,UAAA,WACIjY,KAAAkc,WAAAlc,KAAAic,WACAjc,KAAA2iB,iBAEJA,cAAA,WACI3iB,KAAA2b,OAAAtY,SAAArD,KAAAkc,WAAAlc,KAAAic,YAEJ4G,aAAA,WACI7iB,KAAA0b,MAAArY,SAAArD,KAAA8b,OAAA9b,KAAA6b,QAEJiH,YAAA,SAAAC,GACInjB,QAAAqD,UAAA0e,aAAA3hB,KAAAiE,OAAArE,QAAAU,aAAAC,WAAA,YAAA,IACAP,KAAAuJ,QAAA3J,QAAAC,YAAAsV,SAAAE,WAAA0N,GACA/iB,KAAA+b,eAAA/b,KAAAuJ,QAAAyZ,WACAhjB,KAAAgc,gBAAAhc,KAAAuJ,QAAA0Z,YACAjjB,KAAAic,WAAAjc,KAAAuJ,QAAA2Z,QACAljB,KAAAiY,YACAjY,KAAAgb,QAAAva,QAAA,EAEIT,KAAA+a,QAAA8D,aADJkE,EAAA,EACInjB,QAAAqD,UAAAkgB,iBAAA,GAEAvjB,QAAAqD,UAAAkgB,iBAAA,GAEJnjB,KAAA+a,QAAAgE,QAAA/e,KAAAuJ,QAAAyV,UACAhf,KAAAib,UAAA,EACAjb,KAAAghB,UAAAhhB,KAAAga,UAGJ1U,QAAA,aAGAwG,eAAA,SAAAC,EAAAvD,EAAAwD,GAAqC,IAAAlG,EAAA9F,KACjC,IAAAA,KAAAod,QACA5U,EAAAyD,KAAAC,KAAA+B,MACA,GAAAjC,EAAAC,KAAAC,KAAA6B,KAAA,CACI,IAAAqV,EAAApX,EAAA/H,KAAAzC,aAAA,cACA,GAAA4hB,EAAAC,SAAAvC,OAAA1S,SAAAC,OAAA,CACI,IAAA0U,EAAAK,EAAAC,SAAAN,MACA/iB,KAAAib,WACIhT,MAAA6R,YAAAla,QAAAC,YAAAC,WAAAqU,UAAAnI,EAAA/H,MACAjE,KAAA8iB,YAAAC,GACA/W,EAAA/H,KAAAC,gBASPkf,EAAAC,SAAAvC,OAAA1S,SAAAL,MACG/N,KAAAsF,eAEP,GAAA0G,EAAAC,KAAAC,KAAA8B,OAAA,CACG,IAAApO,QAAAC,YAAAC,WAAAuU,SAAA,OACA,IAAAiP,EAAAtX,EAAA/H,KAAAzC,aAAA,UACA,GAAA8hB,EAAAja,YAAAb,EAAAyD,IAAA,OACA,GAAAD,EAAA/H,MAAAjE,KAAA6c,cAAA,OACA7c,KAAA6c,cAAA7Q,EAAA/H,KACAjE,KAAAsgB,SAAAgD,EAAAtZ,OAAAsZ,EAAAja,WAAAia,EAAAha,YAAAga,EAAArZ,QAAAqZ,EAAA/Z,QAAAgB,eACHyB,EAAAC,KAAAC,KAAAC,UACGnM,KAAAud,UAAA,EACAvd,KAAAga,SAAAha,KAAAga,QAAAuJ,WAAAhlB,GAAA8gB,KAAAkD,iBAAAta,MAAAC,UAAA,GAAA,OACAlI,KAAAwjB,aAAA,WACI1d,EAAAyX,UAAA,GACH,KACJvR,EAAAC,KAAAC,KAAAiC,MACGnO,KAAAsgB,SAAA,KAAA,IAGR1I,SAAA,SAAAvB,GACI,IAAA1W,EAAAK,KAAA8b,OAAAzF,EACA,OAAA1W,GAAA,GACIK,KAAA8b,OAAA,EACA9b,KAAA6iB,gBACA,IAEA7iB,KAAA8b,OAAAnc,EACAK,KAAA6iB,gBACA,IAGRvC,SAAA,SAAAtW,EAAAyZ,EAAAna,EAAAW,EAAAyZ,GAAgE,IAAAld,EAAAxG,KAuB5D,GAtBAJ,QAAAqD,UAAA0e,aAAA3hB,KAAAiE,OAAArE,QAAAqD,UAAA0gB,eAAA,YAAA,SAAA1f,GACI,IAAA2f,EAAA3f,EAAAge,OAAAC,qBAAA1b,EAAAvC,KAAAke,sBAAA5jB,GAAAqL,GAAA,GAAA,MACA3F,EAAA4b,YAAA+D,GACA,IAAAC,EAAAjb,KAAA6Y,KAAAzX,EAAAxD,EAAA+V,SAAA3T,KAAA6Y,KAAAzX,EAAAxD,EAAAkO,cAAApG,UAAAE,MAEAsV,EAAA,gBADA9Z,GAAA6Z,GACA,WACA5Z,IACI6Z,EAAA,2BAAA9Z,EAAA,YAEJ6Z,IACIC,GAAA,8BAAAD,EAAA,YAEJ5f,EAAAzC,aAAAjD,GAAAwlB,UAAAtiB,OAAA,MAAAqiB,EAAA,OAEA,IAAAE,EAAAzlB,GAAAqL,GAAA3B,MAAAC,UAAA,GAAA,KAAAD,MAAAC,UAAA,GAAA,MACA+b,EAAA,CAAAL,EAAArlB,GAAAqL,GAAAga,EAAA3Y,EAAA+Y,EAAA/Y,EAAA,GAAA2Y,EAAA1Y,EAAA8Y,EAAA9Y,EAAA,IAAA0Y,EAAAjE,IAAAqE,IACAE,EAAA3lB,GAAAgN,SAAAhN,GAAA4lB,MAAA5lB,GAAA6lB,OAAA,IAAA7lB,GAAAoS,QAAA,GAAA,KAAApS,GAAA8lB,SAAA,GAAAJ,IAAA1lB,GAAAiN,UAAA,IAAAjN,GAAA+lB,QAAA,IAAA/lB,GAAAkN,SAAA,WACIxH,EAAAC,aAEJD,EAAAqH,UAAA4Y,IACHlkB,KAAAiE,KAAAge,OAAAA,QAEDjiB,KAAA4X,SAAA5N,QAAA,CAOI,GAJApK,QAAAqD,UAAA0e,aAAA3hB,KAAAiE,OAAArE,QAAAU,aAAAC,WAAA,YAAA,IACAP,KAAAiE,KAAAge,OAAAriB,QAAAqD,UAAAshB,QAAA,WAAAC,eAAA,kBACAxkB,KAAAwJ,KAAAsB,SAAA,EACA9K,KAAAod,QAAA,GACA,GAAAqG,EACI7jB,QAAAqD,UAAAC,UAAAlD,KAAAob,SAAA,kCACH,IAAA,GAAAqI,EACG7jB,QAAAqD,UAAAC,UAAAlD,KAAAob,SAAA,uCACH,CACG,IAAAqJ,EAAA7kB,QAAAC,YAAAqY,WAAAuL,EAAAna,GAIA,GAHAA,GAAA1J,QAAAC,YAAA2H,SAAAkK,aACIpI,EAAA,kBAAAA,EAAA,YAEJmb,EAAA,EAAA,CACI,IAAAC,EAAAD,EAAA,EAAA,EAAAA,EACA7kB,QAAAU,aAAAC,WAAA,OAAAmkB,EAAA,IACA9kB,QAAAqD,UAAAC,UAAAoG,EAAA,KAAAmb,QAEA7kB,QAAAqD,UAAAC,UAAAoG,EAAA,uBAAAtJ,KAAAob,UAGJ,GAAAqI,IACIllB,GAAAyG,IAAA,kCACApF,QAAAC,YAAAiZ,eAAA,EAAA,GACA,MAAA4K,GACI9jB,QAAAC,YAAAiZ,eAAA,EAAA,IAKZ,GAAA9Y,KAAAib,SAAA,CACI,IAAA0J,EAAA/kB,QAAAqD,UAAA2hB,SAAApkB,SAAA,GAAAgB,aAAA,WACA5B,QAAAqD,UAAA0gB,eAAA,aAAA,SAAA1f,GACI,IAAA4gB,EAAAF,EAAAG,WAAA5C,qBAAA1b,EAAAvC,KAAAke,sBAAA5jB,GAAAqL,GAAA,EAAA,KACA3F,EAAAge,OAAA0C,EAAAG,WACA7gB,EAAA4b,YAAAgF,GACA,IAAAE,EAAA,CACIjE,MAAA1S,SAAAC,OACA0U,MAAA9a,MAAAe,SAAApJ,QAAAC,YAAAsV,SAAAE,WAAA7O,EAAA+C,UAGJtF,EAAAzC,aAAA,cAAA2G,KAAA4c,GACAnlB,QAAAC,YAAAC,WAAAqU,UAAAsC,KAAAxS,KAGRjE,KAAAiE,KAAA+gB,gBAAA,GAOA,IAAArhB,EAAA3D,KAAAyb,eAAA,GAAA,CAAA,QAAA,CAAA,SACAzb,KAAA2a,SAAAuE,aAAA,EAAAvb,EAAA,IAAA,GACA3D,KAAAgb,QAAAva,QAAA,EACAwH,MAAA6R,YAAAla,QAAAC,YAAAC,WAAAoU,WAAAlU,KAAAiE,KAAAzC,aAAA,UACA5B,QAAAiE,aAAAC,KAAAC,WAAAoL,gLCluBZ,IAAA8V,EAAAre,EAAA,UAAAqe,aAEA1mB,GAAAC,MAAA,CACI2F,KAAA,eAEAxF,WAAA,CACIumB,cAAAD,GAGJtgB,KAAA,WACI3E,KAAAklB,cAAA,IAAAD,EACAjlB,KAAAklB,cAAAC,gBAAA,IAGJtgB,GAAA,SAAAugB,EAAAC,GACIrlB,KAAAklB,cAAArgB,GAAAugB,EAAAC,IAKJC,KAAA,SAAAF,EAAAC,GACIrlB,KAAAklB,cAAAI,KAAAF,EAAAC,IAGJvhB,KAAA,SAAAshB,EAAA5c,EAAA+c,GACI/c,GAAA+c,EACIvlB,KAAAklB,cAAAphB,KAAAshB,EAAA5c,EAAA+c,GAGJ/c,EACIxI,KAAAklB,cAAAphB,KAAAshB,EAAA5c,GAIJxI,KAAAklB,cAAAphB,KAAAshB,IAGJ7d,eAAA,SAAA6d,EAAAC,GACI,GAAAA,EACI,OAAArlB,KAAAklB,cAAA3d,eAAA6d,EAAAC,GAIJrlB,KAAAklB,cAAAM,mBAAAJ,uHC3CR,IAAAK,EAAA7e,EAAA,gBACA8e,EAAA9e,EAAA,aACA+e,EAAA/e,EAAA,eACAgf,EAAAhf,EAAA,gBAEAhH,EAAArB,GAAAC,MAAA,CACIG,WAAA,CACIkF,aAAA+hB,EACA/lB,YAAA8lB,EACArlB,aAAAmlB,EAGAxiB,UAAAyiB,GAIJ/gB,KAAA,WACI3E,KAAA6D,aAAA,IAAA+hB,EACA5lB,KAAAH,YAAA,IAAA8lB,EACA3lB,KAAAM,aAAA,IAAAmlB,EAGAzlB,KAAAiD,UAAA,MAIJ4iB,MAAA,eASA9gB,QAAAC,IAAA,6BACAsD,OAAA1I,QAAA,IAAAA,EACA0I,OAAA1I,QAAAimB,8NCpCJtnB,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,YAAAmnB,EAAA,CACIC,SAAAxnB,GAAAynB,SACAC,aAAA1nB,GAAAid,OACA0K,eAAA3nB,GAAAid,OACA2K,iBAAA5nB,GAAAid,OAEA4K,cAAA7nB,GAAAM,KACAwnB,gBAAA9nB,GAAAM,KACAimB,WAAAvmB,GAAAM,KACAynB,YAAA/nB,GAAAM,KACA0nB,uBAAAhoB,GAAAM,KACA2nB,gBAAAjoB,GAAAM,KACA4nB,UAAAloB,GAAAM,KAEA6nB,SAAAnoB,GAAA6L,YAEAuc,QAAA,GACAC,OAAA,GACAC,aAAA,EAEAC,SAAAvoB,GAAAM,KACAkoB,UAAAxoB,GAAAM,KACAmoB,UAAAzoB,GAAAM,KACAooB,WAAA,MACA/G,aAAA3hB,GAAAqL,GAAA,EAAA,GACAsd,UAAA,GAzBMpB,EAAA,WAAA,EAAAA,EAAAqB,UAAA,EAAArB,EAAAsB,aAAA,GAAAtB,GA8BVpmB,OAAA,WACIE,QAAAiE,aAAAgB,GAAAd,WAAA4L,sBAAA3P,KAAAqnB,cAAAhgB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAA+L,eAAA9P,KAAAsnB,QAAAjgB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAgM,yBAAA/P,KAAAunB,iBAAAlgB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAyjB,gBAAAxnB,KAAAynB,SAAApgB,KAAArH,OAEAA,KAAA0nB,eAKJpgB,UAAA,WACI1H,QAAAiE,aAAA0D,eAAAxD,WAAA4L,uBACA/P,QAAAiE,aAAA0D,eAAAxD,WAAA+L,gBACAlQ,QAAAiE,aAAA0D,eAAAxD,WAAAgM,0BACAnQ,QAAAiE,aAAA0D,eAAAxD,WAAAyjB,kBAGJrf,KAAA,SAAAwf,EAAAC,EAAAC,GAAuC,IAAA/hB,EAAA9F,KACnCA,KAAA8nB,UAAAD,GACA7nB,KAAA+nB,sBAAAJ,EAAAC,GACA5nB,KAAAgoB,SAAA,WACIliB,EAAAmiB,qBAAAN,EAAA1f,MAAAC,UAAA,EAAA,KAAA,MACH,GAAA,GAAA,IACDlI,KAAAkoB,WAEJnd,OAAA,SAAAC,GACIhL,KAAAmoB,aAAAnd,GACAhL,KAAA6mB,cACA7mB,KAAA4mB,QAAA5b,EACAhL,KAAA4mB,OAAA,IACI5mB,KAAA4mB,OAAA5mB,KAAA2mB,QACA3mB,KAAAooB,aAGRF,QAAA,WACIloB,KAAA8mB,SAAAtmB,SAAA,GAAA6nB,MAAAroB,KAAA8mB,SAAAtmB,SAAA,GAAA8nB,OAAA,IAAA,IAAA,MAEAtoB,KAAA8mB,SAAAtmB,SAAA,GAAA8K,UAAA/M,GAAAgN,SAAAhN,GAAAgqB,OAAA,EAAA,KAAAhqB,GAAAgqB,OAAA,GAAA,MAAA1c,kBAEJwb,cAAA,SAAA5O,EAAA+P,GACIxoB,KAAAknB,UAAAzO,EACAzY,KAAAinB,WAAAuB,EAAAvB,WAAA,IAAA,MACAjnB,KAAAkgB,aAAAjV,EAAAud,EAAAtI,aAAAjV,EAAA,IAAA,MACAjL,KAAAkgB,aAAAhV,EAAAsd,EAAAtI,aAAAhV,EAAA,IAAA,MAEAtL,QAAAC,YAAAC,WAAAyU,UAAA,CACI2L,aAAAlgB,KAAA8mB,SAAAtmB,SAAA,GAAAkf,SACAW,UAAArgB,KAAA8mB,SAAAtmB,SAAA,GAAA6nB,QAGRF,aAAA,SAAAnd,GACI,KAAAhL,KAAAinB,WAAA,IAGA,GAAAjnB,KAAAknB,UAAA,CAEI,GAAAlnB,KAAA8mB,SAAAtmB,SAAA,GAAA6nB,OAAAroB,KAAAinB,WAGI,OAFAjnB,KAAA8mB,SAAAtmB,SAAA,GAAA6nB,MAAAroB,KAAA8mB,SAAAtmB,SAAA,GAAA8nB,OAAAtoB,KAAAinB,WAEAjnB,KAAAinB,YAAA,OACIjnB,KAAAinB,YAAA,SAGJ,EAGJ,IAAAwB,EAAAzd,GAAA,GAAA,KAAA,MASA,GARAhL,KAAA8mB,SAAAtmB,SAAA,GAAA6nB,OAAAI,EACAzoB,KAAA8mB,SAAAtmB,SAAA,GAAA8nB,QAAAG,EAGA7oB,QAAAC,YAAAC,WAAAyU,UAAA,CACI2L,aAAAlgB,KAAA8mB,SAAAtmB,SAAA,GAAAkf,SACAW,UAAArgB,KAAA8mB,SAAAtmB,SAAA,GAAA6nB,OAEJ,IAAAroB,KAAAinB,WAAA,OACA,GAAAhf,MAAAygB,YAAA1oB,KAAA8mB,SAAAtmB,SAAA,GAAAkf,SAAA1f,KAAA8mB,SAAAtmB,SAAA,GAAA6nB,MAAA,EAAAroB,KAAAkgB,aAAAlgB,KAAAinB,WAAA,IAGIre,KAAA+f,IAAA3oB,KAAA8mB,SAAAtmB,SAAA,GAAA6nB,MAAAroB,KAAAinB,YAAA,IACA,CAKI,IAAA2B,GAAA5oB,KAAA8mB,SAAAtmB,SAAA,GAAA0K,EAAAlL,KAAAkgB,aAAAhV,IAAAlL,KAAA8mB,SAAAtmB,SAAA,GAAAyK,EAAAjL,KAAAkgB,aAAAjV,GAEA4d,EAAAJ,EAAAK,WAAAlgB,KAAAmgB,KAAA,GAAAH,EAAAA,EAAA,KAGA5oB,KAAA8mB,SAAAtmB,SAAA,GAAAyK,GAAA,GAAAjL,KAAA8mB,SAAAtmB,SAAA,GAAAyK,EAAAjL,KAAAkgB,aAAAjV,EAAA,GAAA,GAAA4d,EAEA7oB,KAAA8mB,SAAAtmB,SAAA,GAAA0K,EAAA0d,GAAA5oB,KAAA8mB,SAAAtmB,SAAA,GAAAyK,EAAAjL,KAAAkgB,aAAAjV,GAAAjL,KAAAkgB,aAAAhV,EAMAtL,QAAAC,YAAAC,WAAAyU,UAAA,CACI2L,aAAAlgB,KAAA8mB,SAAAtmB,SAAA,GAAAkf,SACAW,UAAArgB,KAAA8mB,SAAAtmB,SAAA,GAAA6nB,UAMpBf,QAAA,SAAA0B,GAAyB,IAAAxiB,EAAAxG,KACrBgpB,EAAAA,EAAAC,IAAA,KAAArJ,IAAA,OACAhgB,QAAAqD,UAAA0gB,eAAA,UAAA,SAAA1f,GACIuC,EAAA4gB,aAAA3Q,KAAAxS,GACArE,QAAAC,YAAAC,WAAAsU,UAAAqC,KAAAxS,GACAA,EAAA4b,YAAAmJ,GACA/kB,EAAAzC,aAAA,WAAA2G,KAAAF,MAAAe,SAAAxC,EAAA4gB,aAAAnjB,IACArE,QAAAiE,aAAAC,KAAAC,WAAAoM,4BACHnQ,KAAA+mB,YAELQ,iBAAA,SAAApP,GACIlQ,MAAA6R,YAAAla,QAAAC,YAAAC,WAAAsU,UAAApU,KAAAonB,aAAAtkB,SAAAqV,KACAnY,KAAAonB,aAAAtkB,SAAAqV,IAAAjU,WAEJujB,SAAA,SAAAuB,EAAAE,GACIF,EAAAA,EAAAC,IAAA,KAAArJ,IAAA,OACAsJ,EAAA,MAAAA,EAAA,IAEA,IADA,IAAAC,EAAA,GACApoB,EAAA,EAAAA,EAAA,GAAAA,IACIooB,EAAA1S,KAAAxO,MAAAmhB,cAAAJ,EAAAE,EAAA,EAAA,IAEJlpB,KAAAqpB,WAAAF,EAAA,IAEJE,WAAA,SAAAF,EAAAhR,GAA4B,IAAArB,EAAA9W,KACxB,GAAAmY,GAAAgR,EAAAxP,OACI/Z,QAAAiE,aAAAC,KAAAC,WAAAiM,+BADJ,CAIA,IAAAsZ,EAAArhB,MAAAC,UAAA,EAAA,GAAA,GACAlI,KAAAiE,KAAAqH,UAAA/M,GAAAgN,SAAAhN,GAAAiN,UAAA8d,GAAA/qB,GAAAkN,SAAA,WACI7L,QAAAqD,UAAA0gB,eAAA,OAAA,SAAA1f,GAEIA,EAAA4b,YAAAsJ,EAAAhR,IACAlU,EAAAzD,SAAA,GAAAgB,aAAAoZ,GAAAC,UAAAqE,aAAA,EAAA,aAAA,GACAjb,EAAAzD,SAAA,GAAA8K,UAAA/M,GAAAgN,SAAAhN,GAAAgrB,OAAA,EAAAhrB,GAAAqL,GAAA,GAAA,MAAArL,GAAA+lB,QAAA,KACArgB,EAAAzD,SAAA,GAAA8K,UAAA/M,GAAAgN,SAAAhN,GAAAiN,UAAA,GAAAjN,GAAAkN,SAAA,WACI7L,QAAAU,aAAAC,WAAA,QACA,IAAAipB,EAAAvlB,EAAAzC,aAAAjD,GAAAkL,oBACA+f,EAAA1e,SAAA,EACA,IAAA2e,EAAAxlB,EAAAzD,SAAA,GAAAgB,aAAAoZ,GAAAC,UACA4O,EAAAvK,aAAA,EAAA,SAAA,GACAuK,EAAAC,oBAAA,WACIF,EAAA1e,SAAA,EACA7G,EAAAC,iBAGX4S,EAAAkQ,WACDlQ,EAAAuS,WAAAF,IAAAhR,SAIRuP,YAAA,WAAc,IAAAiC,EAAA3pB,KACVJ,QAAAC,YAAAC,WAAAoU,WAAA,GACAtU,QAAAC,YAAAC,WAAAqU,UAAA,GAEA,IAAAyV,EAAA5pB,KAAA+lB,SAAA8D,SAAA,QACA7pB,KAAA+lB,SAAA+D,eAAA,WAAAC,SAAApT,QAAA,SAAAqT,GACI,IAAAC,EAAA1rB,GAAAsjB,YAAA8H,EAAA1D,cACAgE,EAAAzoB,aAAAjD,GAAAiM,QAAAC,YAAAkf,EAAAjD,SAAAhc,eAAAsf,EAAA7lB,KAAA+lB,MAAA,KAAA,IACAD,EAAAhI,OAAA0H,EAAAtD,gBACA,IAAArC,EAAA4F,EAAAO,cAAAR,EAAAS,WAAA7rB,GAAAqL,GAAAogB,EAAA/e,EAAA+e,EAAA9e,KACA+e,EAAApK,YAAAmE,GACA,IAAAa,EAAA8E,EAAAvD,cAAAlE,qBAAA+H,EAAA9H,sBAAA5jB,GAAAqL,GAAA,EAAA,KACAqgB,EAAAhI,OAAA0H,EAAAvD,cACA6D,EAAApK,YAAAgF,KAEJ7kB,KAAA+lB,SAAA+D,eAAA,aAAAC,SAAApT,QAAA,SAAAqT,GACI,IAAAC,EAAA1rB,GAAAsjB,YAAA8H,EAAAzD,gBACAsD,EAAAS,EAAAzoB,aAAAjD,GAAAkL,oBACA+f,EAAA3e,KAAAtM,GAAAsM,KAAAmf,EAAA3B,MAAA2B,EAAA1B,QACAkB,EAAAa,OAAA9rB,GAAAqL,GAAAogB,EAAA3B,MAAA,GAAA2B,EAAA1B,OAAA,GACAkB,EAAApe,QACAue,EAAAtD,gBAAAiE,SAAAL,GACAA,EAAApK,YAAAthB,GAAAqL,GAAAogB,EAAA/e,EAAA+e,EAAA9e,IACAse,EAAAvd,IAAAC,KAAAC,YAGR4b,sBAAA,SAAAJ,EAAAC,GAA0C,IAAA2C,EAAAvqB,KACtCJ,QAAAqD,UAAA0gB,eAAA,oBAAA,SAAA1f,GACI,IAAAumB,EAAAvmB,EAAAzC,aAAA,qBACAgpB,EAAAriB,KAAAoiB,EAAAhE,uBAAA/lB,UACAZ,QAAAqD,UAAAwnB,MAAA,UAAAjpB,aAAA,UAAAkpB,SAAAlpB,aAAA,YAAA4K,OAAAoe,EACA,IAAAG,EAAA,EACAC,EAAA,EACA,GAAAjD,GACIgD,GAAAJ,EAAAhE,uBAAA/lB,SAAA,GAAAyK,EAAAsf,EAAAhE,uBAAA/lB,SAAA,GAAAyK,GAAA2c,EAAA2C,EAAAhE,uBAAA/lB,SAAA,GAAAyK,EACA2f,GAAAL,EAAAhE,uBAAA/lB,SAAA,GAAA0K,EAAAqf,EAAAhE,uBAAA/lB,SAAA,GAAA0K,GAAA0c,EAAA2C,EAAAhE,uBAAA/lB,SAAA,GAAA0K,IAEAyf,GAAAJ,EAAAhE,uBAAA/lB,SAAA,GAAAyK,EAAAsf,EAAAhE,uBAAA/lB,SAAA,GAAAyK,GAAA2c,EAAA2C,EAAAhE,uBAAA/lB,SAAA,GAAAyK,EACA2f,GAAAL,EAAAhE,uBAAA/lB,SAAA,GAAA0K,EAAAqf,EAAAhE,uBAAA/lB,SAAA,GAAA0K,GAAA0c,EAAA2C,EAAAhE,uBAAA/lB,SAAA,GAAA0K,GAEJjH,EAAA4b,YAAA8K,EAAAC,IACH5qB,KAAAwmB,kBAELyB,qBAAA,SAAAN,EAAAC,GAAyC,IAAAiD,EAAA7qB,KACrCJ,QAAAqD,UAAA0gB,eAAA,mBAAA,SAAA1f,GACIA,EAAAzC,aAAA,oBAAA2G,KAAA0iB,EAAAtE,uBAAA/lB,UACA,IAAAmqB,EAAA,EACAC,EAAA,EACA,GAAAjD,GACIgD,GAAAE,EAAAtE,uBAAA/lB,SAAA,GAAAyK,EAAA4f,EAAAtE,uBAAA/lB,SAAA,GAAAyK,GAAA2c,EAAAiD,EAAAtE,uBAAA/lB,SAAA,GAAAyK,EACA2f,GAAAC,EAAAtE,uBAAA/lB,SAAA,GAAA0K,EAAA2f,EAAAtE,uBAAA/lB,SAAA,GAAA0K,GAAA0c,EAAAiD,EAAAtE,uBAAA/lB,SAAA,GAAA0K,IAEAyf,GAAAE,EAAAtE,uBAAA/lB,SAAA,GAAAyK,EAAA4f,EAAAtE,uBAAA/lB,SAAA,GAAAyK,GAAA2c,EAAAiD,EAAAtE,uBAAA/lB,SAAA,GAAAyK,EACA2f,GAAAC,EAAAtE,uBAAA/lB,SAAA,GAAA0K,EAAA2f,EAAAtE,uBAAA/lB,SAAA,GAAA0K,GAAA0c,EAAAiD,EAAAtE,uBAAA/lB,SAAA,GAAA0K,GAEJjH,EAAA4b,YAAA8K,EAAAC,GACA,IAAAnK,EAAAliB,GAAAqL,GAAA,EAAA,IAAAoW,OAAAzhB,GAAA8gB,KAAAC,iBAAArX,MAAAC,UAAA,EAAA,OAEAjE,EAAAqH,UAAA/M,GAAAsN,cAAAtN,GAAAgrB,OAAA,GAAA9I,MAEHzgB,KAAAwmB,kBAELsB,UAAA,SAAAD,GAAwB,IAAAiD,EAAA9qB,KACpB+qB,EAAA,EACAlD,IACIkD,EAAA,GAEJnrB,QAAAqD,UAAA+nB,UAAAC,UAAA,GACA,IAAAC,EAAA,IAAA,IAAA,EAAAH,GAAA,IAAA,EACAI,EAAA5sB,GAAAgN,SAAAhN,GAAAkN,SAAA,WACI7L,QAAAqD,UAAA+nB,UAAAC,WAAA,GACIrrB,QAAAqD,UAAA+nB,UAAAC,UAAA,GAGJrrB,QAAAqD,UAAA+nB,UAAAC,WAAAC,IACH3sB,GAAAiN,UAAA,MAAAK,gBACD7L,KAAAymB,UAAAnb,UAAA6f,GACAJ,EAAAA,GAAA,EACA/qB,KAAAymB,UAAAnb,UAAA/M,GAAAgN,SAAAhN,GAAAkN,SAAA,WACIqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACG7L,QAAAU,aAAAC,WAAA,iBAAA,KAAA,GACAuqB,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACGqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACGqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAAuf,GAAAxsB,GAAAkN,SAAA,WACG7L,QAAAU,aAAAC,WAAA,gBAAA,KAAA,GACAuqB,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACGqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACGqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACGqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAAuf,GAAAxsB,GAAAkN,SAAA,WACGqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACGqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACGqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACGqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAAuf,GAAAxsB,GAAAkN,SAAA,WACGqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACGqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACGqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACGqf,EAAArE,UAAAjmB,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAAuf,GAAAxsB,GAAAkN,SAAA,WAEGqf,EAAAM,UAAAvD,QAGRuD,UAAA,SAAAvD,GAAwB,IAAAwD,EAAArrB,KACpBJ,QAAAC,YAAAC,WAAAuU,UAAA,EACArU,KAAAymB,UAAAviB,UACAtE,QAAAqD,UAAA+nB,UAAAC,UAAA,GACArrB,QAAAU,aAAAC,WAAA,oBAAA,KAAA,GACAX,QAAAiE,aAAAC,KAAAC,WAAAwL,kBACA,IAAA+b,EAAAtrB,KAAAwmB,gBAAAhmB,SAAA,GAAAkf,SACA1f,KAAAwmB,gBAAA+E,qBACAvrB,KAAAwrB,UACAxrB,KAAAyrB,WAAAH,GACAzD,EACI7nB,KAAAiE,KAAAqH,UAAA/M,GAAAgN,SAAAhN,GAAAiN,UAAA,GAAAjN,GAAAkN,SAAA,WACI4f,EAAAK,gBAGJ1rB,KAAA0rB,aAIRF,QAAA,WAAU,IAAAG,EAAA3rB,KACN4pB,EAAA5pB,KAAA+lB,SAAA8D,SAAA,QACA7pB,KAAA+lB,SAAA+D,eAAA,SAAAC,SAAApT,QAAA,SAAAqT,GAEI,IAAAC,EAAA1rB,GAAAsjB,YAAA8J,EAAAxF,kBACA8D,EAAAhI,OAAA0J,EAAAtF,gBACA,IAAArC,EAAA4F,EAAAO,cAAAwB,EAAAvB,WAAA7rB,GAAAqL,GAAAogB,EAAA/e,EAAA+e,EAAA9e,KACA+e,EAAApK,YAAAmE,GACA,IAAAa,EAAA8G,EAAA7G,WAAA5C,qBAAA+H,EAAA9H,sBAAA5jB,GAAAqL,GAAA,EAAA,KACAqgB,EAAAhI,OAAA0J,EAAA7G,WACAmF,EAAApK,YAAAgF,GACA,IAAAE,EAAA,CACIjE,MAAA1S,SAAAC,OACA0U,MAAA9a,MAAAC,UAAA,EAAA,IAEJ+hB,EAAAzoB,aAAA,cAAA2G,KAAA4c,GACAnlB,QAAAC,YAAAC,WAAAqU,UAAAsC,KAAAwT,KAEJjqB,KAAAsmB,YAAA9lB,SAAAmW,QAAA,SAAAiV,GACI,IAAA3B,EAAA1rB,GAAAsjB,YAAA8J,EAAAxF,kBACAtB,EAAA8G,EAAA7G,WAAA5C,qBAAA0J,EAAAzJ,sBAAA5jB,GAAAqL,GAAA,EAAA,KACAqgB,EAAAhI,OAAA0J,EAAA7G,WACAmF,EAAApK,YAAAgF,GACA,IAAAE,EAAA,CACIjE,MAAA1S,SAAAC,OACA0U,MAAA9a,MAAAC,UAAA,EAAA,IAEJ+hB,EAAAzoB,aAAA,cAAA2G,KAAA4c,GACAnlB,QAAAC,YAAAC,WAAAqU,UAAAsC,KAAAwT,MAIRG,WAAA,SAAAyB,GACI,IAAAC,EAAA9rB,KAAA+lB,SAAA9hB,KAAA8nB,iBACAC,EAAAhsB,KAAA+lB,SAAAkG,cACAhhB,EAAArC,KAAAC,MAAAgjB,EAAA5gB,EAAA+gB,EAAA3D,OACAnd,EAAAtC,KAAAC,OAAAijB,EAAAxD,OAAAuD,EAAA3gB,GAAA8gB,EAAA1D,QACA,OAAA/pB,GAAAqL,GAAAqB,EAAAC,IAGJugB,WAAA,SAAAH,GACI1rB,QAAAqD,UAAA0gB,eAAA,SAAA,SAAA1f,GAEIA,EAAA4b,YAAAyL,GACA,IAAAY,EAAAjoB,EAAAzC,aAAA,UACA5B,QAAAqD,UAAAwnB,MAAA,UAAAjpB,aAAA,UAAAkpB,SAAAlpB,aAAA,YAAA4K,OAAA8f,EACAA,EAAA/jB,OAEAvI,QAAAC,YAAAC,WAAAoU,WAAAuC,KAAAyV,IAEHlsB,KAAAomB,gBAELsF,UAAA,WAkBI,IAlBQ,IAAAS,EAAAnsB,KACRosB,EAAA,GACAC,EAAArsB,KAAAumB,uBAAA/lB,SAgBA8rB,EAAA,EAAAA,EAAA,GAAAA,IACIF,EAAA3V,KAAAlY,GAAAqL,GAAA3B,MAAAC,UAAAmkB,EAAA,GAAAphB,EAAAohB,EAAA,GAAAphB,GAAAhD,MAAAC,UAAAmkB,EAAA,GAAAnhB,EAAAmhB,EAAA,GAAAnhB,KAIJ,IADA,IAAAqhB,EAAArgB,KAAAG,MACAtL,EAAA,EAAAA,EAAAqrB,EAAAzS,OAAA5Y,IACIA,EAAA,GAAAnB,QAAAC,YAAA2H,SAAAmK,eAGA/R,QAAAqD,UAAA0gB,eAAA,QAAA,SAAA1f,GAEIA,EAAAzC,aAAAjD,GAAAkL,oBAAAwC,IAAAsgB,IACAtoB,EAAA4b,YAAAuM,EAAArrB,IACA,IAAAmrB,EAAAjoB,EAAAzC,aAAA,SACA0qB,EAAA/jB,KAAApH,EAAA,EAAAnB,QAAAC,YAAAsV,SAAAG,UAAAvU,IACAnB,QAAAC,YAAAC,WAAAwU,cAAAmC,KAAA,CACI2B,SAAA,EACA9O,YAAA1J,QAAAC,YAAAsV,SAAAG,UAAAvU,KAEJnB,QAAAC,YAAAC,WAAAoU,WAAAuC,KAAAyV,GACAC,EAAAtF,aAAA,GACH7mB,KAAAomB,eAGLxmB,QAAAiE,aAAAC,KAAAC,WAAAoL,0BACAvP,QAAAiE,aAAAC,KAAAC,WAAA2L,yBAEJ0Y,QAAA,WACI,IAAAoE,EAAAxsB,KAAAomB,cAAA5lB,SAAAN,SACAusB,EAAA,GACAC,EAAA,GACA,IAAA,IAAA3rB,KAAAyrB,EACI5sB,QAAAqD,UAAA0e,aAAA6K,EAAAzrB,MACI0rB,EAAAhW,KAAA,CACIvL,EAAAshB,EAAAzrB,GAAAmK,EACA0L,MAAA7V,IAEJ2rB,EAAAjW,KAAA1V,IAIR,IAAA,IAAA4rB,KADAF,EAAAG,KAAA,SAAAjtB,EAAAktB,GAAc,OAAAA,EAAA3hB,EAAAvL,EAAAuL,IACduhB,EACID,EAAAC,EAAAE,GAAA/V,OAAAkW,gBAAAL,EAAAE,8GCxbZ,IAAAhmB,EAAAC,EAAA,SACArI,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACI+rB,SAAA,CACIhmB,QAAA,KACA4L,KAAA/R,GAAAM,KACAqb,QAAA,kCAEJ6S,OAAA,CACIroB,QAAA,GACA4L,KAAA,CAAA/R,GAAAM,OAEJmuB,UAAAzuB,GAAAM,KACAouB,YAAA1uB,GAAAM,KACAquB,SAAA3uB,GAAAM,KACAsuB,cAAA5uB,GAAAM,KACAuuB,MAAA7uB,GAAAc,MACAguB,aAAA9uB,GAAAc,MACAiuB,cAAA/uB,GAAAM,KACA0uB,WAAAhvB,GAAAM,KAEA2uB,eAAAjvB,GAAAM,KAEA4uB,iBAAA,CAAAlvB,GAAAmvB,aACAC,UAAA,CAAApvB,GAAAM,MACA4d,YAAA,EACAC,YAAA,EACAC,aAAA,EACAC,aAAA,EAEAgR,eAAA,EACAC,sBAAA,EACAC,oBAAA,EACAC,uBAAA,EACAC,UAAAzvB,GAAAM,KACAovB,SAAA1vB,GAAAM,KACAqvB,QAAA3vB,GAAAM,KACAsvB,SAAA5vB,GAAAM,KACAqoB,UAAA,EACAkH,mBAAA,GACAC,sBAAA,GACApH,WAAA,IACAqH,mBAAA,GACAC,sBAAA,GACApH,UAAA,EACAqH,oBAAA,GACAC,uBAAA,GACAC,QAAAnwB,GAAAM,KACA8vB,SAAApwB,GAAAM,KACA+vB,UAAArwB,GAAAc,MACAwvB,UAAAtwB,GAAAM,KACAiwB,WAAAvwB,GAAAc,MACA0vB,YAAA,EACAC,YAAA,EACAC,aAAA,EACAC,aAAA,EAEAC,QAAA5wB,GAAAM,KACAuoB,aAAA,GACAgI,iBAAA,CAAA7wB,GAAAM,MACAwwB,mBAAA,CAAA9wB,GAAAM,OAGJa,OAAA,WACIM,KAAAknB,UAAA,EACAlnB,KAAAouB,mBAAA,GACApuB,KAAAquB,sBAAA,GACAruB,KAAAinB,WAAA,IACAjnB,KAAAsuB,mBAAA,GACAtuB,KAAAuuB,sBAAA,GAEAvuB,KAAAwuB,oBAAA,GACAxuB,KAAAyuB,uBAAA,GAEA7uB,QAAAiE,aAAAgB,GAAAd,WAAA+K,sBAAA9O,KAAA2iB,cAAAtb,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAmL,kBAAAlP,KAAAsvB,gBAAAjoB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAqL,qBAAApP,KAAAuvB,mBAAAloB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAoL,yBAAAnP,KAAAwvB,uBAAAnoB,KAAArH,OAEAJ,QAAAiE,aAAAgB,GAAAd,WAAAwL,iBAAAvP,KAAAorB,UAAA/jB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAyL,2BAAAxP,KAAAyvB,mBAAApoB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAA2L,uBAAA1P,KAAA0vB,eAAAroB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAgM,yBAAA/P,KAAAunB,iBAAAlgB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAiM,0BAAAhQ,KAAA2vB,kBAAAtoB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAkM,mBAAAjQ,KAAA4vB,cAAAvoB,KAAArH,OACAA,KAAAktB,SAAAroB,GAAAtG,GAAAM,KAAAgxB,UAAAC,YAAA9vB,KAAA+vB,aAAA/vB,MACAA,KAAAktB,SAAAroB,GAAAtG,GAAAM,KAAAgxB,UAAAG,UAAAhwB,KAAAiwB,aAAAjwB,MACAA,KAAAktB,SAAAroB,GAAAtG,GAAAM,KAAAgxB,UAAAK,aAAAlwB,KAAAiwB,aAAAjwB,MACAA,KAAAstB,cAAA9sB,SAAA,GAAA8K,UAAA/M,GAAA4xB,SAAA,GAAA,IAAAtkB,iBACAjM,QAAAC,YAAA2H,SAAAiK,cACIzR,KAAA0uB,QAAAjuB,QAAA,EACAT,KAAA0uB,QAAAluB,SAAA,GAAA8K,UAAA/M,GAAAgN,SAAAhN,GAAA6xB,OAAA,GAAA7xB,GAAAqL,GAAA,EAAA,KAAArL,GAAA6xB,OAAA,GAAA7xB,GAAAqL,GAAA,GAAA,MAAAiC,kBAEJ7L,KAAAqwB,sBAEJ/oB,UAAA,WACI1H,QAAAiE,aAAA0D,eAAAxD,WAAA+K,uBACAlP,QAAAiE,aAAA0D,eAAAxD,WAAAmL,mBACAtP,QAAAiE,aAAA0D,eAAAxD,WAAAqL,sBACAxP,QAAAiE,aAAA0D,eAAAxD,WAAAoL,0BAEAvP,QAAAiE,aAAA0D,eAAAxD,WAAAwL,kBACA3P,QAAAiE,aAAA0D,eAAAxD,WAAAyL,4BACA5P,QAAAiE,aAAA0D,eAAAxD,WAAA2L,wBACA9P,QAAAiE,aAAA0D,eAAAxD,WAAAgM,0BACAnQ,QAAAiE,aAAA0D,eAAAxD,WAAAiM,2BACApQ,QAAAiE,aAAA0D,eAAAxD,WAAAkM,qBAGJ9H,KAAA,SAAAwf,EAAAC,EAAAC,GACIjoB,QAAAqD,UAAAqtB,SAAA,UAAA,SAAArsB,GACIA,EAAAzC,aAAA,WAAA2G,KAAAwf,EAAAC,EAAAC,KAEJjoB,QAAAqD,UAAAC,UAAA,iEAIJkoB,UAAA,WACIprB,KAAA4tB,eAAA,EACA5tB,KAAAitB,YAAAxsB,QAAA,GAEJsK,OAAA,SAAAC,GACIhL,KAAA0c,aAAA1R,EACAhL,KAAAyc,YAAAzc,KAAA0c,YAAA,IAAA1c,KAAA2c,cACI3c,KAAA0c,YAAA9c,QAAAC,YAAAC,WAAAwT,cACAtT,KAAAqhB,SAEJrhB,KAAA2c,cACI3c,KAAA4c,cAAA5R,EACAhL,KAAA2c,aAAA3c,KAAA4c,aAAA,IACI5c,KAAA2c,aAAA,EACA/c,QAAAC,YAAAoY,cAGRjY,KAAAmoB,aAAAnd,GACAhL,KAAAuwB,aAAAvlB,GACAhL,KAAAwwB,cAAAxlB,GACAhL,KAAAywB,UAAAzlB,GACAhL,KAAA0wB,WAAA1lB,GAEAhL,KAAA4tB,eACA5tB,KAAA2wB,kBAAA3lB,IAEJylB,UAAA,SAAAzlB,GACIhL,KAAA+uB,aAAA/jB,EACAhL,KAAA+uB,YAAA,IACI/uB,KAAAgvB,YAAA,EACAhvB,KAAA2uB,SAAAnuB,SAAA,GAAAC,QAAA,EACAT,KAAA2uB,SAAAnuB,SAAA,GAAAC,QAAA,GAEJT,KAAAgvB,WACIhvB,KAAA4uB,UAAAntB,OAAAmH,KAAAC,MAAA7I,KAAA+uB,aAEA/uB,KAAA4uB,UAAAntB,OAAA,IAGRivB,WAAA,SAAA1lB,GACIhL,KAAAivB,cAAAjkB,EACAhL,KAAAivB,aAAA,IACIjvB,KAAAkvB,aAAA,EACAlvB,KAAA6uB,UAAAruB,SAAA,GAAAC,QAAA,EACAT,KAAA6uB,UAAAruB,SAAA,GAAAC,QAAA,GAEJT,KAAAkvB,YACIlvB,KAAA8uB,WAAArtB,OAAAmH,KAAAC,MAAA7I,KAAAivB,cAEAjvB,KAAA8uB,WAAArtB,OAAA,IAGRkvB,kBAAA,SAAA3lB,GACIhL,KAAA6tB,uBAAA7iB,EACAhL,KAAA6tB,sBAAA,IACI7tB,KAAAwtB,eAAAhtB,SAAA,GAAAC,QAAA,EACAT,KAAA4wB,wBACA5wB,KAAAwtB,eAAAhtB,SAAA,GAAAgB,aAAAjD,GAAAiM,QAAAC,YAAAzK,KAAAytB,iBAAA7kB,KAAAC,MAAA7I,KAAA6tB,sBAAA,KAEJjlB,KAAAC,MAAA7I,KAAA6tB,wBAAA,IACIjuB,QAAAiE,aAAAC,KAAAC,WAAA0L,oBACAzP,KAAAwtB,eAAA/sB,QAAA,EACAT,KAAA4tB,eAAA,IAGRgD,sBAAA,WAAwB,IAAA9qB,EAAA9F,KACpB,IAAAA,KAAA8tB,mBAAA,CACA9tB,KAAA8tB,oBAAA,EACAluB,QAAAU,aAAAC,WAAA,oBACA,IAAA2jB,EAAA3lB,GAAAgN,SAAAhN,GAAAoS,QAAA,GAAA,KAAApS,GAAAoS,QAAA,GAAA,GAAApS,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACI3F,EAAAgoB,oBAAA,KAEJ9tB,KAAAwtB,eAAAhtB,SAAA,GAAA8K,UAAA4Y,KAEJiE,aAAA,SAAAnd,GAGI,OAFAhL,KAAAouB,oBAAApjB,EAEAhL,KAAAknB,WACI,KAAA,EAAQlnB,KAAA6wB,gBAAsB,MAC9B,KAAA,EAAQ7wB,KAAA8wB,mBAAA9lB,GAA6B,MACrC,KAAA,EAAQhL,KAAA+wB,mBAAA/lB,KAIhB6lB,cAAA,WACI,GAAA7wB,KAAAouB,mBAAA,GAAA,CACIpuB,KAAAguB,UAAAxtB,SAAA,GAAAC,QAAA,EACAT,KAAAguB,UAAAxtB,SAAA,GAAAC,QAAA,EACAT,KAAAguB,UAAAxtB,SAAA,GAAAC,QAAA,EACAT,KAAAguB,UAAAxtB,SAAA,GAAAgB,aAAAjD,GAAAwlB,UAAAtiB,OAAA,iCACAzB,KAAAguB,UAAAvtB,QAAA,EACAT,KAAAiuB,SAAAztB,SAAA,GAAAC,QAAA,EACAT,KAAAiuB,SAAAztB,SAAA,GAAA6nB,MAAAroB,KAAAiuB,SAAAztB,SAAA,GAAA8nB,OAAAtoB,KAAAinB,WAAA,EACA,IAAA+J,EAAAhxB,KAAAkuB,QAAA7F,MACA,KAAA2I,IACIA,EAAA,KAEJ,GAAAhxB,KAAAinB,WACIjnB,KAAAiuB,SAAApO,YAAA7f,KAAAkuB,QAAAxO,UAEA1f,KAAAiuB,SAAApO,YAAA5X,MAAAmhB,cAAAppB,KAAAiuB,SAAAvO,SAAAsR,EAAA,EAAAhxB,KAAAinB,WAAA,IAEJjnB,KAAAiuB,SAAA5F,MAAAroB,KAAAiuB,SAAA3F,OAAAtoB,KAAAinB,WACArnB,QAAAU,aAAAC,WAAA,YACAX,QAAAU,aAAAC,WAAA,mBACAP,KAAAiuB,SAAAztB,SAAA,GAAA8K,UAAA/M,GAAAgN,SAAAhN,GAAA4lB,MAAA5lB,GAAAoS,QAAA,EAAA,GAAApS,GAAA6lB,OAAA,IAAA7lB,GAAA4lB,MAAA5lB,GAAAoS,QAAA,EAAA,KAAApS,GAAA+lB,QAAA,KAAA2M,OAAA,IACAjxB,KAAAknB,UAAA,IAIR4J,mBAAA,WACI9wB,KAAAguB,UAAAxtB,SAAA,GAAAgB,aAAAjD,GAAAwlB,UAAAtiB,OAAAmH,KAAAC,MAAA7I,KAAAouB,oBAAA,SACApuB,KAAAouB,mBAAA,IAEIpuB,KAAAguB,UAAAxtB,SAAA,GAAAC,QAAA,EACAT,KAAAguB,UAAAxtB,SAAA,GAAAC,QAAA,EACAT,KAAAguB,UAAAxtB,SAAA,GAAAC,QAAA,EACAT,KAAAguB,UAAAxtB,SAAA,GAAAgB,aAAAjD,GAAAwlB,UAAAtiB,OAAA,8DACA7B,QAAAU,aAAAC,WAAA,sBACAP,KAAAguB,UAAAxtB,SAAA,GAAA8K,UAAA/M,GAAAgN,SAAAhN,GAAA+lB,QAAA,IAAA/lB,GAAA6lB,OAAA,KAAAvY,iBACA7L,KAAAknB,UAAA,EAEAtnB,QAAAiE,aAAAC,KAAAC,WAAA4L,sBAAA,EAAA,CAAiEsX,WAAAjnB,KAAAinB,WAA6B/G,aAAAlgB,KAAAiuB,SAAAvO,aAItGqR,mBAAA,SAAA/lB,GACI,KAAAhL,KAAAinB,WAAA,GAAA,CAGA,GAAAjnB,KAAAkuB,QAAA7F,OAAAroB,KAAAinB,WAKI,OAJAjnB,KAAAouB,mBAAApuB,KAAAquB,sBACAruB,KAAAkuB,QAAA7F,MAAAroB,KAAAkuB,QAAA5F,OAAAtoB,KAAAinB,WACAjnB,KAAAinB,YAAA,GACAjnB,KAAAguB,UAAAvtB,QAAA,EACAT,KAAAinB,WAAA,OACIrnB,QAAAU,aAAAC,WAAA,uBAGJP,KAAAknB,UAAA,GAKJ,GAFAlnB,KAAAkuB,QAAA7F,OAAA,GAAArd,EACAhL,KAAAkuB,QAAA5F,QAAA,GAAAtd,EACA,GAAAhL,KAAAinB,YACAhf,MAAAygB,YAAA1oB,KAAAkuB,QAAAxO,SAAA1f,KAAAkuB,QAAA7F,MAAA,EAAAroB,KAAAiuB,SAAAvO,SAAA1f,KAAAinB,WAAA,IAGIre,KAAA+f,IAAA3oB,KAAAkuB,QAAA7F,MAAAroB,KAAAinB,YAAA,IACA,CAKI,IAAA2B,GAAA5oB,KAAAkuB,QAAAhjB,EAAAlL,KAAAiuB,SAAA/iB,IAAAlL,KAAAkuB,QAAAjjB,EAAAjL,KAAAiuB,SAAAhjB,GAEA4d,EAAA,GAAA7d,EAAA8d,WAAAlgB,KAAAmgB,KAAA,GAAAH,EAAAA,EAAA,KAGA5oB,KAAAkuB,QAAAjjB,GAAA,GAAAjL,KAAAkuB,QAAAjjB,EAAAjL,KAAAiuB,SAAAhjB,EAAA,GAAA,GAAA4d,EAEA7oB,KAAAkuB,QAAAhjB,EAAA0d,GAAA5oB,KAAAkuB,QAAAjjB,EAAAjL,KAAAiuB,SAAAhjB,GAAAjL,KAAAiuB,SAAA/iB,KAKZqlB,aAAA,SAAAvlB,GACIhL,KAAAmnB,WAAA,IACAnnB,KAAAsuB,oBAAAtjB,EACAhL,KAAAsuB,mBAAA,IACItuB,KAAAsuB,mBAAAtuB,KAAAuuB,sBACAvuB,KAAAsnB,aAGRkJ,cAAA,SAAAxlB,GACIhL,KAAAmnB,WAAA,IACAnnB,KAAAwuB,qBAAAxjB,EACAhL,KAAAwuB,oBAAA,IACIxuB,KAAAwuB,oBAAAxuB,KAAAyuB,uBACAzuB,KAAAynB,cAGRH,QAAA,WAAU,IAAA9gB,EAAAxG,KACNJ,QAAAU,aAAAC,WAAA,iBAEA,IADA,IAAA2wB,EAAA,CAAA,GAAA,EAAA,EAAA,GAFM3qB,EAAA,SAAAxF,GAIFnB,QAAAqD,UAAA0gB,eAAA,SAAA,SAAA1f,GACIuC,EAAA4gB,aAAA3Q,KAAAxS,GACA,IAAAktB,EAAAlpB,MAAAmhB,cAAA5iB,EAAAynB,SAAAvO,SAAAlZ,EAAAygB,WAAA,EAAA,GACAhjB,EAAA4b,YAAAsR,GACA,IAAAC,EAAA5qB,EAAA2oB,QAAAjN,qBAAAje,EAAAke,sBAAA5jB,GAAAqL,GAAA,GAAA,MACAhK,QAAAiE,aAAAC,KAAAC,WAAA+L,eAAAshB,EAAA5qB,EAAA2gB,UAAA,GAAApmB,GACAkD,EAAAzD,SAAA,GAAA8K,UAAA/M,GAAAgN,SAAAhN,GAAAoS,QAAA,EAAA,GAAApS,GAAAoS,QAAA,EAAA,GAAApS,GAAA+lB,QAAA,IAAA2M,OAAA,KAEHzqB,EAAA2oB,UATLpuB,EAAA,EAAAA,EAAAmwB,EAAAlxB,KAAAmnB,WAAApmB,IAAoDwF,EAAAxF,GAWpDf,KAAAmnB,aAGJM,SAAA,WACIznB,KAAAinB,YAAA,IACArnB,QAAAU,aAAAC,WAAA,oBACAP,KAAAmuB,SAAA1tB,QAAA,EACAT,KAAAmuB,SAAAtO,YAAA5X,MAAAmhB,cAAAppB,KAAAiuB,SAAAvO,SAAA1f,KAAAinB,WAAA,EAAAjnB,KAAAmuB,SAAA9F,MAAA,IACAzoB,QAAAiE,aAAAC,KAAAC,WAAAyjB,gBAAAxnB,KAAAmvB,QAAAjN,qBAAAliB,KAAAmuB,SAAAhM,sBAAA5jB,GAAAqL,GAAA,GAAA,MAAA5J,KAAAmuB,SAAA9F,SAEJd,iBAAA,SAAApP,GACInY,KAAAonB,aAAAtkB,SAAAqV,IAAAjU,WAEJyrB,kBAAA,WACI3vB,KAAAmuB,SAAA1tB,QAAA,GAEJmvB,cAAA,WAAgB,IAAA9Y,EAAA9W,KACZA,KAAAovB,iBAAAzY,QAAA,SAAAqT,GACIA,EAAAvpB,QAAA,IAEJ,IACA4wB,EAAAppB,MAAAC,UAAA,EAAA,GACAD,MAAAqpB,+BAFA,CAAA,EAAA,EAAA,EAAA,GAEAD,GAAAE,QAEA5a,QAAA,SAAAqT,GACI,IAAA1R,EAAA1Y,QAAAC,YAAAC,WAAA0U,eAAAwV,GAAAvV,KACA,GAAA,GAAA6D,EAEIxB,EAAAsY,iBAAApF,GAAAvpB,QAAA,MACH,CACG,IAAA8kB,EAAA,CACI9Q,KAAA6D,EAAA,EACAvK,KAAAW,SAAAsb,GAAA1R,IAEJxB,EAAAsY,iBAAApF,GAAAxpB,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAA8jB,EAAA9Q,KAAA,SACAqC,EAAAsY,iBAAApF,GAAAxpB,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAA8jB,EAAAxX,KAAAa,IACAkI,EAAAsY,iBAAApF,GAAAxpB,SAAA,GAAA8K,UAAA/M,GAAA4xB,SAAA,GAAA,IAAAtkB,iBACAiL,EAAAsY,iBAAApF,GAAAvpB,QAAA,MAKZ+wB,kBAAA,SAAAnxB,EAAAuC,GACI,IAAA0b,EAAAxb,SAAAF,GAAA,EAEAhD,QAAAC,YAAAwY,aAAAiG,GACAte,KAAAovB,iBAAAzY,QAAA,SAAAqT,GACIA,EAAAvpB,QAAA,IAEJT,KAAAyxB,qBAEJA,kBAAA,WACI,IAAA9tB,EAAA/D,QAAAC,YAAA2Y,mBACA,IAAA,IAAAzX,KAAAf,KAAAqvB,mBACI,MAAA1rB,EAAA5C,GACIf,KAAAqvB,mBAAAtuB,GAAAN,QAAA,GAEAT,KAAAqvB,mBAAAtuB,GAAAP,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAAkC,EAAA5C,GAAA0T,KAAA,SACAzU,KAAAqvB,mBAAAtuB,GAAAP,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAAkC,EAAA5C,GAAAgN,KAAAa,IACA5O,KAAAqvB,mBAAAtuB,GAAAN,QAAA,IASZsvB,aAAA,WACI/vB,KAAAyc,YAAA,GAGJwT,aAAA,WACIjwB,KAAAyc,YAAA,EACA7c,QAAAiE,aAAAC,KAAAC,WAAAuL,WAAA,IAEJ+R,MAAA,WACIzhB,QAAAiE,aAAAC,KAAAC,WAAAuL,WAAA,GACA1P,QAAAiE,aAAAC,KAAAC,WAAAgL,qBAEJ4T,cAAA,WACI3iB,KAAAotB,MAAA3rB,OAAA7B,QAAAC,YAAAC,WAAA2T,UACA7T,QAAAiE,aAAAC,KAAAC,WAAAkL,2BAEJqgB,gBAAA,SAAA9G,EAAAkJ,GACIA,IACI1xB,KAAAstB,cAAA9rB,aAAAjD,GAAAiM,QAAAC,YAAA7K,QAAAqD,UAAA2b,YAAAlU,eAAA,aAAAgnB,EAAAnnB,UACAvK,KAAAstB,cAAA9sB,SAAA,GAAAA,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAAiwB,EAAAvtB,MAEJnE,KAAAstB,cAAA7sB,OAAA+nB,GAEJ+G,mBAAA,SAAA/G,GACIxoB,KAAAmtB,cAAA1sB,OAAA+nB,GAEJgH,uBAAA,WACI,IAAAmC,EAAA/xB,QAAAC,YAAAC,WAAAoU,WAAAyF,OACA,GAAAgY,GACI/xB,QAAAC,YAAAC,WAAAoU,WAAA,GACA1K,KAAAyC,KAAAC,KAAAE,QACI,MAAAxM,QAAAqD,UAAA2uB,SAAA,cAAAhyB,QAAAqD,UAAA8E,UAAA,YAAA,SAAA9D,GACIA,EAAAzC,aAAA,aAAA2G,MAAA,EAAAwpB,KAIZ3xB,KAAAqtB,aAAA5rB,OAAAkwB,EAAA,sBAEJlC,mBAAA,SAAAjH,GACIxoB,KAAAutB,WAAA/sB,SAAA,GAAAqf,YAAA2I,IAEJqJ,gBAAA,aAGAnC,eAAA,WACI,IAAAoC,EAAAlyB,QAAAC,YAAAC,WAAAwU,cAAApU,SACA4xB,EAAAlF,KAAA,SAAAjtB,EAAAktB,GAAY,OAAAA,EAAAzU,SAAAzY,EAAAyY,WACZ,IAAA,IAAArX,EAAA,EAAAA,EAAA,EAAAA,IAAA,CACI,IAAAgxB,EAAAD,EAAA/wB,GAAAuI,YACAyoB,GAAAnyB,QAAAC,YAAA2H,SAAAkK,aACIqgB,EAAA,kBAAAD,EAAA/wB,GAAAuI,YAAA,YAEJtJ,KAAA2tB,UAAA5sB,GAAAP,SAAA,GAAAgB,aAAAjD,GAAAwlB,UAAAtiB,OAAAswB,EACA/xB,KAAA2tB,UAAA5sB,GAAAP,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAAqwB,EAAA/wB,GAAAqX,WAGR4Z,eAAA,WACIpyB,QAAAU,aAAAC,WAAA,SACAP,KAAA2c,cACA3c,KAAA4c,aAAAhd,QAAAC,YAAAC,WAAAyT,eACAvT,KAAA2c,aAAA,EACA/c,QAAAiE,aAAAC,KAAAC,WAAAiL,uBAEJijB,eAAA,WACIryB,QAAAU,aAAAC,WAAA,SACAX,QAAAiE,aAAAC,KAAAC,WAAAsL,sBAEJ6iB,cAAA,WACIlyB,KAAAgvB,WACIpvB,QAAAqD,UAAAC,UAAA,+CAEAlD,KAAA0uB,QAAAjuB,QAAA,EACAb,QAAAiE,aAAAC,KAAAC,WAAA6L,aACA5P,KAAA2uB,SAAAnuB,SAAA,GAAAC,QAAA,EACAT,KAAA2uB,SAAAnuB,SAAA,GAAAC,QAAA,EACAT,KAAA+uB,YAAAnvB,QAAAC,YAAAiY,aACA9X,KAAAgvB,YAAA,IAGRmD,eAAA,WACIvyB,QAAAU,aAAAC,WAAA,SACAP,KAAAkvB,YACItvB,QAAAqD,UAAAC,UAAA,+CAEAtD,QAAAiE,aAAAC,KAAAC,WAAA8L,qBACA7P,KAAA6uB,UAAAruB,SAAA,GAAAC,QAAA,EACAT,KAAA6uB,UAAAruB,SAAA,GAAAC,QAAA,EACAT,KAAAivB,aAAArvB,QAAAC,YAAAiY,aACA9X,KAAAkvB,aAAA,IAGR/lB,aAAA,WACIvJ,QAAAqD,UAAAmG,OAAA,YAEJgpB,cAAA,WACIxyB,QAAAU,aAAAC,WAAA,SACA,IAAA8xB,GAAAzyB,QAAAU,aAAAiE,UACA3E,QAAAU,aAAAoG,UAAA2rB,GAEAryB,KAAAqwB,sBAEJA,mBAAA,WACIrwB,KAAAgtB,UAAAxsB,SAAA,GAAAC,OAAAb,QAAAU,aAAAiE,UACAvE,KAAAgtB,UAAAxsB,SAAA,GAAAC,QAAAb,QAAAU,aAAAiE,WAEJ+tB,oBAAA,WACItyB,KAAA+sB,OAAA,GAAAtsB,OAAAb,QAAAC,YAAAC,WAAAoV,aAAA/D,YAAAG,OACAtR,KAAA+sB,OAAA,GAAAtsB,OAAAb,QAAAC,YAAAC,WAAAoV,aAAA/D,YAAAI,OAAA3R,QAAAC,YAAAC,WAAAoV,aAAA/D,YAAAE,OAEJkhB,eAAA,WACI3yB,QAAAU,aAAAC,WAAA,SACA,IAAAiI,EAAAxI,KACA,OAAAJ,QAAAC,YAAAC,WAAAoV,aACI,KAAA/D,YAAAG,OAAyB3K,EAAA6rB,YAAA,WACrB5yB,QAAAC,YAAAkZ,kBAAA5H,YAAAI,OACA/I,EAAA8pB,wBACA,MACJ,KAAAnhB,YAAAI,MAAwB5K,EAAA8rB,aAAA,WACpB7yB,QAAAC,YAAAkZ,kBAAA5H,YAAAG,QACA9I,EAAA8pB,wBACA,MAEJ,KAAAnhB,YAAAE,MAAwBtM,QAAAC,IAAA,uJCzfpC,IAAA2B,EAAAC,EAAA,SACArI,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACI+zB,aAAAn0B,GAAAM,KACA8zB,YAAAp0B,GAAAM,KACA+zB,WAAA,GACAC,WAAA,EAEAC,QAAAv0B,GAAAc,MACA0zB,OAAAx0B,GAAAM,KACAm0B,SAAAz0B,GAAAM,KACAo0B,QAAA10B,GAAAM,KACAq0B,UAAA30B,GAAAM,KACAoI,UAAA,CACIvC,SAAA,EACAwC,SAAA,IAKRxH,OAAA,WAAS,IAAAoG,EAAA9F,KACLA,KAAAiE,KAAAqH,UAAA/M,GAAAgN,SAAAhN,GAAAiN,UAAA,GAAAjN,GAAAkN,SAAA,WACI3F,EAAA4sB,aAAAjyB,QAAA,MAEJwH,MAAAkrB,eAAAnzB,KAAA2yB,cAEJxqB,KAAA,SAAAwE,EAAAmU,GACI9gB,KAAA4yB,WAAAjmB,EACA3M,KAAA6yB,WAAA/R,EACA,GAAAA,GACI9gB,KAAA8yB,QAAArxB,OAAA,iCACAzB,KAAA+yB,OAAAtyB,QAAA,EACAT,KAAAgzB,SAAAvyB,QAAA,GACH,GAAAqgB,IACG9gB,KAAA8yB,QAAArxB,OAAA,iCACAzB,KAAAizB,QAAAxyB,QAAA,EACAT,KAAAkzB,UAAAzyB,QAAA,IAKR2yB,aAAA,WACI,GAAApzB,KAAAiH,UAAA,CACAjH,KAAAiH,WAAA,EACArH,QAAAU,aAAAC,WAAA,SACA,IAAAiI,EAAAxI,KAEA,GAAAsI,OAAAG,GACI9B,EAAA+B,SAAA,WAAA,WACIF,EAAAvB,WAAA,EACA,GAAAuB,EAAAqqB,YACIjzB,QAAAqD,UAAAC,UAAA,+BACAtD,QAAAC,YAAAmD,QAAA,KACAwF,EAAA5E,iBACH,GAAA4E,EAAAqqB,aACGjzB,QAAAqD,UAAAC,UAAA,4BACAsF,EAAA6qB,gBAAA,KAGP,SAAAvqB,GACGN,EAAAvB,WAAA,EACA6B,EAAAlJ,QAAAqD,UAAAC,UAAA4F,GAAAlJ,QAAAqD,UAAAC,UAAA,+CAGJ,GAAA,GAAAsF,EAAAqqB,WAAA,CACI,GAAAvqB,OAAAC,GAGI,OAFA3I,QAAAqD,UAAAC,UAAA,uCACAsF,EAAA5E,gBAGJhE,QAAAqD,UAAAC,UAAA,4CACAtD,QAAAC,YAAAmD,QAAA,KACAwF,EAAA5E,qBACH,GAAA,GAAA4E,EAAAqqB,WAAA,CACG,GAAAvqB,OAAAC,GAGI,OAFA3I,QAAAqD,UAAAC,UAAA,uCACAsF,EAAA6qB,gBAAA,GAGJzzB,QAAAqD,UAAAC,UAAA,yCACAsF,EAAA6qB,gBAAA,MAKZzvB,cAAA,WACI,GAAA5D,KAAA6yB,YACIjzB,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAqwB,WAAA,aACA1zB,QAAAqD,UAAAmG,OAAApJ,KAAA4yB,aACH,GAAA5yB,KAAA6yB,YACG7yB,KAAAqzB,gBAAA,IAGRA,eAAA,SAAAE,GACI3zB,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAqwB,WAAA,aACA1zB,QAAAqD,UAAAwnB,MAAA,aAAAjpB,aAAA,aAAAgyB,YAAAD,kIClGRh1B,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACI0kB,SAAA,CACI3e,QAAA,KAKRhF,OAAA,WACIM,KAAAwB,aAAAjD,GAAAkL,oBAAAwC,IAAAC,KAAA6B,KACA/N,KAAAqL,UAEJA,OAAA,WACIrL,KAAAiE,KAAAzD,SAAA,GAAA8K,UAAA/M,GAAAgN,SAAAhN,GAAA+lB,QAAA,IAAA/lB,GAAA6lB,OAAA,KAAAvY,iBACA7L,KAAAiE,KAAAzD,SAAA,GAAA8K,UAAA/M,GAAAgN,SAAAhN,GAAAgrB,OAAA,GAAAhrB,GAAAqL,GAAA,EAAA,KAAArL,GAAAgrB,OAAA,GAAAhrB,GAAAqL,GAAA,GAAA,MAAAiC,kBAEJ1D,KAAA,SAAA4c,GACIA,IAAA/kB,KAAAqjB,SAAA0B,GAEA/kB,KAAAqjB,SAAAvC,OAAA1S,SAAAC,QACIrO,KAAAiE,KAAAzD,SAAA,GAAAC,QAAA,EACAT,KAAAiE,KAAAzD,SAAA,GAAAgB,aAAAjD,GAAAiM,QAAAC,YAAA7K,QAAAqD,UAAA2b,YAAAlU,eAAA,eAAA9K,QAAAC,YAAAsV,SAAAE,WAAA0P,EAAAhC,OAAA/D,YAEAhf,KAAAiE,KAAAzD,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAA7B,QAAAC,YAAAsV,SAAAE,WAAArV,KAAAqjB,SAAAN,OAAA5e,KACAnE,KAAAiE,KAAAzD,SAAA,GAAAC,QAAA,EACAT,KAAAiE,KAAAzD,SAAA,GAAAgB,aAAAjD,GAAAiM,QAAAC,YAAA7K,QAAAqD,UAAA2b,YAAAlU,eAAA,+HC3BZnM,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,GAIAwK,aAAA,WACIvJ,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAmG,OAAA,wKCVO,IAAAqqB,EAAA,CACbC,aAAAn1B,GAAA6S,KAAA,CACEuiB,MAAA,EACAC,OAAA,IAGFC,cAAAt1B,GAAA6S,KAAA,CACE0iB,KAAA,EACAC,MAAA,EACAC,IAAA,IAGF5Z,UAAA7b,GAAA6S,KAAA,CACEiJ,KAAA,EACA8G,OAAA,EACA/C,KAAA,gJCfJ,MAAArE,KAAAnT,EAAA,+CAEArI,GAAAC,MAAA,CACEC,QAAAF,GAAAG,UAEAC,WAAA,CACEs1B,IAAA,CACEvvB,QAAA,KACA4L,KAAA/R,GAAAM,KACAob,YAAA,eACAC,QAAA,kCAEFga,KAAA,CACExvB,QAAA,KACA4L,KAAA/R,GAAAM,KACAob,YAAA,2BACAC,QAAA,wCAGF9N,OAAA,CACE1H,QAAA,KACA4L,KAAA/R,GAAAM,KACAob,YAAA,2BACAC,QAAA,4BAGFia,aAAA,CACEzvB,QAAAqV,EAAA,QAAA2Z,aAAAC,MACArjB,KAAAyJ,EAAA,QAAA2Z,aACAzZ,YAAA,2BACAC,QAAA,kFAEFka,cAAA,CACE1vB,QAAAqV,EAAA,QAAA8Z,cAAAG,IACA1jB,KAAAyJ,EAAA,QAAA8Z,cACA5Z,YAAA,2BACAC,QAAA,oDAEFma,UAAA,CACE3vB,QAAA,KACA4L,KAAA/R,GAAAM,KACAqb,QAAA,wCAEFoa,eAAA,CACE5vB,QAAA,KACA4L,KAAA/R,GAAAM,KACAqb,QAAA,6BAIJxa,OAAA,WACEM,KAAAu0B,QAAAv0B,KAAAk0B,KAAA7L,MAAA,EACAroB,KAAAw0B,kBAEAx0B,KAAAm0B,cAAApa,EAAA,QAAA2Z,aAAAE,SACE5zB,KAAAiE,KAAAoa,QAAA,IAIJmW,gBAAA,WAEEx0B,KACAiE,KAAAY,GAAAtG,GAAAM,KAAAgxB,UAAAC,YADA9vB,KACAy0B,iBADAz0B,MAAAA,KAEAiE,KAAAY,GAAAtG,GAAAM,KAAAgxB,UAAA6E,WAFA10B,KAEA20B,gBAFA30B,MAAAA,KAGAiE,KAAAY,GAAAtG,GAAAM,KAAAgxB,UAAAG,UAHAhwB,KAGA40B,eAHA50B,MAAAA,KAIAiE,KAAAY,GAAAtG,GAAAM,KAAAgxB,UAAAK,aAJAlwB,KAIA40B,eAJA50B,OAOFy0B,iBAAA,SAAAjM,GACE,GAAA,MAAAxoB,KAAAoM,QAAA7G,MAAAvF,KAAAoM,OAAA,CAGA,IAAAyoB,EAAA70B,KAAAiE,KAAAie,qBAAAsG,EAAAsM,eAEA,GAAA90B,KAAAm0B,eAAApa,EAAA,QAAA2Z,aAAAC,MAAA,CACE3zB,KAAAq0B,UAAAr0B,KAAAk0B,KAAAa,cAGA,IAAA3U,EAAAyU,EAAA1U,IAAAngB,KAAAk0B,KAAAa,eAAA5pB,MAGAnL,KAAAu0B,QAAAnU,GACEpgB,KAAAi0B,IAAApU,YAAAgV,QAGH70B,KAAAm0B,eAAApa,EAAA,QAAA2Z,aAAAE,SAGC5zB,KAAAq0B,UAAAQ,EACA70B,KAAAiE,KAAAoa,QAAA,IACAre,KAAAs0B,eAAA9L,EAAAsM,cAGA90B,KAAAk0B,KAAArU,YAAAgV,GACA70B,KAAAi0B,IAAApU,YAAAgV,MAIJF,gBAAA,SAAAnM,GACE,GAAAxoB,KAAAm0B,eAAApa,EAAA,QAAA2Z,aAAAE,QAEE5zB,KAAAs0B,iBAAA9L,EAAAsM,cACE,OAAA,EAKJ,IAAAD,EAAA70B,KAAAk0B,KAAAhS,qBAAAsG,EAAAsM,eACA1U,EAAAyU,EAAA1pB,MAGA6pB,EAAAh1B,KAAAq0B,UAAAppB,EAAA4pB,EAAA5pB,EACAgqB,EAAAj1B,KAAAq0B,UAAAnpB,EAAA2pB,EAAA3pB,EAGAgqB,EAAA32B,GAAAqL,GAAAorB,EAAAC,GAAA9U,IAAAngB,KAAAk0B,KAAAa,eAAAxU,YAEA,GAAAvgB,KAAAu0B,QAAAnU,EACEpgB,KAAAi0B,IAAApU,YAAAthB,GAAAqL,GAAAorB,EAAAC,QAED,CAEC,IAAAhqB,EAAAjL,KAAAq0B,UAAAppB,EAAAiqB,EAAAjqB,EAAAjL,KAAAu0B,QACArpB,EAAAlL,KAAAq0B,UAAAnpB,EAAAgqB,EAAAhqB,EAAAlL,KAAAu0B,QACAv0B,KAAAi0B,IAAApU,YAAAthB,GAAAqL,GAAAqB,EAAAC,IAGF,MAAAlL,KAAAoM,QAAA7G,MAAAvF,KAAAoM,SACApM,KAAAoM,OAAA+R,aAAApE,EAAA,QAAAK,UAAAgE,MAEApe,KAAAoM,OAAA2T,OAAAmV,KAGFN,eAAA,WACE50B,KAAAi0B,IAAApU,YAAA7f,KAAAk0B,KAAAa,eACA/0B,KAAAm0B,cAAApa,EAAA,QAAA2Z,aAAAE,SACE5zB,KAAAiE,KAAAoa,QAAA,GAEF,MAAAre,KAAAoM,QAAA7G,MAAAvF,KAAAoM,QACApM,KAAAoM,OAAA+R,aAAApE,EAAA,QAAAK,UAAAC,mJCtIJ/M,EAAAC,QALA,CACI6H,UAAA,aACAC,WAAA,cACAC,UAAA,qICHJ/W,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIw2B,OAAA,CACIzwB,QAAA,KACA4L,KAAAsK,GAAAC,SACAZ,YAAA,6BAIRmb,MAAA,WACIp1B,KAAAq1B,6BAGJA,0BAAA,aAeAC,sBAAA,SAAAC,GACI,IAAA,IAAAx0B,EAAA,EAAAA,EAAAxC,GAAAi3B,aAAA7b,OAAA5Y,IAAA,CACI,IAAA8d,EAAAtgB,GAAAi3B,aAAAz0B,GAEA,GADA8d,EAAA1a,OACAoxB,EACI,OAAA1W,+GCnChB,IAAAlY,EAAAC,EAAA,SACArI,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIkI,OAAAtI,GAAAc,MACAic,OAAA/c,GAAAk3B,QACAC,cAAA9a,GAAAC,SACA5T,UAAA,CACIvC,SAAA,EACAwC,SAAA,GAEJyuB,QAAAp3B,GAAAM,KACA+2B,YAAA,CAAAr3B,GAAAmvB,aACAmI,YAAA,EACAC,gBAAAv3B,GAAAM,KACAk3B,qBAAA,MAIJr2B,OAAA,WACIE,QAAAiE,aAAAgB,GAAAd,WAAAC,uBAAAhE,KAAAg2B,gBAAA3uB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAoD,uBAAAnH,KAAAi2B,eAAA5uB,KAAArH,OA6BAJ,QAAAC,YAAA0V,eACA3V,QAAAC,YAAAmX,iBAAApX,QAAAC,YAAA2H,SAAAmK,eACA3R,KAAAi2B,iBACAj2B,KAAAk2B,iBACAl2B,KAAAke,eACAle,KAAA+1B,qBAAA/1B,KAAA81B,gBAAApW,SACA1f,KAAAg2B,kBAYA,IAAAG,EAAA53B,GAAA0C,IAAAC,aAAAoE,QAAA,uBACA,MAAA6wB,GAAA5wB,MAAA4wB,GAAA,IAAAA,GACIA,EAAA,EACA53B,GAAA0C,IAAAC,aAAAC,QAAA,sBAAA,IAEAg1B,EAAArzB,SAAAqzB,GAGJ,IAAA9iB,EAAA,EACA+iB,EAAA,IAAAC,KACAD,EAAAtzB,SAAAszB,EAAAE,UAAA,KACA,IAAAC,EAAAh4B,GAAA0C,IAAAC,aAAAoE,QAAA,wBACA,GAAA,MAAAixB,GAAAhxB,MAAAgxB,GAAA,IAAAA,EACIh4B,GAAA0C,IAAAC,aAAAC,QAAA,uBAAAi1B,GACA/iB,EAAA,OAKA,GAHAkjB,EAAAzzB,SAAAyzB,GACAxxB,QAAAC,IAAAoxB,GACArxB,QAAAC,IAAAuxB,GACAH,GAAAG,EAAA,CACI,IAAAC,EAAAJ,EAAAG,EACA7d,EAAAzQ,MAAA0Q,cAAA6d,GACAnjB,EAAAzK,KAAAC,MAAA6P,EAAAE,KAAA,IAAA,OAEA7T,QAAAC,IAAA,oGACAzG,GAAA0C,IAAAC,aAAAC,QAAA,uBAAAi1B,GACA/iB,EAAA,EACA9U,GAAA0C,IAAAC,aAAAC,QAAA,sBAAA,GACAg1B,EAAA,EAIR9iB,EAAA8iB,EAAA,IACIpxB,QAAAC,IAAA,8CACAmxB,GAAA9iB,EAAA8iB,EACAv2B,QAAAC,YAAAC,WAAA8Q,aAAA,EACArS,GAAA0C,IAAAC,aAAAC,QAAA,4BAAA,GACAvB,QAAAC,YAAAC,WAAAwD,YAAA,EACA/E,GAAA0C,IAAAC,aAAAC,QAAA,yBAAAvB,QAAAC,YAAAC,WAAAwD,aACA1D,QAAAC,YAAAC,WAAA0D,cAAA,CAAA,EAAA,EAAA,EAAA,GACAjF,GAAA0C,IAAAC,aAAAC,QAAA,2BAAAc,KAAAC,UAAAtC,QAAAC,YAAAC,WAAA0D,iBAEJjF,GAAA0C,IAAAC,aAAAC,QAAA,sBAAAg1B,GACA,IAAAvnB,EAAAunB,EAEA,IADAvnB,GAAA,KAEIA,EAAA,GAEJhP,QAAAC,YAAAC,WAAAuT,KAAAzE,EACA7J,QAAAC,IAAApF,QAAAC,YAAAC,WAAA8Q,aACAhR,QAAAC,YAAAC,WAAA8Q,aACIhR,QAAAqD,UAAA8E,UAAA,cAIJnI,QAAAC,YAAAC,WAAAoV,aAAA/D,YAAAE,OACI1K,EAAA8vB,YAAA,WACI72B,QAAAC,YAAAkZ,kBAAA5H,YAAAG,SACH,SAAAxE,GACGlN,QAAAqD,UAAAC,UAAA,qDACA,MAAA4J,EAAA4pB,WAAA,IAAA5pB,EAAA4pB,YACI92B,QAAAC,YAAAC,WAAAkV,WAAAlI,EAAA4pB,UACA/vB,EAAAgwB,SAAAtwB,WAKhBiB,UAAA,WACI1H,QAAAiE,aAAA0D,eAAAxD,WAAAC,wBACApE,QAAAiE,aAAA0D,eAAAxD,WAAAoD,yBAIJyvB,aAAA,WACIh3B,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAA8E,UAAA,YAAA,SAAA9D,GACIA,EAAAzC,aAAA,aAAA2G,KAAA,YAAA,MAGR0uB,cAAA,WAEIj3B,QAAAC,YAAAsW,cAAAlO,MAAAsW,iBAAA3e,QAAAC,YAAAC,WAAAiV,gBACA/U,KAAAk2B,kBAGJD,eAAA,WACIj2B,KAAA6G,OAAApF,OAAA7B,QAAAC,YAAA2H,SAAAC,SAGJyuB,eAAA,WAEIl2B,KAAAsb,OAAArX,KAAAzD,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAA7B,QAAAC,YAAA2H,SAAAkK,YAGJwM,aAAA,WAAe,IAAApY,EAAA9F,KACXJ,QAAAC,YAAA2H,SAAAmK,cAAA,IACI3R,KAAA01B,cAAA7W,aAAAjf,QAAAqD,UAAA6b,eACA9e,KAAA01B,cAAA3W,QAAAnf,QAAAC,YAAAqR,gBAAAtR,QAAAC,YAAA8X,oBAAAqH,WAEAhf,KAAA01B,cAAA7W,aAAAjf,QAAAqD,UAAAgc,qBAAArf,QAAAC,YAAA2H,SAAAmK,cAAA,IAEJ/R,QAAAC,YAAA2H,SAAAmK,cAAA,GACI3R,KAAA01B,cAAAxW,aAAA,EAAA,SAAA,IAEAlf,KAAA01B,cAAAxW,aAAA,EAAA,gBAAA,GACAlf,KAAA01B,cAAAhM,oBAAA,WACI5jB,EAAA4vB,cAAAxW,aAAA,EAAA,cAAAjX,MAAAC,UAAA,EAAA,IAAA,OAKZgB,aAAA,WACI,GAAAZ,OAAAC,GACI3I,QAAAqD,UAAAC,UAAA,uCAKJ,GAAAlD,KAAAiH,UAAA,CACAjH,KAAAiH,WAAA,EACArH,QAAAU,aAAAC,WAAA,SACA,IAAAiI,EAAAxI,KAEAsI,OAAAG,GACI9B,EAAA+B,SAAA,WAAA,WACIF,EAAAvB,WAAA,EACArH,QAAAqD,UAAAC,UAAA,+BACAtD,QAAAC,YAAAmD,QAAA,KACAwF,EAAAytB,kBACH,SAAAntB,GACGN,EAAAvB,WAAA,EACA6B,EAAAlJ,QAAAqD,UAAAC,UAAA4F,GAAAlJ,QAAAqD,UAAAC,UAAA,2CAGJsF,EAAAvB,WAAA,EACArH,QAAAqD,UAAAC,UAAA,kDACAtD,QAAAC,YAAAmD,QAAA,KACAwF,EAAAytB,oBAIRa,aAAA,WACIl3B,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAmG,OAAA,WAEJ2tB,YAAA,WACIn3B,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAmG,OAAA,UAEJ4tB,aAAA,WACIp3B,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAmG,OAAA,WAEJ6oB,eAAA,WACIryB,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAmG,OAAA,UAEJ6tB,aAAA,WACIr3B,QAAAU,aAAAC,WAAA,UAEJ22B,cAAA,WACIt3B,QAAAU,aAAAC,WAAA,SACAoG,EAAAwwB,kBAAA,WACIv3B,QAAAqD,UAAAC,UAAA,wEACAtD,QAAAC,YAAAmD,QAAA,KACH,WACGpD,QAAAqD,UAAAC,UAAA,gCAGRk0B,iBAAA,WACIp3B,KAAAg2B,kBACA1tB,OAAAG,IAGI,QAFAA,GAAA4uB,oBAEAC,UAEI7uB,GAAA8uB,mBAAA,CACIC,iBAAA,CAAA,CAEQC,MAAA,WACAC,MAAA,kBACAC,UAAA,KAIRC,QAAA,SAAA9qB,GACI/H,QAAAC,IAAA,UAAA8H,EAAA+qB,SAEJC,KAAA,SAAAhrB,GACI/H,QAAAC,IAAA,OAAA8H,EAAA+qB,YAMpB7B,gBAAA,WAAkB,IAAAxvB,EAAAxG,KACdA,KAAA81B,gBAAAt0B,aAAAjD,GAAAsS,QAAAC,cAAA,EACA9Q,KAAA81B,gBAAAiC,iBACA/3B,KAAA81B,gBAAAxqB,UAAA/M,GAAAgN,SAAAhN,GAAA6xB,OAAA,GAAA7xB,GAAAqL,GAAA5J,KAAA+1B,sBAAApW,IAAAphB,GAAAqL,GAAA,GAAA,KAAAmH,OAAAxS,GAAAyS,eAAAzS,GAAAkN,SAAA,WACIjF,EAAAsvB,gBAAAxqB,UAAA/M,GAAAgN,SAAAhN,GAAAgrB,OAAA,GAAAhrB,GAAAqL,GAAA,GAAA,IAAAmH,OAAAxS,GAAAy5B,cAAA,IAAAz5B,GAAAgrB,OAAA,GAAAhrB,GAAAqL,IAAA,GAAA,IAAArL,GAAAgrB,OAAA,GAAAhrB,GAAAqL,GAAA,GAAA,IAAAmH,OAAAxS,GAAAy5B,cAAA,IAAAz5B,GAAAgrB,OAAA,GAAAhrB,GAAAqL,IAAA,GAAA,IAAArL,GAAAiN,UAAA,IAAAK,sBAGRosB,iBAAA,WACIr4B,QAAAU,aAAAC,WAAA,SACAP,KAAA81B,gBAAAt0B,aAAAjD,GAAAsS,QAAAC,cAAA,EACA9Q,KAAA81B,gBAAAiC,iBACA/3B,KAAA81B,gBAAAxqB,UAAA/M,GAAA6xB,OAAA,GAAApwB,KAAA+1B,uBACAn2B,QAAAqD,UAAA8E,UAAA,oJCpRR,IAAApB,EAAAC,EAAA,SAEArI,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIu5B,QAAAtd,GAAAC,SACAsd,eAAA55B,GAAAM,KACAu5B,UAAA,EACAC,SAAA,EACA3hB,YAAA,EAEAzP,UAAA,CACIvC,SAAA,EACAwC,SAAA,IAIRxH,OAAA,aAGAyI,KAAA,SAAAmwB,EAAAxX,EAAAzK,EAAAK,GAII,OAHA1W,KAAAo4B,UAAAtX,EACA9gB,KAAAq4B,SAAAhiB,EACArW,KAAA0W,YAAAA,EACAoK,GACI,KAAA,EAAQ9gB,KAAAgD,QAAAqT,GAAoB,MAC5B,KAAA,EAAQrW,KAAAu4B,SAAAliB,EAAAK,GAEZ1W,KAAAke,aAAAoa,IAEJpa,aAAA,SAAAoa,GAAwB,IAAAxyB,EAAA9F,KACpBA,KAAAk4B,QAAArZ,aAAAyZ,EACA,IAAA30B,EAAA,CAAA,SAAA,aAAA,OAAA,cACA5C,EAAA,EACAf,KAAAk4B,QAAAhZ,aAAA,EAAAvb,EAAA5C,MAAA,GACAf,KAAAk4B,QAAAxO,oBAAA,WACI,KAAA3oB,EAAA4C,EAAAgW,OAAA,GAAA,CACA,IAAA6e,EAAAz3B,GAAA4C,EAAAgW,OAAA,EACA5Y,GAAA4C,EAAAgW,OAAA,GACI7T,EAAA7B,KAAAqH,UAAA/M,GAAAgN,SAAAhN,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACI3F,EAAAqyB,eAAA13B,QAAA,EACAwH,MAAAkrB,eAAArtB,EAAAqyB,eAAA33B,SAAA,QAGRsF,EAAAoyB,QAAAhZ,aAAA,EAAAvb,EAAA5C,KAAAy3B,OAGRpF,aAAA,WACI,GAAA9qB,OAAAC,GACI3I,QAAAqD,UAAAC,UAAA,uCAGJ,GAAAlD,KAAAiH,UAAA,CACAjH,KAAAiH,WAAA,EACArH,QAAAU,aAAAC,WAAA,SACA,IAAAiI,EAAAxI,KACA,GAAAsI,OAAAG,GACI9B,EAAA+B,SAAA,WAAA,WAGI,OAFAF,EAAAvB,WAAA,EACArH,QAAAC,YAAA8I,oBACAH,EAAA4vB,WACI,KAAA,EAAQx4B,QAAAC,YAAAmD,QAAAwF,EAAA6vB,UAA4Cz4B,QAAAqD,UAAAC,UAAA,4BAAA,EAAAsF,EAAA6vB,UAA0D,MAC9G,KAAA,EAAQz4B,QAAAC,YAAAoJ,YAAAT,EAAAkO,YAAAlO,EAAA6vB,UAAkEz4B,QAAAqD,UAAAC,UAAA,8BAAAtD,QAAAC,YAAAqR,gBAAA1I,EAAAkO,aAAAvS,KAAA,yBAAA,EAAAqE,EAAA6vB,UAE9Ez4B,QAAAqD,UAAAqwB,WAAA,iBACH,SAAAxqB,GACGN,EAAAvB,WAAA,EACA6B,EAAAlJ,QAAAqD,UAAAC,UAAA4F,GAAAlJ,QAAAqD,UAAAC,UAAA,8CAEP,CAGG,OAFAsF,EAAAvB,WAAA,EACArH,QAAAC,YAAA8I,oBACAH,EAAA4vB,WACI,KAAA,EAAQx4B,QAAAC,YAAAmD,QAAAwF,EAAA6vB,UAA4Cz4B,QAAAqD,UAAAC,UAAA,4BAAA,EAAAsF,EAAA6vB,UAA0D,MAC9G,KAAA,EAAQz4B,QAAAC,YAAAoJ,YAAAT,EAAAkO,YAAAlO,EAAA6vB,UAAkEz4B,QAAAqD,UAAAC,UAAA,8BAAAtD,QAAAC,YAAAqR,gBAAA1I,EAAAkO,aAAAvS,KAAA,yBAAA,EAAAqE,EAAA6vB,UAE9Ez4B,QAAAqD,UAAAqwB,WAAA,mBAGRmF,aAAA,WAGI,OAFA74B,QAAAU,aAAAC,WAAA,SACAP,KACAo4B,WACI,KAAA,EAAQx4B,QAAAqD,UAAAC,UAAA,4BAFZlD,KAEYq4B,UAAsD,MAC9D,KAAA,EAAQz4B,QAAAqD,UAAAC,UAAA,8BAAAtD,QAAAC,YAAAqR,gBAHZlR,KAGY0W,aAAAvS,KAAA,yBAHZnE,KAGYq4B,UAEZz4B,QAAAqD,UAAAqwB,WAAA,iBAEJtwB,QAAA,SAAAqT,GACIrW,KAAAm4B,eAAA33B,SAAA,GAAAgB,aAAAjD,GAAAwlB,UAAAtiB,OAAA,gBAAA4U,GAEJkiB,SAAA,SAAAliB,EAAAK,GACI1W,KAAA04B,aAAAhiB,GACA1W,KAAAm4B,eAAA33B,SAAA,GAAAgB,aAAAjD,GAAAwlB,UAAAtiB,OAAA,kBAAA7B,QAAAC,YAAAqR,gBAAAwF,GAAAvS,KAAA,yBAAAkS,GAEJqiB,aAAA,SAAAC,GACI,IAAAnwB,EAAAxI,KACAzB,GAAAyH,OAAAC,QAAA,6BAAA0yB,EAAAp6B,GAAAmvB,YAAA,SAAAxnB,EAAAuE,GACIjC,EAAA2vB,eAAA33B,SAAA,GAAAgB,aAAAjD,GAAAiM,QAAAC,YAAAA,iICnGZ,IAAA9D,EAAAC,EAAA,SACArI,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIi6B,SAAAr6B,GAAAM,KACAg6B,UAAAt6B,GAAAM,KACAi6B,UAAAv6B,GAAAM,KACAyc,OAAA/c,GAAAc,MACA05B,OAAAx6B,GAAAc,MACA25B,OAAAz6B,GAAAc,MACA45B,YAAA16B,GAAAc,MACA65B,aAAA36B,GAAAc,MACA85B,aAAA56B,GAAAc,MACA+5B,cAAA76B,GAAAsS,OACAwoB,YAAA96B,GAAAM,KACAoI,UAAA,CACIvC,SAAA,EACAwC,SAAA,GAEJoyB,aAAA,CACI50B,SAAA,EACAwC,SAAA,IAKRxH,OAAA,WAAS,IAAAoG,EAAA9F,KAELA,KAAAiE,KAAAqH,UAAA/M,GAAAgN,SAAAhN,GAAAiN,UAAA,GAAAjN,GAAAkN,SAAA,WACI3F,EAAAuzB,YAAA54B,QAAA,MAEJwH,MAAAkrB,eAAAnzB,KAAAo5B,cAAAn1B,OAEJkE,KAAA,SAAAoxB,EAAA9kB,GACI8kB,GACI9kB,EAAA,EACAzU,KAAA44B,SAAAn4B,QAAA,EACAT,KAAA64B,UAAAp4B,QAAA,EACAb,QAAAC,YAAA2H,SAAAsL,SACAlT,QAAAC,YAAAiZ,eAAA,EAAA,KAEA9Y,KAAA84B,UAAAr4B,QAAA,EACAb,QAAAC,YAAA2H,SAAAmL,YAEJ8B,GAAA,GACI7U,QAAAC,YAAA2H,SAAAuL,UAGJ/S,KAAAsb,OAAA7Z,OAAA7B,QAAAC,YAAA2H,SAAAkK,WACA1R,KAAA+4B,OAAAt3B,OAAAgT,EACA,IAAAgQ,EAAA7kB,QAAAC,YAAAC,WAAAwU,cAAA,GAAA8D,SAEAxY,QAAAC,YAAA2H,SAAAoL,YAAA6R,EAEAzkB,KAAAg5B,OAAAv3B,OAAAgjB,EACA,IAAA+U,EAAA,IAAA,GAAA/kB,GACAglB,EAAA,IAAAhV,EACAiV,EAAAF,EAAAC,EACAz5B,KAAAi5B,YAAAx3B,OAAAi4B,EACA15B,KAAAk5B,aAAAz3B,OAAA+3B,EACAx5B,KAAAm5B,aAAA13B,OAAAg4B,EAEA75B,QAAAC,YAAA2H,SAAAqL,aACAjT,QAAAC,YAAA2H,SAAAwL,SAAApT,QAAAC,YAAA2H,SAAAsL,OAAAlT,QAAAC,YAAA2H,SAAAqL,YAAA8mB,QAAA,GACA/5B,QAAAC,YAAA2H,SAAAyL,IAAArT,QAAAC,YAAA2H,SAAAoL,YAAA,GAAAhT,QAAAC,YAAA2H,SAAAmL,SAAA,EAAA/S,QAAAC,YAAA2H,SAAAmL,WAAAgnB,QAAA,GACA/5B,QAAAC,YAAA2H,SAAA0L,QAAApQ,UAAAlD,QAAAC,YAAA2H,SAAA0L,QAAAuB,GAAA7U,QAAAC,YAAA2H,SAAAqL,YACAjT,QAAAC,YAAA2H,SAAA2L,SAAAsR,EAAA7kB,QAAAC,YAAA2H,SAAA2L,SAAAsR,EAAA7kB,QAAAC,YAAA2H,SAAA2L,SACAvT,QAAAC,YAAA2H,SAAA4L,YAAAtQ,UAAAlD,QAAAC,YAAA2H,SAAA4L,YAAAxT,QAAAC,YAAAC,WAAA6U,UAAA/U,QAAAC,YAAA2H,SAAAqL,YACAjT,QAAAC,YAAAmD,QAAA02B,IAEJE,aAAA,WACIh6B,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAmG,OAAA,YAEJywB,eAAA,WACI,GAAAvxB,OAAAC,GACI3I,QAAAqD,UAAAC,UAAA,uCAGJ,GAAAlD,KAAAiH,UAAA,CACAjH,KAAAiH,WAAA,EACArH,QAAAU,aAAAC,WAAA,SACA,IAAAiI,EAAAxI,KACAsI,OAAAG,GACI9B,EAAA+B,SAAA,WAAA,WACIF,EAAAvB,WAAA,EACArH,QAAAC,YAAA8I,oBACA/I,QAAAqD,UAAA8E,UAAA,eAAA,SAAA9D,GACI,IAAA+D,EAAAC,MAAAC,UAAA,IAAA,KACAtI,QAAAC,YAAAmD,QAAAgF,GACA/D,EAAAzC,aAAA,gBAAA2G,KAAAvI,QAAAqD,UAAAmF,iBAAA,GAAA,EAAAJ,GACAQ,EAAAvB,WAAA,EACAuB,EAAA4wB,cAAAtoB,cAAA,IACH,IACJ,SAAAhI,GACGN,EAAAvB,WAAA,EACA6B,EAAAlJ,QAAAqD,UAAAC,UAAA4F,GAAAlJ,QAAAqD,UAAAC,UAAA,2CAGJsF,EAAAvB,WAAA,EACArH,QAAAC,YAAA8I,oBACA/I,QAAAqD,UAAA8E,UAAA,eAAA,SAAA9D,GACI,IAAA+D,EAAAC,MAAAC,UAAA,IAAA,KACAtI,QAAAC,YAAAmD,QAAAgF,GACA/D,EAAAzC,aAAA,gBAAA2G,KAAAvI,QAAAqD,UAAAmF,iBAAA,GAAA,EAAAJ,GACAQ,EAAAvB,WAAA,EACAuB,EAAA4wB,cAAAtoB,cAAA,IACH,MAGTyhB,eAAA,WACI,GAAAvyB,KAAAiH,UAAA,CACAjH,KAAAiH,WAAA,EACA,IAAAuB,EAAAxI,KAEA,GADAJ,QAAAU,aAAAC,WAAA,SACAP,KAAAs5B,aAUI,OATA3yB,EAAAmzB,YAAAl6B,QAAAC,YAAAC,WAAAkV,WAAA,WAEIxM,EAAAvB,WAAA,EACAlC,QAAAC,IAAA,mCACH,WACGwD,EAAAvB,WAAA,EACAlC,QAAAC,IAAA,yCAEJpF,QAAAC,YAAAkZ,kBAAA5H,YAAAE,OAGJ,GAAAzR,QAAAC,YAAAC,WAAAmV,YAAA,EAII,OAHAzM,EAAAvB,WAAA,OACArH,QAAAqD,UAAAC,UAAA,gDAIA6B,QAAAC,IAAA,sBACAwD,EAAAxI,KACA2G,EAAAozB,WAAA,SAAAjtB,GACI,MAAAA,IACIlN,QAAAC,YAAAC,WAAAkV,WAAAlI,EAAA4pB,WAEJluB,EAAA8wB,cAAA,EACA15B,QAAAC,YAAAkZ,kBAAA5H,YAAAE,OACA1K,EAAAmzB,YAAAl6B,QAAAC,YAAAC,WAAAkV,WAAA,WAEIxM,EAAAvB,WAAA,EACAlC,QAAAC,IAAA,mCACH,WACGwD,EAAAvB,WAAA,EACAlC,QAAAC,IAAA,kLCnJpBzG,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIq7B,aAAA,IAGJ7xB,KAAA,SAAA8xB,GACIj6B,KAAAg6B,aAAAC,GAEJlvB,OAAA,WACI,IAAA0U,EAAAzf,KAAAiE,KAAAyb,SACAD,EAAAxU,EAAAjL,KAAAg6B,aAAA,GAAA/uB,IACIwU,EAAAxU,EAAAjL,KAAAg6B,aAAA,GAAA/uB,GAEJwU,EAAAxU,EAAAjL,KAAAg6B,aAAA,GAAA/uB,IACIwU,EAAAxU,EAAAjL,KAAAg6B,aAAA,GAAA/uB,GAEJwU,EAAAvU,EAAAlL,KAAAg6B,aAAA,GAAA9uB,IACIuU,EAAAvU,EAAAlL,KAAAg6B,aAAA,GAAA9uB,GAEJuU,EAAAvU,EAAAlL,KAAAg6B,aAAA,GAAA9uB,IACIuU,EAAAvU,EAAAlL,KAAAg6B,aAAA,GAAA9uB,GAEJlL,KAAAiE,KAAA4b,YAAAJ,mICzBR,IAAA1F,EAAAnT,EAAA,kBAEArI,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UACAC,WAAA,CAGIqb,QAAA,CACItV,QAAAnG,GAAAqL,GAAA,EAAA,GACAqQ,YAAA,WACAC,QAAA,4BAEJC,WAAA,CACIzV,QAAAqV,EAAAK,UAAAC,KACAJ,YAAA,aACA3J,KAAAyJ,EAAAK,UACAF,QAAA,4BAIJI,WAAA,CACI5V,QAAA,EACAuV,YAAA,aACAC,QAAA,4BAGJK,UAAA,CACI7V,QAAA,EACA4L,KAAA/R,GAAAic,QACAN,QAAA,kCAEJQ,UAAA,CACIhW,QAAA,IACA4L,KAAA/R,GAAAic,QACAN,QAAA,4BAEJ8f,aAAA,IAEJt6B,OAAA,aAEAme,SAAA,aAGAC,UAAA,aAGAxW,UAAA,aAGAa,KAAA,SAAA8xB,GACIj6B,KAAAg6B,aAAAC,GAGJ9a,KAAA,WACI,IAAAM,EAAAzf,KAAAiE,KAAAyb,SAAAC,IAAA3f,KAAAga,QAAA4F,IAAA5f,KAAAsa,WAAA,KACAmF,EAAAxU,EAAAjL,KAAAg6B,aAAA,GAAA/uB,IACIwU,EAAAxU,EAAAjL,KAAAg6B,aAAA,GAAA/uB,GAEJwU,EAAAxU,EAAAjL,KAAAg6B,aAAA,GAAA/uB,IACIwU,EAAAxU,EAAAjL,KAAAg6B,aAAA,GAAA/uB,GAEJwU,EAAAvU,EAAAlL,KAAAg6B,aAAA,GAAA9uB,IACIuU,EAAAvU,EAAAlL,KAAAg6B,aAAA,GAAA9uB,GAEJuU,EAAAvU,EAAAlL,KAAAg6B,aAAA,GAAA9uB,IACIuU,EAAAvU,EAAAlL,KAAAg6B,aAAA,GAAA9uB,GAEJlL,KAAAiE,KAAA4b,YAAAJ,IAEJtB,aAAA,SAAA2C,GACI9gB,KAAAod,QACApd,KAAAma,YAAA2G,IACI9gB,KAAAma,WAAA2G,IAGRf,OAAA,SAAAgB,GACI/gB,KAAAga,QAAA+G,GAEJhW,OAAA,WACI,OAAA/K,KAAAma,YACI,KAAAJ,EAAAK,UAAAC,KACIra,KAAAsa,WAAAta,KAAAua,UACA,MACJ,KAAAR,EAAAK,UAAA+G,OAGA,KAAApH,EAAAK,UAAAgE,KACIpe,KAAAsa,WAAAta,KAAA0a,UAKR1a,KAAAmf,QAGJmC,WAAA,WAGI1hB,QAAAqD,UAAA+nB,UAAA/mB,KAAA4b,YAAA7f,KAAAiE,KAAAyb,qJCjGRnhB,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIu7B,UAAA37B,GAAAM,KACAs7B,QAAA57B,GAAAM,KACA8oB,YAAA,EACA4L,UAAA,GAGJ7zB,OAAA,aAGAyI,KAAA,SAAAorB,GACIvzB,KAAAuzB,SAAAA,EACA,IACA6G,EAAAnyB,MAAAC,UAAA,EAAA,GAIA,OAHAlI,KAAA2nB,YAAAyS,EAAA,EACAp6B,KAAAk6B,UAAAra,YAAA7f,KAAAiE,KAAAzD,SAAA,GAAA0hB,qBAAAliB,KAAAm6B,QAAA35B,SAAA45B,GAAAjY,sBAAA5jB,GAAAqL,GAAA,EAAA,MACA5J,KAAAk6B,UAAAG,MAJA,EAAA,IAAA,IAAA,IAAA,IAIAD,GACAA,GACI,KAAA,EAAQp6B,KAAAk6B,UAAA5uB,UAAA/M,GAAA6xB,OAAA,EAAApwB,KAAAm6B,QAAA35B,SAAA,GAAAkf,WAA2E,MACnF,KAAA,EAAQ1f,KAAAk6B,UAAA5uB,UAAA/M,GAAA6xB,OAAA,EAAApwB,KAAAm6B,QAAA35B,SAAA,GAAAkf,WAA2E,MACnF,KAAA,EAAQ1f,KAAAk6B,UAAA5uB,UAAA/M,GAAA6xB,OAAA,EAAApwB,KAAAm6B,QAAA35B,SAAA,GAAAkf,WAA2E,MACnF,KAAA,EAAQ1f,KAAAk6B,UAAA5uB,UAAA/M,GAAA6xB,OAAA,EAAApwB,KAAAm6B,QAAA35B,SAAA,GAAAkf,WAEZ9f,QAAAU,aAAAC,WAAA,QAAA,EAAA,IAGJ+5B,aAAA,WAAe,IAAAx0B,EAAA9F,KACXJ,QAAAU,aAAAC,WAAA,SACAP,KAAAk6B,UAAAnC,iBACAn4B,QAAAqD,UAAAmG,OAAA,SAAA,SAAAnF,GACI,IAAAs2B,EAAA,EACAC,EAAA,EAEA,GAAA10B,EAAA6hB,aACI4S,EAAAh8B,GAAAqL,GAAA9D,EAAAq0B,QAAA35B,SAAA,GAAAkf,UAAAS,IAAAra,EAAAq0B,QAAA35B,SAAA,GAAAkf,UAAAvU,MACAqvB,EAAAj8B,GAAAqL,GAAA9D,EAAAo0B,UAAAxa,UAAAS,IAAAra,EAAAq0B,QAAA35B,SAAA,GAAAkf,UAAAvU,QAEAovB,EAAAh8B,GAAAqL,GAAA9D,EAAAq0B,QAAA35B,SAAA,GAAAkf,UAAAS,IAAAra,EAAAq0B,QAAA35B,SAAA,GAAAkf,UAAAvU,MACAqvB,EAAAj8B,GAAAqL,GAAA9D,EAAAo0B,UAAAxa,UAAAS,IAAAra,EAAAq0B,QAAA35B,SAAA,GAAAkf,UAAAvU,OAEJ,IAAAsvB,EAAAD,EAAAD,EACAt2B,EAAAzC,aAAA,UAAA2G,KAAArC,EAAA6hB,YAAA8S,EAAA30B,EAAAytB,sHC7CZ,IAAAxZ,EAAAnT,EAAA,kBAEArI,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UACAC,WAAA,CAGIqb,QAAA,CACItV,QAAAnG,GAAAqL,GAAA,EAAA,GACAqQ,YAAA,WACAC,QAAA,4BAEJC,WAAA,CACIzV,QAAAqV,EAAAK,UAAAC,KACAJ,YAAA,aACA3J,KAAAyJ,EAAAK,UACAF,QAAA,4BAIJI,WAAA,CACI5V,QAAA,EACAuV,YAAA,aACAC,QAAA,4BAGJK,UAAA,CACI7V,QAAA,EACA4L,KAAA/R,GAAAic,QACAN,QAAA,kCAaJS,SAAA,CACIjW,QAAA,KACA4L,KAAAsK,GAAAC,SACAX,QAAA,mDAEJY,QAAA,CACIpW,QAAAnG,GAAAqL,GAAA,EAAA,IAEJmR,QAAA,CACIrW,QAAA,KACA4L,KAAAsK,GAAAC,SACAX,QAAA,6CAEJc,QAAA,CACItW,QAAA,KACA4L,KAAA/R,GAAAM,KACAqb,QAAA,sBAEJe,UAAA,EACA1R,QAAA,CACI7E,QAAA,IAEJ2W,SAAA,CACI3W,QAAA,IAEJ8E,KAAAjL,GAAAkL,mBACA6R,OAAA/c,GAAAc,MACAkc,aAAAhd,GAAAid,OAEAkf,iBAAA,KAEAhf,MAAAnd,GAAAW,YACAyc,OAAApd,GAAAW,YAEA0c,SAAArd,GAAAM,KACAge,cAAA,KACAG,QAAA,EACAE,UAAA,EACAC,aAAA,IACAwd,WAAA,EACAC,cAAA,GACAxd,QAAA,EACAyd,UAAAt8B,GAAAM,KACAqc,WAAA,EACAoC,YAAA,EACAE,QAAA,EACAC,YAAA,EACAC,eAAA,IAEJhe,OAAA,WACIE,QAAAiE,aAAAgB,GAAAd,WAAAgL,mBAAA/O,KAAAqhB,MAAAha,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAiL,oBAAAhP,KAAA4iB,OAAAvb,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAsL,oBAAArP,KAAA86B,aAAAzzB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAkL,yBAAAjP,KAAA+6B,uBAAA1zB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAuL,UAAAtP,KAAAg7B,SAAA3zB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAA0L,mBAAAzP,KAAA2d,aAAAtW,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAA6L,YAAA5P,KAAAi7B,QAAA5zB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAA8L,oBAAA7P,KAAAk7B,eAAA7zB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAmM,uBAAAlQ,KAAAwe,eAAAnX,KAAArH,OACAA,KAAAwJ,KAAAxJ,KAAAwB,aAAAjD,GAAAkL,oBAEAzJ,KAAAwJ,KAAAyC,IAAAC,KAAAE,QAEJyR,SAAA,aAGAC,UAAA,aAGAxW,UAAA,WACI1H,QAAAiE,aAAA0D,eAAAxD,WAAAgL,oBACAnP,QAAAiE,aAAA0D,eAAAxD,WAAAiL,qBACApP,QAAAiE,aAAA0D,eAAAxD,WAAAsL,qBACAzP,QAAAiE,aAAA0D,eAAAxD,WAAAkL,0BACArP,QAAAiE,aAAA0D,eAAAxD,WAAAuL,WACA1P,QAAAiE,aAAA0D,eAAAxD,WAAA0L,oBACA7P,QAAAiE,aAAA0D,eAAAxD,WAAA6L,aACAhQ,QAAAiE,aAAA0D,eAAAxD,WAAA8L,qBACAjQ,QAAAiE,aAAA0D,eAAAxD,WAAAmM,yBAGJ/H,KAAA,WAKIvI,QAAAC,YAAAC,WAAAuU,UACIrU,KAAAge,cAEJhe,KAAAqb,SAAAzb,QAAAC,YAAAsV,SAAAC,UAAAxV,QAAAC,YAAA2H,SAAAmK,cAAA,GACA3R,KAAAie,eACAje,KAAAke,gBAGJF,YAAA,WACIpe,QAAAU,aAAAC,WAAA,gBAAA,IACAP,KAAAib,WACIjb,KAAAsd,YAAA,EACAtd,KAAA66B,UAAAp6B,QAAA,GAEJT,KAAAiE,KAAAoa,QAAA,KAEJV,aAAA,WACI3d,KAAAsd,YAAA,EACAtd,KAAAiE,KAAAoa,QAAA,KAEJ4c,QAAA,WACIj7B,KAAAod,QACApd,KAAAmf,KAAA,MAAA,IAEJ+b,eAAA,WACIl7B,KAAAod,QACApd,KAAAm7B,aAAAv7B,QAAAC,YAAAgY,uBAEJsjB,aAAA,SAAA9kB,GAAmB,IAAAvQ,EAAA9F,KACfA,KAAAiE,KAAAqH,UAAA/M,GAAAgN,SAAAhN,GAAAkN,SAAA,WACI7L,QAAAqD,UAAA0gB,eAAA,YAAA,SAAA1f,GACIA,EAAAzC,aAAAjD,GAAAwlB,UAAAtiB,OAAA,oBAAA4U,EAAA,eACA,IAAAlO,EAAA5J,GAAAkN,SAAA,WACI7L,QAAAC,YAAAkY,MAAA1B,GACApS,EAAA4b,YAAA,EAAA,OAEJqE,EAAA3lB,GAAAgN,SAAApD,EAAA5J,GAAA4lB,MAAA5lB,GAAA6lB,OAAA,IAAA7lB,GAAAoS,QAAA,EAAA,KAAApS,GAAA6xB,OAAA,GAAA7xB,GAAAqL,GAAA,EAAA,OAAArL,GAAA+lB,QAAA,IAAA/lB,GAAAkN,SAAA,WACIxH,EAAAC,aAEJD,EAAAqH,UAAA4Y,IACHpe,EAAA7B,QACJ1F,GAAAiN,UAAA,KAAAylB,OAAA,KAELzS,eAAA,WAEI,IADA,IAAAC,EAAA,EACA1d,EAAA,EAAAA,EAAA,EAAAA,IACI0d,GAAA7e,QAAAC,YAAAC,WAAA0U,eAAAzT,GAAA0T,KAEJ,GAAA,GAAAgK,EAEIze,KAAA4b,SAAAnb,QAAA,MACH,CACG,IAAAie,EAAA5b,UAAA2b,EAAA,GAAA,GACAE,EAAAF,EAAA,EAAAC,EAGA1e,KAAA4b,SAAApb,SAAA,GAAAgB,aAAAjD,GAAAiM,QAAAC,YAAA7K,QAAAqD,UAAA2b,YAAAlU,eAAA,aAAAgU,EAAA,IACA1e,KAAA4b,SAAApb,SAAA,GAAAgB,aAAAjD,GAAAiM,QAAAC,YAAA7K,QAAAqD,UAAA2b,YAAAlU,eAAA,eAAAgU,EAAA,GAAA,IAAAC,GACA3e,KAAA4b,SAAAnb,QAAA,IAIRwd,aAAA,WACIje,KAAAsb,OAAA7Z,OAAA7B,QAAAC,YAAA2H,SAAAkK,YAIJwM,aAAA,WACIte,QAAAC,YAAA2H,SAAAmK,cAAA,IACI3R,KAAA2a,SAAAkE,aAAAjf,QAAAqD,UAAA6b,eACA9e,KAAA2a,SAAAoE,QAAA/e,KAAAqb,SAAA2D,WAEAhf,KAAA2a,SAAAkE,aAAAjf,QAAAqD,UAAAgc,qBAAArf,QAAAC,YAAA2H,SAAAmK,cAAA,IAEJ,IAAAhO,EAAA/D,QAAAC,YAAA2H,SAAAmK,cAAA,GAAA,CAAA,SAAA,CAAA,iBACA3R,KAAA2a,SAAAuE,aAAA,EAAAvb,EAAA,IAAA,IAEJo3B,uBAAA,WACI/6B,KAAA0b,MAAArY,SAAAzD,QAAAC,YAAAC,WAAA6T,MAAA/T,QAAAC,YAAAC,WAAA4T,MACA1T,KAAA2b,OAAAtY,SAAAzD,QAAAC,YAAAC,WAAA2T,UAAA7T,QAAAC,YAAAC,WAAA0T,WAGJ2L,KAAA,SAAAnU,EAAAowB,GACI,GAAAA,EAAA,CACI,IAAApB,EAAAp6B,QAAAqD,UAAAshB,QAAA,WAAA/iB,aAAA,WAAA+kB,uBAAA/lB,SAEA66B,EAAAr7B,KAAAiE,KAAAyb,SAAAC,IAAA3f,KAAAga,QAAA4F,IAAA,MAeA,OAdAyb,EAAApwB,EAAA+uB,EAAA,GAAA/uB,IACIowB,EAAApwB,EAAA+uB,EAAA,GAAA/uB,GAEJowB,EAAApwB,EAAA+uB,EAAA,GAAA/uB,IACIowB,EAAApwB,EAAA+uB,EAAA,GAAA/uB,GAEJowB,EAAAnwB,EAAA8uB,EAAA,GAAA9uB,IACImwB,EAAAnwB,EAAA8uB,EAAA,GAAA9uB,GAEJmwB,EAAAnwB,EAAA8uB,EAAA,GAAA9uB,IACImwB,EAAAnwB,EAAA8uB,EAAA,GAAA9uB,GAEJlL,KAAAiE,KAAA4b,YAAAwb,QACAz7B,QAAAU,aAAAC,WAAA,SAGJ,GAAAP,KAAAsa,aACIta,KAAA26B,YAAA3vB,EACAhL,KAAA26B,WAAA,IACI36B,KAAA26B,WAAA36B,KAAA46B,cACAh7B,QAAAU,aAAAC,WAAA,MAAA,MAGR,IAAA6e,EAAA,GAAA7gB,GAAA8gB,KAAAC,iBAAA1W,KAAA2W,MAAAvf,KAAAga,QAAA9O,EAAAlL,KAAAga,QAAA/O,IAEIjL,KAAA2a,SAAA1W,KAAAub,OADJJ,EAAA,KAAAA,EAAA,GACI,EAEA,EAEJ,IAAAK,EAAAzf,KAAAiE,KAAAyb,SAAAC,IAAA3f,KAAAga,QAAA4F,IAAA5f,KAAAsa,WAAAtP,IACAhL,KAAAiE,KAAA4b,YAAAJ,GACA7f,QAAAiE,aAAAC,KAAAC,WAAAyL,2BAAAjR,GAAAqL,GAAA5J,KAAAiE,KAAAgH,EAAA,GAAAjL,KAAAiE,KAAAiH,EAAA,MAGJiT,aAAA,SAAA2C,GACI,IAAA9gB,KAAAod,QACApd,KAAAma,YAAA2G,EAAA,CACI9gB,KAAAma,WAAA2G,EAEA,IAAAnd,EAAA/D,QAAAC,YAAA2H,SAAAmK,cAAA,GAAA,CAAA,QAAA,OAAA,QAAA,CAAA,gBAAA,MAAA,OACA3R,KAAA2a,UAAA3a,KAAA2a,SAAAuE,aAAA,EAAAvb,EAAAmd,IAAA,KAGRf,OAAA,SAAAgB,GACI/gB,KAAAod,SACApd,KAAAga,QAAA+G,EACA/gB,KAAAgd,QACAhd,KAAAghB,UAAAD,KAEJC,UAAA,SAAAD,GACI,GAAA/gB,KAAAib,UACAjb,KAAAgb,QAAA,CACA,MAAA+F,IACIA,EAAA/gB,KAAAga,SAEJha,KAAA8a,QAAAiG,EACA/gB,KAAAgb,QAAAiG,UAAA1iB,GAAA8gB,KAAAC,iBAAA1W,KAAA2W,MAAAwB,EAAA7V,EAAA6V,EAAA9V,IAGA,IAAAmU,EAAA,GAAApf,KAAAgb,QAAAiG,SAGIjhB,KAAAgb,QAAAkG,OADJ9B,EAAA,KAAAA,EAAA,GACI,EAEA,IAGRkc,YAAA,SAAAva,GACI/gB,KAAA66B,UAAAhb,YAAAthB,GAAAqL,GAAA5J,KAAA66B,UAAA5Y,OAAAvC,UAAAC,IAAAoB,EAAAnB,IAAA,OACA5f,KAAA66B,UAAAr6B,SAAA,GAAAA,SAAA,GAAAqf,YAAAthB,GAAAqL,GAAA5J,KAAA66B,UAAAr6B,SAAA,GAAAkf,UAAAC,IAAAoB,EAAAnB,IAAA,MACA5f,KAAA66B,UAAAr6B,SAAA,GAAAA,SAAA,GAAAygB,UAAA1iB,GAAA8gB,KAAAC,iBAAA1W,KAAA2W,MAAAwB,EAAA7V,EAAA6V,EAAA9V,KAIJF,OAAA,SAAAC,GACI,IAAAhL,KAAAod,OAAA,CAIA,OAHAxd,QAAAC,YAAAC,WAAAuU,WACIzU,QAAAC,YAAAC,WAAA6U,UAAA3J,GAEJhL,KAAAma,YACI,KAAAJ,EAAAK,UAAAC,KACIra,KAAAsa,WAAAta,KAAAua,UACA,MACJ,KAAAR,EAAAK,UAAA+G,OACInhB,KAAAsa,WAAA1a,QAAAC,YAAAC,WAAAgU,SAEA,MACJ,KAAAiG,EAAAK,UAAAgE,KACIpe,KAAAsa,WAAA1a,QAAAC,YAAAC,WAAAgU,SAAAlL,KAAAC,MAAAjJ,QAAAC,YAAAC,WAAAgU,SAAAlU,QAAAC,YAAA0Y,iBAAAjK,UAAA3D,QAKR3K,KAAAmf,KAAAnU,GACAhL,KAAAu7B,SAAAvwB,GACAhL,KAAAib,UAAAjb,KAAAkb,YACIlb,KAAAkd,WAAAlS,EACAhL,KAAAkd,UAAA,IACIld,KAAAkd,UAAAld,KAAAmd,aACAnd,KAAAw7B,sBAIRx7B,KAAAsd,aAEAtd,KAAAgd,QACIhd,KAAAkd,WAAAlS,EACAhL,KAAAkd,UAAA,IACIld,KAAAkd,UAAAld,KAAAmd,aACAnd,KAAAohB,iBAGJphB,KAAAkd,UAAA,KAGRoE,WAAA,WAGI1hB,QAAAqD,UAAA+nB,UAAA/mB,KAAA4b,YAAA7f,KAAAiE,KAAAyb,WAGJ6b,SAAA,SAAAvwB,GACI,MAAApL,QAAAC,YAAAC,WAAAyU,WACIhW,GAAAqL,GAAAhK,QAAAC,YAAAC,WAAAyU,UAAA2L,cAAAC,IAAA5hB,GAAAqL,GAAA5J,KAAAiE,KAAAyb,WAAAvU,MACAvL,QAAAC,YAAAC,WAAAyU,UAAA8L,UAAA,GACIrgB,KAAAyd,aAAAzS,EACAhL,KAAAyd,YAAA,IACIzd,KAAAyd,YAAAzd,KAAA0d,eACA1d,KAAAsgB,SAAA,GAAA,IAEJtgB,KAAAwd,QAAA,GAKJxd,KAAAwd,QAAA,GAGRwd,SAAA,SAAAxS,GACIxoB,KAAAod,QACApd,KAAAib,WACAjb,KAAAgd,OAAAwL,EACAxoB,KAAAgd,QACIhd,KAAAohB,iBAGRA,aAAA,WACI,IAAAlN,EAAAtU,QAAAC,YAAAC,WAAAoU,WAAAhU,SAOA+H,MAAA6R,YAAA5F,EAAAlU,KAAAwB,aAAA,WAGA,IAFA,IAAAmf,EAAA,IACA/J,GAAA,EACA7V,EAAA,EAAAA,EAAAmT,EAAAyF,OAAA5Y,IAAA,CAEI,IAAAqf,EAAA7hB,GAAAqL,GAAAsK,EAAAnT,GAAAkD,KAAAyb,UAAAS,IAAA5hB,GAAAqL,GAAA5J,KAAAiE,KAAAyb,WAAAvU,MACAiV,EAAAO,GAAAP,EAAA,IAAApgB,KAAAuJ,QAAAqB,QACI+V,EAAAP,EACAxJ,EAAA7V,GAIR,IAAAkf,EAAA,KACA,IAAA,GAAArJ,EACI5W,KAAAgd,QAAA,MACH,CACGhd,KAAAgd,QAAA,EACA,IAAAuE,EAAArN,EAAA0C,GAAA3S,KACAgc,EAAA1hB,GAAAqL,GAAA2X,EAAA7B,UAAAS,IAAA5hB,GAAAqL,GAAA5J,KAAAiE,KAAAyb,WAAAa,YAEJvgB,KAAAghB,UAAAf,IAEJub,kBAAA,WAII,IAHA,IAAArnB,EAAAvU,QAAAC,YAAAC,WAAAqU,UAAAjU,SACAygB,EAAA,IACA/J,GAAA,EACA7V,EAAA,EAAAA,EAAAoT,EAAAwF,OAAA5Y,IAAA,CACI,IAAAqf,EAAA7hB,GAAAqL,GAAAuK,EAAApT,GAAA2e,UAAAS,IAAA5hB,GAAAqL,GAAA5J,KAAAiE,KAAAyb,WAAAvU,MACAiV,EAAAO,IACIA,EAAAP,EACAxJ,EAAA7V,GAGR,IAAAkf,EAAA,KACA,IAAA,GAAArJ,EACI5W,KAAAkb,WAAA,EACAlb,KAAA66B,UAAAp6B,QAAA,MACH,CACG,IAAAmgB,EAAAzM,EAAAyC,GACAqJ,EAAA1hB,GAAAqL,GAAAgX,EAAAlB,UAAAS,IAAA5hB,GAAAqL,GAAA5J,KAAAiE,KAAAyb,WAAAa,YACAvgB,KAAAs7B,YAAArb,KAGRoB,MAAA,WACI,IAAArhB,KAAAod,QACApd,KAAAib,SAAA,CACA,GAAArb,QAAAC,YAAAmY,YAAA,CAEIhY,KAAA+a,QAAAmE,aAAA,EAAA,UAAAlf,KAAAuJ,QAAAyV,UAAA,GACA,IAAAwC,EAAA5Y,KAAA6Y,KAAAzhB,KAAAuJ,QAAAiY,OAAA5hB,QAAAC,YAAAC,WAAA8T,UAAAhU,QAAAC,YAAA0Y,iBAAAjK,UAAAC,UACAmT,GAAA,EAKA,GAJAzZ,MAAAyZ,OAAA9hB,QAAAC,YAAAC,WAAA+T,QAAAjU,QAAAC,YAAA0Y,iBAAAjK,UAAAG,SACI+S,GAAA,EACAE,GAAA,GAEJ,MAAA1hB,KAAAuJ,QAAAgB,SAAA,CACI3K,QAAAU,aAAAC,WAAA,aAAA,IACA,IAAAqhB,EAAArjB,GAAAsjB,YAAA7hB,KAAAub,cACAuG,EAAAvjB,GAAAsjB,YAAA7hB,KAAAub,cACAwG,EAAAxjB,GAAAsjB,YAAA7hB,KAAAub,cACAyG,EAAAhiB,KAAAiE,KAAAge,OAAAA,OAAAC,qBAAAliB,KAAAgb,QAAAxa,SAAA,GAAA2hB,sBAAA5jB,GAAAqL,GAAA,EAAA,KACAgY,EAAAK,OAAAH,EAAAG,OAAAF,EAAAE,OAAAjiB,KAAAiE,KAAAge,OAAAA,OACAL,EAAA/B,YAAAmC,GACAF,EAAAjC,YAAAmC,GACAD,EAAAlC,YAAAmC,GACAJ,EAAAX,SAAAjhB,KAAAgb,QAAAiG,SACAa,EAAAb,SAAAjhB,KAAAgb,QAAAiG,SAAA,GACAc,EAAAd,SAAAjhB,KAAAgb,QAAAiG,SAAA,GACA,IAAAmB,EAAA7jB,GAAAqL,GAAA5J,KAAA8a,SACAuH,EAAAT,EAAApgB,aAAA,UACA6gB,EAAAhZ,WAAArJ,KAAAwJ,KAAAyC,IACAoW,EAAA/Y,YAAA1J,QAAAC,YAAA2H,SAAAkK,WACA2Q,EAAA1Y,QAAAyY,EACAC,EAAAla,KAAAnI,KAAAuJ,QAAAiY,EAAAE,GACA,IAAAY,EAAAR,EAAAtgB,aAAA,UACA8gB,EAAAjZ,WAAArJ,KAAAwJ,KAAAyC,IACAqW,EAAAhZ,YAAA1J,QAAAC,YAAA2H,SAAAkK,WACA4Q,EAAA3Y,QAAAyY,EAAApC,QAAAzhB,GAAA8gB,KAAAkD,iBAAA,KACAD,EAAAna,KAAAnI,KAAAuJ,QAAAiY,EAAAE,GACA,IAAAc,EAAAT,EAAAvgB,aAAA,UACAghB,EAAAnZ,WAAArJ,KAAAwJ,KAAAyC,IACAuW,EAAAlZ,YAAA1J,QAAAC,YAAA2H,SAAAkK,WACA8Q,EAAA7Y,QAAAyY,EAAApC,QAAAzhB,GAAA8gB,KAAAkD,kBAAA,KACAC,EAAAra,KAAAnI,KAAAuJ,QAAAiY,EAAAE,OACH,CACG,MAAA1hB,KAAAuJ,QAAAgB,UAAA,MAAAvK,KAAAuJ,QAAAgB,SACI3K,QAAAU,aAAAC,WAAA,eAAA,IACH,MAAAP,KAAAuJ,QAAAgB,UAAA,MAAAvK,KAAAuJ,QAAAgB,SACG3K,QAAAU,aAAAC,WAAA,gBAAA,IACH,MAAAP,KAAAuJ,QAAAgB,UACG3K,QAAAU,aAAAC,WAAA,aAAA,IAEJ,IAAAyN,EAAAzP,GAAAsjB,YAAA7hB,KAAAub,cACAkH,EAAAziB,KAAAiE,KAAAge,OAAAA,OAAAC,qBAAAliB,KAAAgb,QAAAxa,SAAA,GAAA2hB,sBAAA5jB,GAAAqL,GAAA,EAAA,KACAoE,EAAAiU,OAAAjiB,KAAAiE,KAAAge,OAAAA,OACAjU,EAAA6R,YAAA4C,GACAzU,EAAAiT,SAAAjhB,KAAAgb,QAAAiG,SACA,IAAAyB,EAAA1U,EAAAxM,aAAA,UACAkhB,EAAArZ,WAAArJ,KAAAwJ,KAAAyC,IACAyW,EAAApZ,YAAA1J,QAAAC,YAAA2H,SAAAkK,WACAgR,EAAA/Y,QAAA3J,KAAA8a,QACA4H,EAAAva,KAAAnI,KAAAuJ,QAAAiY,EAAAE,GAEJ1hB,KAAA+6B,8BAEAn7B,QAAAqD,UAAAwnB,MAAA7qB,QAAAqD,UAAAw4B,OAAAj7B,SAAA,GAAA2D,MAAA3C,aAAA5B,QAAAqD,UAAAw4B,OAAAj7B,SAAA,GAAA2D,MAAA6tB,iBAEJ,GAAApyB,QAAAC,YAAAC,WAAA2T,WACI7T,QAAAqD,UAAAwnB,MAAA7qB,QAAAqD,UAAAw4B,OAAAj7B,SAAA,GAAA2D,MAAA3C,aAAA5B,QAAAqD,UAAAw4B,OAAAj7B,SAAA,GAAA2D,MAAA6tB,mBAGRpP,OAAA,WACI5iB,KAAAod,QACApd,KAAAib,WACArb,QAAAU,aAAAC,WAAA,SAAA,IACAP,KAAA+a,QAAAmE,aAAA,EAAA,UAAAlf,KAAAuJ,QAAAyV,UAAA,KAEJ8D,YAAA,SAAAC,GACInjB,QAAAU,aAAAC,WAAA,YAAA,IACAP,KAAAuJ,QAAA3J,QAAAC,YAAAsV,SAAAE,WAAA0N,GACA/iB,KAAAib,UAAA,EACAjb,KAAA66B,UAAAp6B,QAAA,EACAb,QAAAiE,aAAAC,KAAAC,WAAAqL,sBAAA,GACAxP,QAAAC,YAAAC,WAAAwT,cAAAtT,KAAAuJ,QAAAyZ,WACApjB,QAAAC,YAAAC,WAAAyT,eAAAvT,KAAAuJ,QAAA0Z,YACArjB,QAAAC,YAAAC,WAAA0T,UAAAxT,KAAAuJ,QAAA2Z,QACAtjB,QAAAC,YAAAoY,YACAjY,KAAAgb,QAAAva,QAAA,EAEIT,KAAA+a,QAAA8D,aADJkE,EAAA,EACInjB,QAAAqD,UAAAkgB,iBAAA,GAEAvjB,QAAAqD,UAAAkgB,iBAAA,GAEJnjB,KAAA+a,QAAAgE,QAAA/e,KAAAuJ,QAAAyV,UACAhf,KAAAghB,UAAAhhB,KAAAga,UAIJ1U,QAAA,aAGAwG,eAAA,SAAAC,EAAAvD,EAAAwD,GACI,GAAAxD,EAAAyD,KAAAC,KAAA+B,MACA,GAAAjC,EAAAC,KAAAC,KAAA6B,KAAA,CACI,IAAAqV,EAAApX,EAAA/H,KAAAzC,aAAA,cACA4hB,EAAAC,SAAAvC,OAAA1S,SAAAC,QACIrO,KAAA06B,iBAAAtX,EACApjB,KAAAib,SAIIrb,QAAAiE,aAAAC,KAAAC,WAAAmL,mBAAA,EAAAtP,QAAAC,YAAAsV,SAAAE,WAAA+N,EAAAC,SAAAN,SAHA9a,MAAA6R,YAAAla,QAAAC,YAAAC,WAAAqU,UAAAnI,EAAA/H,MACAjE,KAAA86B,iBAeP1X,EAAAC,SAAAvC,OAAA1S,SAAAL,MACG/N,KAAAsF,eAEP,GAAA0G,EAAAC,KAAAC,KAAA8B,OAAA,CACG,IAAApO,QAAAC,YAAAC,WAAAuU,SAAA,OACA,GAAArU,KAAAod,OAAA,OACA,IAAAkG,EAAAtX,EAAA/H,KAAAzC,aAAA,UACA,GAAA8hB,EAAAja,YAAAb,EAAAyD,IAAA,OACA,GAAAD,EAAA/H,MAAAjE,KAAA6c,cAAA,OACA7c,KAAA6c,cAAA7Q,EAAA/H,KACAjE,KAAAsgB,SAAAgD,EAAAtZ,OAAAsZ,EAAAja,WAAAia,EAAAha,YAAAga,EAAArZ,cACH,GAAA+B,EAAAC,KAAAC,KAAAiC,KAAA,CACG,GAAAnO,KAAAod,OAAA,OACApd,KAAAsgB,SAAA,KAAA,KAGRzG,aAAA,SAAA9N,EAAAvD,EAAAwD,GACI,GAAAxD,EAAAyD,KAAAC,KAAA+B,OACAjC,EAAAC,KAAAC,KAAA6B,KAAA,CACI,IAAAqV,EAAApX,EAAA/H,KAAAzC,aAAA,cACA4hB,EAAAC,SAAAvC,OAAA1S,SAAAC,QAEIrO,KAAA06B,iBAAA,KACA96B,QAAAiE,aAAAC,KAAAC,WAAAmL,mBAAA,KACHkU,EAAAC,SAAAvC,MAAA1S,SAAAL,QAMT+sB,aAAA,WACI,IAAA/X,EAAA/iB,KAAA06B,iBAAArX,SAAAN,MACA,GAAA/iB,KAAAib,SAEC,CAEG,IAAA8J,EAAA,CACIjE,MAAA1S,SAAAC,OACA0U,MAAAnjB,QAAAC,YAAAsV,SAAAE,WAAAmB,QAAAxW,KAAAuJ,UAEJvJ,KAAA06B,iBAAAvyB,KAAA4c,GACAnlB,QAAAiE,aAAAC,KAAAC,WAAAmL,mBAAA,EAAAlP,KAAAuJ,cARAvJ,KAAA06B,iBAAAz2B,KAAAC,UAUJlE,KAAA8iB,YAAAC,IAEJzC,SAAA,SAAAtW,EAAAyZ,EAAAna,EAAAW,GAAqD,IAAAzD,EAAAxG,KAsBjD,GArBAJ,QAAAqD,UAAA0gB,eAAA,YAAA,SAAA1f,GACI,IAAA2f,EAAA3f,EAAAge,OAAAC,qBAAA1b,EAAAvC,KAAAke,sBAAA5jB,GAAAqL,GAAA,GAAA,MACA3F,EAAA4b,YAAA+D,GAEA,IAAAC,EAAAjb,KAAA6Y,KAAAzX,EAAApK,QAAAC,YAAAC,WAAAkU,QAAApL,KAAA6Y,KAAAzX,EAAApK,QAAAC,YAAA0Y,iBAAAjK,UAAAE,MAEAsV,EAAA,gBADA9Z,GAAA6Z,GACA,WACA5Z,IACI6Z,EAAA,2BAAA9Z,EAAA,YAEJ6Z,IACIC,GAAA,8BAAAD,EAAA,YAEJ5f,EAAAzC,aAAAjD,GAAAwlB,UAAAtiB,OAAA,MAAAqiB,EAAA,OACA,IAAAE,EAAAzlB,GAAAqL,GAAA3B,MAAAC,UAAA,GAAA,KAAAD,MAAAC,UAAA,GAAA,MACA+b,EAAA,CAAAL,EAAArlB,GAAAqL,GAAAga,EAAA3Y,EAAA+Y,EAAA/Y,EAAA,GAAA2Y,EAAA1Y,EAAA8Y,EAAA9Y,EAAA,IAAA0Y,EAAAjE,IAAAqE,IACAE,EAAA3lB,GAAAgN,SAAAhN,GAAA4lB,MAAA5lB,GAAA6lB,OAAA,IAAA7lB,GAAAoS,QAAA,GAAA,KAAApS,GAAA8lB,SAAA,GAAAJ,IAAA1lB,GAAAiN,UAAA,IAAAjN,GAAA+lB,QAAA,IAAA/lB,GAAAkN,SAAA,WACIxH,EAAAC,aAEJD,EAAAqH,UAAA4Y,IACHlkB,KAAAiE,KAAAge,OAAAA,QACDriB,QAAAC,YAAA+X,SAAA5N,QAEC,CAMG,GAJApK,QAAAU,aAAAC,WAAA,YAAA,IACAP,KAAAiE,KAAAge,OAAAriB,QAAAqD,UAAAshB,QAAA,WAAAC,eAAA,kBACAxkB,KAAAwJ,KAAAsB,SAAA,EACA9K,KAAAod,QAAA,GACA,GAAAqG,EACI7jB,QAAAqD,UAAAC,UAAAtD,QAAAC,YAAA2H,SAAAkK,WAAA,kCACH,IAAA,GAAA+R,EACG7jB,QAAAqD,UAAAC,UAAAtD,QAAAC,YAAA2H,SAAAkK,WAAA,uCACH,CACG,IAAA+S,EAAA7kB,QAAAC,YAAAqY,WAAAuL,EAAAna,GACA,GAAAmb,EAAA,EAAA,CACI,IAAAC,EAAAD,EAAA,EAAA,EAAAA,EACA7kB,QAAAU,aAAAC,WAAA,OAAAmkB,EAAA,IACA9kB,QAAAqD,UAAAC,UAAAoG,EAAA,KAAAmb,QAEA7kB,QAAAqD,UAAAC,UAAAoG,EAAA,uBAAA1J,QAAAC,YAAA2H,SAAAkK,YAUR,GAAA1R,KAAAib,SAAA,CACI,IAAA0J,EAAA/kB,QAAAqD,UAAA2hB,SAAApkB,SAAA,GAAAgB,aAAA,WACA5B,QAAAqD,UAAA0gB,eAAA,aAAA,SAAA1f,GACI,IAAA4gB,EAAAF,EAAAG,WAAA5C,qBAAA1b,EAAAvC,KAAAke,sBAAA5jB,GAAAqL,GAAA,EAAA,KACA3F,EAAAge,OAAA0C,EAAAG,WACA7gB,EAAA4b,YAAAgF,GACA,IAAAE,EAAA,CACIjE,MAAA1S,SAAAC,OACA0U,MAAA9a,MAAAe,SAAApJ,QAAAC,YAAAsV,SAAAE,WAAA7O,EAAA+C,UAGJtF,EAAAzC,aAAA,cAAA2G,KAAA4c,GACAnlB,QAAAC,YAAAC,WAAAqU,UAAAsC,KAAAxS,KAGR,IAAAN,EAAA/D,QAAAC,YAAA2H,SAAAmK,cAAA,GAAA,CAAA,QAAA,CAAA,SACA3R,KAAA2a,SAAAuE,aAAA,EAAAvb,EAAA,IAAA,GACA3D,KAAAgb,QAAAva,QAAA,EACAwH,MAAA6R,YAAAla,QAAAC,YAAAC,WAAAoU,WAAAlU,KAAAiE,KAAAzC,aAAA,WACA,IAAAmwB,EAAA/xB,QAAAC,YAAAC,WAAAoU,WAAAyF,OACA,MAAA/Z,QAAAqD,UAAA2uB,SAAA,cAAAhyB,QAAAqD,UAAA8E,UAAA,YAAA,SAAA9D,GACIA,EAAAzC,aAAA,aAAA2G,MAAA,EAAAwpB,EAAA,KAEJ/xB,QAAAiE,aAAAC,KAAAC,WAAAoL,4KCrmBZ7B,EAAAC,QAvCA,CACImuB,QAAA,mBACAC,SAAA,oBACAC,QAAA,mBACAC,OAAA,kBACAC,cAAA,yBACAC,MAAA,iBACAC,MAAA,iBACAC,OAAA,kBACAC,UAAA,qBACAC,aAAA,wBACAC,UAAA,qBACAC,WAAA,sBACAlH,OAAA,cACAmH,MAAA,aACAC,WAAA,kBACAC,QAAA,mBACAC,OAAA,kBACAC,QAAA,mBACAC,kBAAA,yBACAC,iBAAA,wBACAC,UAAA,iBACAC,QAAA,eACAC,OAAA,cACAC,KAAA,YACAC,UAAA,qBACAC,WAAA,sBACAC,cAAA,yIC1BJ5+B,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIonB,SAAAxnB,GAAAynB,SACAC,aAAA1nB,GAAAid,OACA0K,eAAA3nB,GAAAid,OACA2K,iBAAA5nB,GAAAid,OAEA4hB,UAAA7+B,GAAAM,KACAunB,cAAA7nB,GAAAM,KACAwnB,gBAAA9nB,GAAAM,KACAimB,WAAAvmB,GAAAM,KACA0nB,uBAAAhoB,GAAAM,KAEA6nB,SAAAnoB,GAAA6L,YAEAuc,QAAA,GACAC,OAAA,GACAC,aAAA,GAIJnnB,OAAA,WACIM,KAAA0nB,cACA1nB,KAAAyrB,aACAzrB,KAAA0rB,aAEJ3gB,OAAA,SAAAC,GACIhL,KAAA6mB,cACA7mB,KAAA4mB,QAAA5b,EACAhL,KAAA4mB,OAAA,IACI5mB,KAAA4mB,OAAA5mB,KAAA2mB,QACA3mB,KAAAooB,aAIRV,YAAA,WAAc,IAAA5hB,EAAA9F,KACVJ,QAAAC,YAAAC,WAAAoU,WAAA,GACAtU,QAAAC,YAAAC,WAAAqU,UAAA,GAEA,IAAAyV,EAAA5pB,KAAA+lB,SAAA8D,SAAA,QACA7pB,KAAA+lB,SAAA+D,eAAA,WAAAC,SAAApT,QAAA,SAAAqT,GACI,IAAAC,EAAA1rB,GAAAsjB,YAAA/b,EAAAmgB,cACAgE,EAAAzoB,aAAAjD,GAAAiM,QAAAC,YAAA3E,EAAA4gB,SAAAhc,eAAAsf,EAAA7lB,KAAA+lB,MAAA,KAAA,IACAD,EAAAhI,OAAAnc,EAAAugB,gBACA,IAAArC,EAAA4F,EAAAO,cAAArkB,EAAAskB,WAAA7rB,GAAAqL,GAAAogB,EAAA/e,EAAA+e,EAAA9e,KACA+e,EAAApK,YAAAmE,GACA,IAAAa,EAAA/e,EAAAsgB,cAAAlE,qBAAA+H,EAAA9H,sBAAA5jB,GAAAqL,GAAA,EAAA,KACAqgB,EAAAhI,OAAAnc,EAAAsgB,cACA6D,EAAApK,YAAAgF,KAEJ7kB,KAAA+lB,SAAA+D,eAAA,aAAAC,SAAApT,QAAA,SAAAqT,GACI,IAAAC,EAAA1rB,GAAAsjB,YAAA/b,EAAAogB,gBACAsD,EAAAS,EAAAzoB,aAAAjD,GAAAkL,oBACA+f,EAAA3e,KAAAtM,GAAAsM,KAAAmf,EAAA3B,MAAA2B,EAAA1B,QACAkB,EAAAa,OAAA9rB,GAAAqL,GAAAogB,EAAA3B,MAAA,GAAA2B,EAAA1B,OAAA,GACAkB,EAAApe,QACAtF,EAAAugB,gBAAAiE,SAAAL,GACAA,EAAApK,YAAAthB,GAAAqL,GAAAogB,EAAA/e,EAAA+e,EAAA9e,IACAse,EAAAvd,IAAAC,KAAAC,WAEJnM,KAAA+lB,SAAA+D,eAAA,OAAAC,SAAApT,QAAA,SAAAqT,GAEI,IAAAC,EAAA1rB,GAAAsjB,YAAA/b,EAAAqgB,kBACA8D,EAAAhI,OAAAnc,EAAAugB,gBACA,IAAArC,EAAA4F,EAAAO,cAAArkB,EAAAskB,WAAA7rB,GAAAqL,GAAAogB,EAAA/e,EAAA+e,EAAA9e,KACA+e,EAAApK,YAAAmE,GACA,IAAAa,EAAA/e,EAAAgf,WAAA5C,qBAAA+H,EAAA9H,sBAAA5jB,GAAAqL,GAAA,EAAA,KACAqgB,EAAAhI,OAAAnc,EAAAgf,WACAmF,EAAApK,YAAAgF,GACA,IAAAE,EAAA,CACIjE,MAAA1S,SAAAC,OACA0U,MAAA9a,MAAAC,UAAA,EAAA,IAEJ+hB,EAAAzoB,aAAA,cAAA2G,KAAA4c,GACAnlB,QAAAC,YAAAC,WAAAqU,UAAAsC,KAAAwT,MAKRG,WAAA,SAAAyB,GACI,IAAAC,EAAA9rB,KAAA+lB,SAAA9hB,KAAA8nB,iBACAC,EAAAhsB,KAAA+lB,SAAAkG,cACAhhB,EAAArC,KAAAC,MAAAgjB,EAAA5gB,EAAA+gB,EAAA3D,OACAnd,EAAAtC,KAAAC,OAAAijB,EAAAxD,OAAAuD,EAAA3gB,GAAA8gB,EAAA1D,QACA,OAAA/pB,GAAAqL,GAAAqB,EAAAC,IAEJugB,WAAA,WAAa,IAAAjlB,EAAAxG,KACTJ,QAAAqD,UAAA0gB,eAAA,SAAA,SAAA1f,GAGI,IAAAioB,EAAAjoB,EAAAzC,aAAA,UACA5B,QAAAqD,UAAAwnB,MAAA,aAAAjpB,aAAA,aAAAkpB,SAAAlpB,aAAA,YAAA4K,OAAA8f,EACAA,EAAA/jB,OACAvI,QAAAC,YAAAC,WAAAoU,WAAAuC,KAAAyV,GACA1lB,EAAAqgB,aAAA,GACH7mB,KAAAomB,gBAELsF,UAAA,WAqBI,IApBA,IACAW,EAAArsB,KAAAumB,uBAAA/lB,SAkBA+rB,EAAArgB,KAAAG,MACAtL,EAAA,EAAAA,EAAA,EAAAA,IACIA,EAAA,GAAAnB,QAAAC,YAAA2H,SAAAmK,eAGA/R,QAAAqD,UAAA0gB,eAAA,QAAA,SAAA1f,GAEIA,EAAAzC,aAAAjD,GAAAkL,oBAAAwC,IAAAsgB,IACAtoB,EAAA4b,YAAAthB,GAAAqL,GAAA3B,MAAAC,UAAAmkB,EAAA,GAAAphB,EAAAohB,EAAA,GAAAphB,GAAAhD,MAAAC,UAAAmkB,EAAA,GAAAnhB,EAAAmhB,EAAA,GAAAnhB,KACA,IAAAghB,EAAAjoB,EAAAzC,aAAA,SACA0qB,EAAA/jB,KAAApH,EAAA,EAAAnB,QAAAC,YAAAsV,SAAAG,UAAAvU,IACAnB,QAAAC,YAAAC,WAAAoU,WAAAuC,KAAAyV,IACHlsB,KAAAomB,eAGL,IAAAf,EAAA,WACI,IAAAtkB,IACAA,EAAA,GAAAnB,QAAAC,YAAA2H,SAAAmK,eAGI/R,QAAAqD,UAAA0gB,eAAA,QAAA,SAAA1f,GAEIA,EAAAzC,aAAAjD,GAAAkL,oBAAAwC,IAAAsgB,IACAtoB,EAAA4b,YAAAthB,GAAAqL,GAAA3B,MAAAC,UAAAmkB,EAAA,GAAAphB,EAAAohB,EAAA,GAAAphB,GAAAhD,MAAAC,UAAAmkB,EAAA,GAAAnhB,EAAAmhB,EAAA,GAAAnhB,KACA,IAAAghB,EAAAjoB,EAAAzC,aAAA,SACA0qB,EAAA/jB,KAAApH,EAAA,EAAAnB,QAAAC,YAAAsV,SAAAG,UAAAvU,IACAnB,QAAAC,YAAAC,WAAAoU,WAAAuC,KAAAyV,GACAtsB,QAAAiE,aAAAC,KAAAC,WAAAoL,2BACHnP,KAAAomB,eAELrlB,MACHsG,KAAArH,MACDA,KAAAgoB,SAAA3C,EAAA,GAAA,GAAA,IAEJ+C,QAAA,WACI,IAAAoE,EAAAxsB,KAAAomB,cAAA5lB,SAAAN,SACAusB,EAAA,GACAC,EAAA,GACA,IAAA,IAAA3rB,KAAAyrB,EACI5sB,QAAAqD,UAAA0e,aAAA6K,EAAAzrB,MACI0rB,EAAAhW,KAAA,CACIvL,EAAAshB,EAAAzrB,GAAAmK,EACA0L,MAAA7V,IAEJ2rB,EAAAjW,KAAA1V,IAKR,IAAA,IAAAurB,KADAG,EAAAG,KAAA,SAAAjtB,EAAAktB,GAAc,OAAAA,EAAA3hB,EAAAvL,EAAAuL,IACduhB,EACID,EAAAC,EAAAH,GAAA1V,OAAAkW,gBAAAJ,EAAAJ,oHCzKZ/tB,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACI+rB,SAAA,CACIhmB,QAAA,KACA4L,KAAA/R,GAAAM,KACAqb,QAAA,kCAEJ8S,UAAAzuB,GAAAM,KACAquB,SAAA3uB,GAAAM,KACAsuB,cAAA5uB,GAAAM,KACAuuB,MAAA7uB,GAAAc,MACAguB,aAAA9uB,GAAAc,MACAiuB,cAAA/uB,GAAAM,KACA2uB,eAAAjvB,GAAAM,KACA4uB,iBAAA,CAAAlvB,GAAAmvB,aAEAjR,YAAA,EACAC,YAAA,EACAC,aAAA,EACAC,aAAA,EAEAygB,eAAA,GACAvP,oBAAA,EACAwP,cAAA,GAGJ59B,OAAA,WAAS,IAAAoG,EAAA9F,KACLJ,QAAAC,YAAAC,WAAAuU,UAAA,EACAzU,QAAAiE,aAAAgB,GAAAd,WAAA+K,sBAAA9O,KAAA2iB,cAAAtb,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAmL,kBAAAlP,KAAAsvB,gBAAAjoB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAqL,qBAAApP,KAAAuvB,mBAAAloB,KAAArH,OACAJ,QAAAiE,aAAAgB,GAAAd,WAAAoL,yBAAAnP,KAAAwvB,uBAAAnoB,KAAArH,OACAA,KAAAktB,SAAAroB,GAAAtG,GAAAM,KAAAgxB,UAAAC,YAAA9vB,KAAA+vB,aAAA/vB,MACAA,KAAAktB,SAAAroB,GAAAtG,GAAAM,KAAAgxB,UAAAG,UAAAhwB,KAAAiwB,aAAAjwB,MACAA,KAAAktB,SAAAroB,GAAAtG,GAAAM,KAAAgxB,UAAAK,aAAAlwB,KAAAiwB,aAAAjwB,MACAJ,QAAAqD,UAAAqtB,SAAA,cACAtwB,KAAAstB,cAAA9sB,SAAA,GAAA8K,UAAA/M,GAAA4xB,SAAA,GAAA,IAAAtkB,iBACA7L,KAAAwtB,eAAAhtB,SAAA,GAAA8K,UAAA/M,GAAAgN,SAAAhN,GAAAkN,SAAA,WACI3F,EAAA0nB,eAAAhtB,SAAA,GAAAA,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACG3F,EAAA0nB,eAAAhtB,SAAA,GAAAA,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACG3F,EAAA0nB,eAAAhtB,SAAA,GAAAA,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACG3F,EAAA0nB,eAAAhtB,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAqF,EAAA0nB,eAAAhtB,SAAA,GAAAA,SAAA,GAAAC,QAAA,EACAqF,EAAA0nB,eAAAhtB,SAAA,GAAAA,SAAA,GAAAC,QAAA,IACHlC,GAAAiN,UAAA,KAAAK,iBACD7L,KAAAq9B,eAAA,GAEAz9B,QAAAC,YAAAC,WAAAwU,cAAAmC,KAAA,CACI2B,SAAA,EACA9O,YAAA1J,QAAAC,YAAA2H,SAAAkK,aAEJ1R,KAAAqwB,sBAEJ/oB,UAAA,WACI1H,QAAAiE,aAAA0D,eAAAxD,WAAA+K,uBACAlP,QAAAiE,aAAA0D,eAAAxD,WAAAmL,mBACAtP,QAAAiE,aAAA0D,eAAAxD,WAAAqL,sBACAxP,QAAAiE,aAAA0D,eAAAxD,WAAAoL,2BAGJpE,OAAA,SAAAC,GAsBI,GArBAhL,KAAA0c,aAAA1R,EACAhL,KAAAyc,YAAAzc,KAAA0c,YAAA,IAAA1c,KAAA2c,cACI3c,KAAA0c,YAAA9c,QAAAC,YAAAC,WAAAwT,cACAtT,KAAAqhB,SAEJrhB,KAAA2c,cACI3c,KAAA4c,cAAA5R,EACAhL,KAAA2c,aAAA3c,KAAA4c,aAAA,IACI5c,KAAA2c,aAAA,EACA/c,QAAAC,YAAAoY,cAIRjY,KAAAq9B,gBAAAryB,EACAhL,KAAAq9B,eAAA,IACIr9B,KAAAwtB,eAAAhtB,SAAA,GAAAC,QAAA,EACAT,KAAAwtB,eAAAhtB,SAAA,GAAAC,QAAA,EACAT,KAAAwtB,eAAAhtB,SAAA,GAAAC,QAAA,EACAT,KAAAu9B,gBACAv9B,KAAAwtB,eAAAhtB,SAAA,GAAAgB,aAAAjD,GAAAiM,QAAAC,YAAAzK,KAAAytB,iBAAA7kB,KAAAC,MAAA7I,KAAAq9B,eAAA,KAEJz0B,KAAAC,MAAA7I,KAAAq9B,iBAAA,EAAA,CACI,IAAAr9B,KAAAs9B,aAAA,OACAt9B,KAAAs9B,cAAA,EACA19B,QAAAqD,UAAA8E,UAAA,YAAA,SAAA9D,GACIA,EAAAzC,aAAA,aAAA2G,KAAA,SAAA,OAKZqrB,YAAA,SAAAD,GACI3zB,QAAAqD,UAAAmG,OAAA,UAAA,SAAAnF,GACIA,EAAAzC,aAAA,WAAA2G,KAAAorB,MAGRgK,cAAA,WAAgB,IAAA/2B,EAAAxG,KACZ,IAAAA,KAAA8tB,mBAAA,CACA9tB,KAAA8tB,oBAAA,EACAvvB,GAAAyG,IAAA,sBACApF,QAAAU,aAAAC,WAAA,oBACA,IAAA2jB,EAAA3lB,GAAAgN,SAAAhN,GAAAoS,QAAA,GAAA,KAAApS,GAAAoS,QAAA,GAAA,GAAApS,GAAAiN,UAAA,IAAAjN,GAAAkN,SAAA,WACIjF,EAAAsnB,oBAAA,KAEJ9tB,KAAAwtB,eAAAhtB,SAAA,GAAA8K,UAAA4Y,KAEJ6L,aAAA,WACI/vB,KAAAyc,YAAA,GAGJwT,aAAA,WACIjwB,KAAAyc,YAAA,EACA7c,QAAAiE,aAAAC,KAAAC,WAAAuL,WAAA,IAEJ+R,MAAA,WACIzhB,QAAAiE,aAAAC,KAAAC,WAAAuL,WAAA,GACA1P,QAAAiE,aAAAC,KAAAC,WAAAgL,qBAEJ4T,cAAA,WACI3iB,KAAAotB,MAAA3rB,OAAA7B,QAAAC,YAAAC,WAAA2T,UACA7T,QAAAiE,aAAAC,KAAAC,WAAAkL,2BAEJqgB,gBAAA,SAAA9G,EAAAkJ,GACIA,IACI3sB,QAAAC,IAAA0sB,GACA1xB,KAAAstB,cAAA9rB,aAAAjD,GAAAiM,QAAAC,YAAA7K,QAAAqD,UAAA2b,YAAAlU,eAAA,aAAAgnB,EAAAnnB,UACAvK,KAAAstB,cAAA9sB,SAAA,GAAAA,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAAiwB,EAAAvtB,MAEJnE,KAAAstB,cAAA7sB,OAAA+nB,EACAA,IACIxoB,KAAAstB,cAAA9N,OAAA,EACAxf,KAAAstB,cAAApM,OAAA,EACAlhB,KAAAstB,cAAAhiB,UAAA/M,GAAAoS,QAAA,GAAA,GAAAI,OAAAxS,GAAAyS,kBAGRue,mBAAA,SAAA/G,GACIxoB,KAAAmtB,cAAA1sB,OAAA+nB,GAEJgH,uBAAA,WACIxvB,KAAAqtB,aAAA5rB,OAAA7B,QAAAC,YAAAC,WAAAoU,WAAAyF,QAEJqY,eAAA,WACIpyB,QAAAU,aAAAC,WAAA,SACAP,KAAA2c,cACA3c,KAAA4c,aAAAhd,QAAAC,YAAAC,WAAAyT,eACAvT,KAAA2c,aAAA,EACA/c,QAAAiE,aAAAC,KAAAC,WAAAiL,uBAEJijB,eAAA,WACIryB,QAAAU,aAAAC,WAAA,SACAX,QAAAiE,aAAAC,KAAAC,WAAAsL,sBAEJlG,aAAA,WACIvJ,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAmG,OAAA,YAEJgpB,cAAA,WACIxyB,QAAAU,aAAAC,WAAA,SACA,IAAA8xB,GAAAzyB,QAAAU,aAAAiE,UACA3E,QAAAU,aAAAoG,UAAA2rB,GAEAryB,KAAAqwB,sBAEJA,mBAAA,WACIrwB,KAAAgtB,UAAAxsB,SAAA,GAAAC,OAAAb,QAAAU,aAAAiE,UACAvE,KAAAgtB,UAAAxsB,SAAA,GAAAC,QAAAb,QAAAU,aAAAiE,wHC3KRhG,GAAAC,MAAA,CACIg/B,QAAA,CAGIC,WAAA,uHCHRl/B,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACI++B,aAAAn/B,GAAAc,MACAs+B,SAAAp/B,GAAAc,MACAu+B,UAAAr/B,GAAAc,MACAw+B,UAAAt/B,GAAAc,MACAy+B,KAAAv/B,GAAAc,MACA0+B,UAAAx/B,GAAAc,MACA2+B,WAAAz/B,GAAAc,MACA4+B,cAAA1/B,GAAAc,OAIJK,OAAA,WACIM,KAAA09B,aAAAj8B,OAAA7B,QAAAC,YAAA2H,SAAAqL,WACA7S,KAAA29B,SAAAl8B,OAAA7B,QAAAC,YAAA2H,SAAAsL,OACA9S,KAAA49B,UAAAn8B,OAAA7B,QAAAC,YAAA2H,SAAAuL,QACA/S,KAAA69B,UAAAp8B,OAAA,IAAA7B,QAAAC,YAAA2H,SAAAwL,QAAA,IACAhT,KAAA89B,KAAAr8B,OAAA7B,QAAAC,YAAA2H,SAAAyL,GACAjT,KAAA+9B,UAAAt8B,OAAA7B,QAAAC,YAAA2H,SAAA0L,QACAlT,KAAAg+B,WAAAv8B,OAAA7B,QAAAC,YAAA2H,SAAA2L,SACAnT,KAAAi+B,cAAAx8B,OAAAwG,MAAAi2B,aAAAt+B,QAAAC,YAAA2H,SAAA4L,cAEJjK,aAAA,WACIvJ,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAmG,OAAA,iIC5BR,IAAA+0B,EAAA,CACIC,SAAA,IACAC,IAAA,EACAC,UAAA,EACAjU,OAAA,KAEAkU,aAAA,CACI75B,QAAA,IAGJ85B,SAAA,EACAC,UAAA,EAEAC,KAAA,WACI,IAAA,IAAA39B,EAAA,EAAAA,EAAA,EAAAA,IACIf,KAAAu+B,aAAAx9B,GAAA,CACIq0B,OAAAp1B,KAAAq+B,KAAA,EAAAt9B,IAAAf,KAAAo+B,SAAAp+B,KAAAq+B,IAAAr+B,KAAAqqB,OAAArqB,KAAAs+B,UAAuFK,KAAA3+B,KAAAq+B,KAAA,EAAAt9B,IAAAf,KAAAo+B,SAAAp+B,KAAAq+B,IAAAr+B,KAAAqqB,OAAArqB,KAAAs+B,aAKvGH,EAAAO,OAEApxB,EAAAC,QAAA4wB,uHCvBA,IAAAx3B,EAAAC,EAAA,SAEArI,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIigC,UAAAhkB,GAAAC,SACAS,OAAA/c,GAAAc,MACAw/B,OAAAtgC,GAAAc,MACAgc,SAAA,CACI3W,QAAA,IAEJo6B,cAAA,CAAAvgC,GAAAM,MACAkgC,eAAA,CAAAxgC,GAAAM,MACAoI,UAAA,CACIvC,SAAA,EACAwC,SAAA,IAIRxH,OAAA,WACIE,QAAAiE,aAAAgB,GAAAd,WAAA8K,+BAAA7O,KAAAg/B,mBAEJ13B,UAAA,WACI1H,QAAAiE,aAAA0D,eAAAxD,WAAA8K,+BAAA7O,KAAAg/B,mBAKJ72B,KAAA,SAAAmwB,GACIt4B,KAAAqb,SAAAid,EACAt4B,KAAAie,eACAje,KAAAke,eACAle,KAAAi/B,oBAEJhhB,aAAA,WACIje,KAAAsb,OAAA7Z,OAAAzB,KAAAqb,SAAAlX,KACA,IAAA+6B,EAAAt2B,KAAAC,OAAA7I,KAAAqb,SAAA8jB,OAAA,GAAA,GACAn/B,KAAAsb,OAAArX,KAAAm7B,OAAA,IAAA7gC,GAAA8gC,OAAAC,QAAAxxB,UAAAoxB,IAEAl/B,KAAA6+B,OAAAp9B,OAAAzB,KAAAqb,SAAAzM,KAEJsP,aAAA,WAAe,IAAApY,EAAA9F,KACXA,KAAAqb,SAAA8jB,OAAA,IACIn/B,KAAA4+B,UAAA/f,aAAAjf,QAAAqD,UAAA6b,eACA9e,KAAA4+B,UAAA7f,QAAA/e,KAAAqb,SAAA2D,WAEAhf,KAAA4+B,UAAA/f,aAAAjf,QAAAqD,UAAAgc,qBAAAjf,KAAAqb,SAAA8jB,OAAA,IAEJn/B,KAAAqb,SAAA8jB,OAAA,GACIn/B,KAAA4+B,UAAA1f,aAAA,EAAA,SAAA,IAEAlf,KAAA4+B,UAAA1f,aAAA,EAAA,gBAAA,GACAlf,KAAA4+B,UAAAlV,oBAAA,WACI5jB,EAAA84B,UAAA1f,aAAA,EAAA,cAAAjX,MAAAC,UAAA,EAAA,IAAA,OAIZ+2B,iBAAA,WAEIj/B,KAAAqb,SAAA8jB,OAAA,KACIn/B,KAAA8+B,cAAA,GAAAt+B,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAA7B,QAAAC,YAAA2H,SAAAsK,aAAA9R,KAAAqb,SAAA8jB,QAAA,IAAAn/B,KAAAqb,SAAAxE,UACA7W,KAAA04B,aAAA14B,KAAAqb,SAAA8jB,SAGJn/B,KAAAg/B,iBAAAh/B,OAEJg/B,iBAAA,SAAAx2B,GACIA,EAAAs2B,cAAA,GAAAr+B,OAAA+H,EAAAu2B,eAAA,GAAAt+B,OAAA+H,EAAA6S,SAAAkkB,SACA/2B,EAAAs2B,cAAA,GAAAr+B,OAAA+H,EAAAu2B,eAAA,GAAAt+B,OAAA+H,EAAA6S,SAAAtE,QACAvO,EAAAs2B,cAAA,GAAAr+B,OAAA+H,EAAAu2B,eAAA,GAAAt+B,OAAA+H,EAAA6S,SAAAxE,UACArO,EAAAu2B,eAAA,GAAAt+B,QAAA,EACA+H,EAAAs2B,cAAA,GAAAt+B,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAA+G,EAAA6S,SAAAkkB,SACA/2B,EAAAs2B,cAAA,GAAAt+B,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAA7B,QAAAC,YAAA2H,SAAAqK,eAAA,IAAArJ,EAAA6S,SAAAtE,QAEA,IAAAyoB,EAAA5/B,QAAAC,YAAA2H,SAAAoK,kBAAA1R,SACAs/B,EAAA5S,KAAA,SAAAjtB,EAAAktB,GAAe,OAAAltB,EAAAktB,IACf2S,EAAA7oB,QAAA,SAAAqT,GACI,GAAAA,GAAAxhB,EAAA6S,SAAA8jB,OAKI,OAJA32B,EAAAu2B,eAAA,GAAAt+B,QAAA,EACA+H,EAAAu2B,eAAA,GAAAt+B,QAAA,EACA+H,EAAAu2B,eAAA,GAAAt+B,QAAA,OACA+H,EAAAu2B,eAAA,GAAAt+B,QAAA,KAIR+H,EAAAi3B,mBAAAj3B,IAEJi3B,mBAAA,SAAAj3B,GACI5I,QAAAC,YAAA8X,oBAAAnP,EAAA6S,SAAA8jB,QACI32B,EAAAu2B,eAAA,GAAAv+B,SAAA,GAAAC,QAAA,EACA+H,EAAAu2B,eAAA,GAAAv+B,SAAA,GAAAC,QAAA,IAEA+H,EAAAu2B,eAAA,GAAAv+B,SAAA,GAAAC,QAAA,EACA+H,EAAAu2B,eAAA,GAAAv+B,SAAA,GAAAC,QAAA,IAGRi4B,aAAA,SAAAC,GACI,IAAAnwB,EAAAxI,KACAzB,GAAAyH,OAAAC,QAAA,6BAAA0yB,EAAAp6B,GAAAmvB,YAAA,SAAAxnB,EAAAuE,GACIjC,EAAAs2B,cAAA,GAAAt9B,aAAAjD,GAAAiM,QAAAC,YAAAA,KAGRi1B,gBAAA,WACI9/B,QAAAU,aAAAC,WAAA,SACAX,QAAAC,YAAAmX,iBAAAhX,KAAAqb,SAAA8jB,QACAv/B,QAAAiE,aAAAC,KAAAC,WAAA8K,+BAAA7O,OAEJkJ,aAAA,WACItJ,QAAAU,aAAAC,WAAA,SACAX,QAAAC,YAAAiI,WAAA9H,KAAAqb,SAAAkkB,WACI3/B,QAAAqD,UAAAC,UAAA,4BACAtD,QAAAC,YAAAyW,WAAAtW,KAAAqb,SAAA8jB,QACAv/B,QAAAiE,aAAAC,KAAAC,WAAA8K,+BAAA7O,OAEAJ,QAAAqD,UAAAC,UAAA,mCAGRy8B,cAAA,WACI,GAAAr3B,OAAAC,GACI3I,QAAAqD,UAAAC,UAAA,uCAGJ,GAAAlD,KAAAiH,UAAA,CACAjH,KAAAiH,WAAA,EACArH,QAAAU,aAAAC,WAAA,SACA,IAAAiI,EAAAxI,KAEAsI,OAAAG,GACI9B,EAAA+B,SAAA,WAAA,WACIF,EAAAvB,WAAA,EACArH,QAAAC,YAAA8I,oBACA/I,QAAAiE,aAAAC,KAAAC,WAAA8K,+BAAArG,IACH,SAAAM,GACGN,EAAAvB,WAAA,EACA6B,EAAAlJ,QAAAqD,UAAAC,UAAA4F,GAAAlJ,QAAAqD,UAAAC,UAAA,2CAGJsF,EAAAvB,WAAA,EACArH,QAAAC,YAAA8I,oBACA/I,QAAAiE,aAAAC,KAAAC,WAAA8K,+BAAArG,MAKRo3B,cAAA,WACIhgC,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAC,UAAA,2GAGJ28B,gBAAA,WACIjgC,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAqwB,WAAA,4ICvJR/0B,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIigC,UAAAhkB,GAAAC,SACAS,OAAA/c,GAAAc,MACAgc,SAAA,CACI3W,QAAA,IAEJq6B,eAAA,CAAAxgC,GAAAM,OAGJa,OAAA,WACIE,QAAAiE,aAAAgB,GAAAd,WAAA8K,+BAAA7O,KAAAg/B,iBAAA33B,KAAArH,QAEJsH,UAAA,WACI1H,QAAAiE,aAAA0D,eAAAxD,WAAA8K,iCAGJ1G,KAAA,SAAAmwB,GACIt4B,KAAAqb,SAAAid,EACAt4B,KAAAie,eACAje,KAAAke,eACAle,KAAAi/B,oBAEJhhB,aAAA,WACIje,KAAAsb,OAAA7Z,OAAAzB,KAAAqb,SAAAlX,KACA,IAAA+6B,EAAAt2B,KAAAC,OAAA7I,KAAAqb,SAAA8jB,OAAA,GAAA,GACAn/B,KAAAsb,OAAArX,KAAAm7B,OAAA,IAAA7gC,GAAA8gC,OAAAC,QAAAxxB,UAAAoxB,KAEJhhB,aAAA,WAAe,IAAApY,EAAA9F,KACXA,KAAAqb,SAAA8jB,OAAA,IACIn/B,KAAA4+B,UAAA/f,aAAAjf,QAAAqD,UAAA6b,eACA9e,KAAA4+B,UAAA7f,QAAA/e,KAAAqb,SAAA2D,WAEAhf,KAAA4+B,UAAA/f,aAAAjf,QAAAqD,UAAAgc,qBAAAjf,KAAAqb,SAAA8jB,OAAA,IAEJn/B,KAAAqb,SAAA8jB,OAAA,GACIn/B,KAAA4+B,UAAA1f,aAAA,EAAA,SAAA,IAEAlf,KAAA4+B,UAAA1f,aAAA,EAAA,gBAAA,GACAlf,KAAA4+B,UAAAlV,oBAAA,WACI5jB,EAAA84B,UAAA1f,aAAA,EAAA,cAAAjX,MAAAC,UAAA,EAAA,IAAA,OAIZ+2B,iBAAA,WAEIj/B,KAAAqb,SAAA8jB,OAAA,KACIn/B,KAAA++B,eAAA,GAAAv+B,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAA7B,QAAAC,YAAA2H,SAAAsK,aAAA9R,KAAAqb,SAAA8jB,QAAA,IAAAn/B,KAAAqb,SAAAxE,UACA7W,KAAA04B,aAAA14B,KAAAqb,SAAA8jB,SAEJn/B,KAAAg/B,oBAEJA,iBAAA,WAAmB,IAAAx4B,EAAAxG,KACfA,KAAA++B,eAAA,GAAAt+B,OAAAT,KAAAqb,SAAAkkB,SACAv/B,KAAA++B,eAAA,GAAAt+B,OAAAT,KAAAqb,SAAAtE,QACA/W,KAAA++B,eAAA,GAAAt+B,OAAAT,KAAAqb,SAAAxE,UACA7W,KAAA++B,eAAA,GAAAt+B,QAAA,EACAT,KAAA++B,eAAA,GAAAv+B,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAAzB,KAAAqb,SAAAkkB,SACAv/B,KAAA++B,eAAA,GAAAv+B,SAAA,GAAAgB,aAAAjD,GAAAc,OAAAoC,OAAA7B,QAAAC,YAAA2H,SAAAqK,eAAA,IAAA7R,KAAAqb,SAAAtE,QAEA,IAAAyoB,EAAA5/B,QAAAC,YAAA2H,SAAAoK,kBAAA1R,SACAs/B,EAAA5S,KAAA,SAAAjtB,EAAAktB,GAAe,OAAAltB,EAAAktB,IACf2S,EAAA7oB,QAAA,SAAAqT,GACI,GAAAA,GAAAxjB,EAAA6U,SAAA8jB,OAKI,OAJA34B,EAAAu4B,eAAA,GAAAt+B,QAAA,EACA+F,EAAAu4B,eAAA,GAAAt+B,QAAA,EACA+F,EAAAu4B,eAAA,GAAAt+B,QAAA,OACA+F,EAAAu4B,eAAA,GAAAt+B,QAAA,KAIRT,KAAA8/B,qBAEJA,kBAAA,WACIlgC,QAAAC,YAAA8X,oBAAA3X,KAAAqb,SAAA8jB,QACIn/B,KAAA++B,eAAA,GAAAv+B,SAAA,GAAAC,QAAA,EACAT,KAAA++B,eAAA,GAAAv+B,SAAA,GAAAC,QAAA,IAEAT,KAAA++B,eAAA,GAAAv+B,SAAA,GAAAC,QAAA,EACAT,KAAA++B,eAAA,GAAAv+B,SAAA,GAAAC,QAAA,IAGRi4B,aAAA,SAAAC,GACI,IAAAnwB,EAAAxI,KACAzB,GAAAyH,OAAAC,QAAA,6BAAA0yB,EAAAp6B,GAAAmvB,YAAA,SAAAxnB,EAAAuE,GACIjC,EAAAu2B,eAAA,GAAAv+B,SAAA,GAAAgB,aAAAjD,GAAAiM,QAAAC,YAAAA,KAGRs1B,cAAA,WAAgB,IAAAjpB,EAAA9W,KACZJ,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAA8E,UAAA,gBAAA,SAAA9D,GACIA,EAAAzC,aAAA,iBAAA2G,KAAA2O,EAAAuE,YACH,IAELqkB,gBAAA,WACI9/B,QAAAU,aAAAC,WAAA,SACAX,QAAAC,YAAAmX,iBAAAhX,KAAAqb,SAAA8jB,QACAv/B,QAAAiE,aAAAC,KAAAC,WAAA8K,0ICpGR,IAAAlI,EAAAC,EAAA,SAEArI,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIqhC,WAAAzhC,GAAA0hC,WACAC,WAAA3hC,GAAAid,OACA3U,OAAAtI,GAAAc,MACA4H,UAAA,CACIvC,SAAA,EACAwC,SAAA,IAKRxH,OAAA,WACIE,QAAAiE,aAAAgB,GAAAd,WAAAoD,uBAAAnH,KAAAi2B,eAAA5uB,KAAArH,OACAA,KAAAmgC,WACAngC,KAAAi2B,kBAGJ3uB,UAAA,WACI1H,QAAAiE,aAAA0D,eAAAxD,WAAAoD,yBAEJg5B,SAAA,WAAW,IAAAr6B,EAAA9F,KACPA,KAAAggC,WAAAI,QAAAC,oBACA,IAAAt/B,EAAA,EACAnB,QAAAC,YAAAsV,SAAAC,UAAAuB,QAAA,SAAA0E,GACIvV,EAAA0d,aAAA,WACI,IAAAzV,EAAAxP,GAAAsjB,YAAA/b,EAAAo6B,YACAp6B,EAAAk6B,WAAAI,QAAA9V,SAAAvc,GACAA,EAAAvM,aAAA,YAAA2G,KAAAkT,IACHta,GAAA,QAGTk1B,eAAA,WACIj2B,KAAA6G,OAAApF,OAAA7B,QAAAC,YAAA2H,SAAAC,SAEJyB,aAAA,WACI,GAAAZ,OAAAC,GACI3I,QAAAqD,UAAAC,UAAA,uCAGJ,GAAAlD,KAAAiH,UAAA,CACAjH,KAAAiH,WAAA,EACArH,QAAAU,aAAAC,WAAA,SACA,IAAAiI,EAAAxI,KAEAsI,OAAAG,GACI9B,EAAA+B,SAAA,WAAA,WACIF,EAAAvB,WAAA,EACArH,QAAAqD,UAAAC,UAAA,+BACAtD,QAAAC,YAAAmD,QAAA,KACAwF,EAAAytB,kBACH,SAAAntB,GACGN,EAAAvB,WAAA,EACA6B,EAAAlJ,QAAAqD,UAAAC,UAAA4F,GAAAlJ,QAAAqD,UAAAC,UAAA,2CAGJsF,EAAAvB,WAAA,EACArH,QAAAqD,UAAAC,UAAA,kDACAtD,QAAAC,YAAAmD,QAAA,KACAwF,EAAAytB,oBAIR9sB,aAAA,WACIvJ,QAAAU,aAAAC,WAAA,SACAX,QAAAqD,UAAAmG,OAAA,sICpER7K,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,GAKAe,OAAA,WACIM,KAAAiE,KAAAqH,UAAA/M,GAAAgN,SAAAhN,GAAAiN,UAAA,GAAAjN,GAAAkN,SAAA,WACI7L,QAAAqD,UAAAmG,OAAA,2HCXZ7K,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACI2hC,OAAA/hC,GAAAwlB,SACAwc,UAAA,KAEA7uB,WAAAnT,GAAAwlB,SACAU,QAAAlmB,GAAAc,MACAmhC,YAAAjiC,GAAAM,MAGJu2B,MAAA,WACIp1B,KAAAiE,KAAAw8B,SAAA,EAAA,IAGJ/vB,KAAA,SAAAgwB,EAAAC,EAAAtC,GACIr+B,KAAAugC,UAAAI,EAEA3gC,KAAAiE,KAAA8zB,iBACAsG,GACIr+B,KAAA0R,WAAAjQ,OAAAi/B,EACA1gC,KAAAykB,QAAAhjB,OAAA48B,EACAr+B,KAAAwgC,YAAA//B,QAAA,GAEAT,KAAAsgC,OAAA7+B,OAAAi/B,EAEJ1gC,KAAAiE,KAAAqH,UAAA/M,GAAAgN,SAAAhN,GAAAoS,QAAA,GAAA,GAAAI,OAAAxS,GAAAy5B,cAAA,IAAAz5B,GAAAiN,UAAA,GAAAjN,GAAAkN,SAAA,WAKYzL,KAAA4gC,OACHv5B,KAAArH,UAMb4gC,IAAA,WACI5gC,KAAAiE,KAAAqH,UAAA/M,GAAAgN,SAAAhN,GAAA4lB,MAAA5lB,GAAA+lB,QAAA,GAAA/lB,GAAAgrB,OAAA,EAAAhrB,GAAAqL,GAAA,EAAA5J,KAAAiE,KAAAqkB,UAAA/pB,GAAAkN,SAAA,WAOYzL,KAAA6gC,UACHx5B,KAAArH,UAMb6gC,OAAA,WACI7gC,KAAAiE,KAAAxD,QAAA,EACAT,KAAAiE,KAAA68B,mBACA9gC,KAAAugC,WAAAvgC,KAAAugC,oHCvDRj4B,OAAAL,MAAA,CACI84B,cAAA,SAAA98B,EAAA+8B,EAAAC,EAAAC,EAAAt+B,GAEI,IAAAu+B,EAAA,IAAA5iC,GAAAG,UAAA0iC,aACAD,EAAAH,OAAAA,EACAG,EAAAF,UAAAA,EACAE,EAAAD,QAAAA,EACAt+B,IACIu+B,EAAAv+B,gBAAAA,GAGJqB,EAAAzC,aAAAjD,GAAAsS,QAAAwwB,YAAA,GACAp9B,EAAAzC,aAAAjD,GAAAsS,QAAAwwB,YAAA5qB,KAAA0qB,IAIJj5B,UAAA,SAAAo5B,EAAAC,EAAAC,GACI,OAAAA,EACI54B,KAAA64B,UAAAF,EAAAD,EAAA,GAAAA,EAEJ14B,KAAAC,MAAAD,KAAA64B,UAAAF,EAAAD,EAAA,GAAAA,IAGJ/iB,iBAAA,SAAA5a,GACI,IAAA06B,EAAA16B,EAAAgW,OACA,GAAA0kB,EAAA,EAAA,CACI,IAAAt9B,EAAA6H,KAAAC,MAAAD,KAAA64B,SAAApD,GAEA,OADAt9B,GAAAs9B,IAAAt9B,EAAAs9B,EAAA,GACA16B,EAAA5C,GACH,OAAA,MAKLuwB,+BAAA,SAAA3tB,EAAA+9B,GACI,IAAAC,EAAAh+B,EAAAgW,OACA,GAAA+nB,GAAAC,EAAA,CAKI,IAJA,IAAAC,EAAA,CACIrQ,QAAA5tB,EACAk+B,SAAA,IAEJ9gC,EAAA,EAAAA,EAAA4C,EAAAgW,OAAA5Y,IACI6gC,EAAAC,SAAAprB,KAAA1V,GAEJ,OAAA6gC,EACH,GAAAF,GAAA,EACG,OAAA,KAGAE,EAAA,CACIrQ,QAAA,GACAsQ,SAAA,IAFJ,IAIAC,EAAA,GACAC,EAAA,KACA,IAAAhhC,EAAA,EAAAA,EAAA2gC,EAAA3gC,IAAA,CACI,GACIghC,EAAAn5B,KAAAC,MAAAD,KAAA64B,SAAAE,SACHG,EAAAtrB,QAAAurB,IAAA,GACDD,EAAArrB,KAAAsrB,GACAH,EAAArQ,QAAA9a,KAAA9S,EAAAo+B,IACAH,EAAAC,SAAAprB,KAAAsrB,GAEJ,OAAAH,GAGRlgB,OAAA,SAAArL,GACI,IACA2rB,EAAAhiC,KAAAsxB,+BADA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACAjb,GACA,OAAA,MAAA2rB,IAGI,GAAAA,EAAAzQ,QAAA/a,QAAA,IAORxN,SAAA,SAAAi5B,EAAAC,GAEI,IADA,IAAAC,EAAAF,EAAAtoB,OACA5Y,EAAA,EAAAA,EAAAohC,EAAAphC,IACI,GAAAkhC,EAAAlhC,IAAAmhC,EACI,OAAAp/B,SAAA/B,GAGR,OAAA,GAEJ+Y,YAAA,SAAAmoB,EAAAC,GAEI,IADA,IAAAvoB,EAAAsoB,EAAAtoB,OACA5Y,EAAA,EAAAA,EAAA4Y,EAAA5Y,IACI,GAAAkhC,EAAAlhC,IAAAmhC,EACI,OAAA,GAAAnhC,GACIkhC,EAAAG,QACAH,GACHlhC,GAAA4Y,EAAA,GAEGsoB,EAAAI,MACAJ,IAGAA,EAAAK,OAAAvhC,EAAA,GACAkhC,IAahB7Y,cAAA,SAAAmZ,EAAAC,EAAAC,GAII,IAHA,IAAAx3B,EAAAhD,MAAAC,UAAAU,KAAAC,MAAA05B,EAAAt3B,GAAAu3B,EAAAC,IAAA75B,KAAAC,MAAA05B,EAAAt3B,GAAAu3B,EAAAC,KACAv3B,EAAAjD,MAAAC,UAAAU,KAAAC,MAAA05B,EAAAr3B,GAAAs3B,EAAAC,IAAA75B,KAAAC,MAAA05B,EAAAr3B,GAAAs3B,EAAAC,MAEAziC,KAAA0iC,WAAAz3B,EAAAs3B,EAAAt3B,EAAAC,EAAAq3B,EAAAr3B,EAAAs3B,EAAAC,IACIx3B,EAAAhD,MAAAC,UAAAU,KAAAC,MAAA05B,EAAAt3B,GAAAu3B,EAAAC,IAAA75B,KAAAC,MAAA05B,EAAAt3B,GAAAu3B,EAAAC,KACAv3B,EAAAjD,MAAAC,UAAAU,KAAAC,MAAA05B,EAAAr3B,GAAAs3B,EAAAC,IAAA75B,KAAAC,MAAA05B,EAAAr3B,GAAAs3B,EAAAC,KAIJ,OADAlkC,GAAAqL,GAAAqB,EAAAC,IAOJw3B,WAAA,SAAA7Z,EAAA8Z,EAAAviB,GACI,OAAAyI,EAAAA,EAAA8Z,EAAAA,GAAAviB,EAAAA,GAaJsI,YAAA,SAAAka,EAAAC,EAAAC,EAAAC,GAGI,OADAja,WAAAlgB,KAAAmgB,MAAA6Z,EAAA33B,EAAA63B,EAAA73B,IAAA23B,EAAA33B,EAAA63B,EAAA73B,IAAA23B,EAAA13B,EAAA43B,EAAA53B,IAAA03B,EAAA13B,EAAA43B,EAAA53B,KACA63B,GAAAF,GAMJ1P,eAAA,SAAA6N,EAAAgC,EAAAC,GACIjC,EAAA11B,UAAA/M,GAAAsN,cAAAtN,GAAAgN,SAAAhN,GAAAoS,QAAA,GAAA,KAAAI,OAAAxS,GAAA2kC,OAAA,IAAA3kC,GAAAoS,QAAA,GAAA,IAAAI,OAAAxS,GAAA2kC,OAAA,IAAA3kC,GAAAoS,QAAA,GAAA,KAAAI,OAAAxS,GAAA2kC,OAAA,IAAA3kC,GAAAoS,QAAA,GAAA,IAAAI,OAAAxS,GAAA2kC,OAAA,OAMAF,GACIC,EAAA33B,UAAA/M,GAAAsN,cAAAtN,GAAAgN,SAAAhN,GAAA6lB,OAAA,IAAArT,OAAAxS,GAAA2kC,OAAA,IAAA3kC,GAAA+lB,QAAA,IAAAvT,OAAAxS,GAAA2kC,OAAA,IAAA3kC,GAAA6lB,OAAA,IAAArT,OAAAxS,GAAA2kC,OAAA,IAAA3kC,GAAA+lB,QAAA,IAAAvT,OAAAxS,GAAA2kC,OAAA,QAQRC,MAAA,SAAAnC,GACIA,EAAA11B,UAAA/M,GAAAsN,cAAAtN,GAAAgN,SAAAhN,GAAA6kC,SAAA,GAAA,GAAAryB,OAAAxS,GAAA2kC,OAAA,IAAA3kC,GAAA6kC,SAAA,IAAA,GAAAryB,OAAAxS,GAAA2kC,OAAA,IAAA3kC,GAAA6kC,SAAA,GAAA,GAAAryB,OAAAxS,GAAA2kC,OAAA,IAAA3kC,GAAA6kC,SAAA,GAAA,GAAAryB,OAAAxS,GAAA2kC,OAAA,IAAA3kC,GAAAiN,UAAA,QAgBJ63B,aAAA,SAAArC,GAGI,IADA,IAAAsC,EAAAtC,EAAAuC,cACAxiC,EAAA,EAAAA,EAAAuiC,EAAAviC,IACIigC,EAAAxgC,SAAAO,GAAAuK,UAAA/M,GAAAgN,SAAAhN,GAAAiN,UAAA,GAAAzK,GAAAxC,GAAAoS,QAAA,GAAA,KAAAI,OAAAxS,GAAAyS,eAAAzS,GAAAoS,QAAA,GAAA,GAAApS,GAAAiN,UAAA,IAAA83B,EAAA,EAAAviC,GAAA,IAAA8K,kBAIR23B,aAAA,WACI,IAAApN,EAAA,IAAAC,KAEA,MAAA,CACIoN,MAFJrN,EAAA,IAAAC,KAAAD,EAAAE,YAEIoN,cACAC,MAAAvN,EAAAwN,WAAA,EACAC,IAAAzN,EAAA0N,YAIRnrB,cAAA,SAAAorB,GACI,GAAAA,GAAA,EACI,MAAA,WAEJA,EAAAn7B,KAAAC,MAAAk7B,GACA,IAAAnrB,EAAAhQ,KAAAC,MAAAk7B,EAAA,MACAA,GAAA,KAAAnrB,EACA,IAAAC,EAAAjQ,KAAAC,MAAAk7B,EAAA,IAqBA,MAAA,CACInrB,KAAAA,EACAC,OAAAA,EACAkrB,EAvBJA,GAAA,GAAAlrB,IA6BJqlB,aAAA,SAAA6F,GACI,GAAAA,GAAA,EACI,MAAA,QAEJA,EAAAn7B,KAAAC,MAAAk7B,GAEAA,GAAA,KADAn7B,KAAAC,MAAAk7B,EAAA,MAEA,IAAAlrB,EAAAjQ,KAAAC,MAAAk7B,EAAA,IAEAC,EAAA,GAkBA,OAVIA,GADJnrB,EAAA,EACIA,EAAA,GAAA,IAAAA,EAAAA,EAEA,MAEJmrB,GAAA,OAbAD,GAAA,GAAAlrB,GAcA,EACIkrB,EAAA,GAAA,IAAAA,EAAAA,EAEA,OAcRE,sBAAA,SAAAC,EAAA7F,EAAA8F,EAAAC,GACI,OAAAF,EAAA,IAAAlkC,KAAAqkC,YAAAhG,EAAA8F,EAAAC,GAAApkC,KAAAqkC,YAAAhG,EAAA8F,EAAAC,IAIJC,YAAA,SAAAhG,EAAA8F,EAAAC,GACI,IAAAE,EAAA17B,KAAAC,MAAAw1B,EAAA8F,GACAI,EAAA37B,KAAAC,MAAAw1B,EAAA8F,EAAAA,EAAA,IACA,OAAA,IAAAI,EACID,EAAAF,EAEAE,EAAA,IAAAC,EAAAH,y6BCtSZ,IAAAI,EAAA59B,EAAA,cACA69B,EAAA79B,EAAA,YACA0B,OAAAo8B,OAAAp8B,OAAAo8B,QAAA99B,EAAA,iBAEArI,GAAAC,MAAA,CACIC,QAAAF,GAAAG,UAEAC,WAAA,CACIimB,SAAArmB,GAAAM,KACA48B,OAAAl9B,GAAAM,KACA8lC,UAAApmC,GAAAM,KACA+lC,UAAArmC,GAAAM,KACAgmC,YAAAtmC,GAAAid,OACAspB,YAAAvmC,GAAAM,KACAkmC,gBAAAxmC,GAAAW,YACA8lC,SAAAzmC,GAAAM,KACAomC,SAAA,CACIvgC,QAAA,IAEJwgC,OAAA,CACIxgC,QAAA,IAGJsmB,UAAAzsB,GAAA4mC,OACAC,aAAA7mC,GAAA4mC,OACArmB,eAAAlE,GAAA4a,aACAvW,qBAAA,CAAArE,GAAA4a,cACAptB,iBAAA,CAAAwS,GAAA4a,cACA5W,YAAArgB,GAAA6L,YACA+Y,iBAAA,CAAAvI,GAAA4a,eAGJ91B,OAAA,WACI,GAAA,OAAAE,QAAAqD,UACI,OAAAjD,KAAAiE,KAAAC,UAEJtE,QAAAqD,UAAAjD,KACAzB,GAAAqG,KAAAygC,mBAAArlC,KAAAiE,MAEA1F,GAAA+mC,SAAAC,sBAAAz6B,SAAA,EACAvM,GAAA+mC,SAAAC,sBAAAC,wBAAA,EACAjnC,GAAA+mC,SAAAC,sBAAAE,kBAAA,EACA,IAAAC,EAAAnnC,GAAA+mC,SAAAK,oBACAD,EAAA56B,SAAA,EACA46B,EAAAE,eAAArnC,GAAAsnC,eAAAC,SAAAC,UAAAxnC,GAAAsnC,eAAAC,SAAAE,UAAAznC,GAAAsnC,eAAAC,SAAAG,kBAAA1nC,GAAAsnC,eAAAC,SAAAI,WAAA3nC,GAAAsnC,eAAAC,SAAAK,WAKA,IAAAC,EAAA7nC,GAAA8nC,KAAAC,eACAC,EAAAhoC,GAAAqG,KAAA2hC,OACAA,EAAAle,MAAA+d,EAAA/d,MAAA/f,OAAAk+B,iBACAD,EAAAje,OAAA8d,EAAA9d,OAAAhgB,OAAAk+B,iBAEAxmC,KAAAymC,uBAAA,GACAzmC,KAAA+kC,gBAAA1hC,SAAA,EAEArD,KAAA0mC,gBAYJA,aAAA,WACI3hC,QAAAC,IAAA,4BACAhF,KAAA+kC,gBAAA9gC,KAAAxD,QAAA,EACAT,KAAA2mC,QAAA,SAAAC,EAAAC,GACI,IAAAC,EAAAF,EAAAC,EACAC,IAAAC,MAAAD,KACI9mC,KAAA+kC,gBAAA1hC,SAAAyjC,IAEPz/B,KAAArH,MAAA,WACGA,KAAA+kC,gBAAA9gC,KAAAxD,QAAA,EACAT,KAAAglC,SAAAvkC,QAAA,EAEA,IAAA+G,EAAAjJ,GAAA0C,IAAAC,aAAAoE,QAAA,uBACA,MAAAkC,GAAAjC,MAAAiC,GAAA,IAAAA,IAEI5H,QAAAC,YAAA2H,SAAAvF,KAAA0T,MAAAnO,IAGJxH,KAAAoJ,OAAA,YACH/B,KAAArH,QAQL2mC,QAAA,SAAAK,EAAAC,GACI,IAAA36B,EAAA,GACA46B,EAAA,EAEA,IAAA,IAAA/iC,KAAAqgC,EACIl4B,EAAAmK,KAAA+tB,EAAArgC,IACA+iC,IAEJ,IAAAC,EAAAD,EACAE,EAAA,EAEA,IAAA,IAAAC,KAAA5C,EACIn4B,EAAAmK,KAAAguB,EAAA4C,IACAD,IAEJ,IAAAE,EAAAF,EACA7oC,GAAAyH,OAAAuhC,aAAAj7B,EAAA,SAAAs6B,EAAAC,GAEIG,EAAAJ,EAAAC,IACH,SAAA3gC,EAAAshC,GAGG,IAFA,IAAAC,EAAAC,OAAAC,KAAAnD,GAEAzjC,EAAA,EAAAA,EAAAomC,EAAApmC,IACIf,KAAAilC,SAAAwC,EAAA1mC,IAAAymC,EAAAzmC,GAIJ,IAFA,IAAA6mC,EAAAF,OAAAC,KAAAlD,GAEAoD,EAAA,EAAAA,EAAAP,EAAAO,IACI7nC,KAAAklC,OAAA0C,EAAAC,IAAAL,EAAAL,EAAAU,GAAAC,KAAAF,EAAAC,IACAjoC,QAAAC,YAAAsV,SAAAyyB,EAAAC,IAAA7nC,KAAAklC,OAAA0C,EAAAC,IAGJZ,KAYH5/B,KAAArH,QAGL0+B,KAAA,SAAAv6B,EAAA4jC,GACIxpC,GAAAyH,OAAAC,QAAAu+B,EAAArgC,GAAA,SAAA+B,EAAA8hC,GACI9hC,EACI3H,GAAAwO,MAAA7G,EAAA8G,SAAA9G,IAGJlG,KAAAilC,SAAA9gC,GAAA6jC,EACAD,GAAAA,EAAA5jC,KACHkD,KAAArH,QAGL2jB,eAAA,SAAAxf,EAAA4jC,EAAAE,GACI,GAAAjoC,KAAAilC,SAAA9gC,GAAA,CAOA,IAAAF,EAAA1F,GAAAsjB,YAAA7hB,KAAAilC,SAAA9gC,IACA8jC,GAAAA,EAAA3d,SAAArmB,GACA8jC,GAAAA,EAAA9jC,QARIjE,KAAA0+B,KAAAv6B,EAAA,WACInE,KAAA2jB,eAAAxf,EAAA4jC,IACH1gC,KAAArH,QASTswB,SAAA,SAAAnsB,EAAA4jC,GAQI,GANA/nC,KAAAkoC,cAAA/jC,GACIY,QAAAC,IAAA,0BAKJhF,KAAAilC,SAAA9gC,GAAA,CAOA,IAAAF,EAAA1F,GAAAsjB,YAAA7hB,KAAAilC,SAAA9gC,IACAnE,KAAA4kB,SAAA0F,SAAArmB,GACAjE,KAAAkoC,aAAA/jC,EAEA4jC,GAAAA,EAAA9jC,QAVIjE,KAAA0+B,KAAAv6B,EAAA,WACInE,KAAAswB,SAAAnsB,EAAA4jC,IACH1gC,KAAArH,QAWToJ,OAAA,SAAAjF,EAAA4jC,GAGI,GAFAhjC,QAAAC,IAAA,UAEAhF,KAAAmoC,UAAAhkC,EAMA,GAAAnE,KAAAilC,SAAA9gC,GAAA,CASAnE,KAAAooC,aAOApoC,KAAAy7B,OAAAj7B,SAAAmW,QAAA,SAAA0xB,GACIA,EAAA/8B,UAAA/M,GAAAgN,SAAAhN,GAAA+lB,QAAA,IAAA/lB,GAAAkN,SAAA,WACI48B,EAAAnkC,gBAGRlE,KAAAsoC,cACA,IAAArkC,EAAA1F,GAAAsjB,YAAA7hB,KAAAilC,SAAA9gC,IACAF,EAAAoa,QAAA,EACAre,KAAAy7B,OAAAnR,SAAArmB,GACAA,EAAAqH,UAAA/M,GAAA6lB,OAAA,KACApkB,KAAAmoC,SAAAhkC,EACA4jC,GAAAA,EAAA9jC,QA1BIjE,KAAA0+B,KAAAv6B,EAAA,WACInE,KAAAoJ,OAAAjF,EAAA4jC,IACH1gC,KAAArH,YARD+E,QAAAC,IAAA,yBAmCRylB,MAAA,SAAAtmB,GACI,OAAAnE,KAAAy7B,OAAAjX,eAAArgB,IAGJokC,MAAA,WACI,IAAAC,EAAAxoC,KAAAy7B,OAAAj7B,SACAgoC,EAAA7uB,OAAA,GACI6uB,EAAAA,EAAA7uB,OAAA,GAAAzV,WAIRyd,aAAA,SAAA8mB,GACI,IAAAC,EAAA1oC,KAAAgrB,UAAA/mB,KAAAokB,MAAA,GACAsgB,EAAA3oC,KAAAgrB,UAAA/mB,KAAAqkB,OAAA,GACA6I,EAAAnxB,KAAAgrB,UAAA4d,sBAAAH,EAAAtmB,sBAAA5jB,GAAAqL,GAAA,EAAA,KACA,QAAAunB,EAAAlmB,EAAA,GAAAkmB,EAAAlmB,EAAAy9B,GAAAvX,EAAAjmB,EAAA,GAAAimB,EAAAjmB,EAAAy9B,IAiCJ5gC,UAAA,SAAA5D,EAAA4jC,EAAAc,GAOI,QAP8B,IAAAA,IAAdA,GAAA,GAChB7oC,KAAA8oC,eAAA3kC,GACIY,QAAAC,IAAA,2BAKJhF,KAAAilC,SAAA9gC,GAAA,CAMA0kC,GACI7oC,KAAAsoC,cAGJ,IAAArkC,EAAA1F,GAAAsjB,YAAA7hB,KAAAilC,SAAA9gC,IAEAF,EAAAzD,SAAA,GAAAgf,OAAA,EACAvb,EAAAzD,SAAA,GAAA0gB,OAAA,EACAlhB,KAAA2kC,UAAAra,SAAArmB,GACAA,EAAAzD,SAAA,GAAA8K,UAAA/M,GAAAoS,QAAA,GAAA,GAAAI,OAAAxS,GAAAy5B,cAAA,KACAh4B,KAAA8oC,cAAA3kC,EAEA4jC,GAAAA,EAAA9jC,QAjBIjE,KAAA0+B,KAAAv6B,EAAA,WACInE,KAAA+H,UAAA5D,EAAA4jC,IACH1gC,KAAArH,QAkBT4xB,SAAA,SAAAztB,GACI,OAAAnE,KAAA2kC,UAAAngB,eAAArgB,IAGJ4kC,SAAA,WACI,IAAAC,EAAAhpC,KAAA2kC,UAAAnkC,SACAwoC,EAAArvB,OAAA,GACIqvB,EAAAA,EAAArvB,OAAA,GAAAzV,WAIRovB,WAAA,SAAAnvB,GACI,IADa,IACb8kC,EADanjC,EAAA9F,KAAAuG,EAAA,WAAA,IAAAtC,EAAAglC,EAAAC,MAET,GAAAjlC,EAAAE,OAAAA,EAMI,OALAF,EAAAqH,UAAA/M,GAAAgN,SAAAhN,GAAA+lB,QAAA,IAAA/lB,GAAAkN,SAAA,WACI3F,EAAAgjC,cAAA,GACA7kC,EAAAxD,QAAA,EACAwD,EAAAC,cAEJ,SAPRilC,EAAAC,EAAAppC,KAAA2kC,UAAAnkC,YAAAyoC,EAAAE,KAAAE,MAA0C,UAAA9iC,QAY9C+hC,YAAA,WACIvjC,QAAAC,IAAA,eACA,IAFU,IAEVskC,EAFUC,EAAA,WAAA,IAAAtlC,EAAAqlC,EAAAJ,MAGNjlC,EAAAqH,UAAA/M,GAAAgN,SAAAhN,GAAA+lB,QAAA,IAAA/lB,GAAAkN,SAAA,WACIxH,EAAAC,eAFRslC,EAAAJ,EAAAppC,KAAA2kC,UAAAnkC,YAAA8oC,EAAAE,KAAAH,MAA0CE,IAK1CvpC,KAAA8oC,cAAA,IAIJvkB,QAAA,SAAApgB,GACI,OAAAnE,KAAA4kB,SAAAJ,eAAArgB,IAGJikC,WAAA,WACIpoC,KAAA4kB,SAAA2G,qBACAvrB,KAAAkoC,aAAA,IAGJhlC,UAAA,SAAA6gC,EAAApD,EAAAtC,GACI,GAAAr+B,KAAA6kC,YAAA,CACA,IAAA4E,EAAAlrC,GAAAsjB,YAAA7hB,KAAA6kC,aACA,GAAA7kC,KAAA4kC,UAAArB,cAAA,EACI,IAAA,IAAAxiC,EAAAf,KAAA4kC,UAAArB,cAAA,EAAAxiC,GAAA,EAAAA,IAAA,CACI,IAAA2oC,EAAAnrC,GAAAgrB,OAAA,GAAAhrB,GAAAqL,GAAA,EAAA6/B,EAAAnhB,SACAtoB,KAAA4kC,UAAApkC,SAAAO,GAAAuK,UAAAo+B,GAGR1pC,KAAA4kC,UAAAta,SAAAmf,GACAA,EAAAjoC,aAAA,WAAAkP,KAAAqzB,EAAApD,EAAAtC,KAGJoI,sBAAA,SAAAkD,GAEQ3pC,KAAA8kC,YAAArkC,SADJkpC,GAQJ5+B,OAAA,SAAAC,GAEI,OADApL,QAAAC,YAAAC,WAAA8U,YAAA5J,EACApL,QAAAC,YAAAC,WAAAoV,aACI,KAAA/D,YAAAE,MACIzR,QAAAC,YAAAC,WAAAmV,YAAA,EACA,MACJ,KAAA9D,YAAAG,OACI1R,QAAAC,YAAAC,WAAAmV,aAAAjK,EACA,MACJ,KAAAmG,YAAAI,yLC3XZ,IAAAq4B,EAAA,GAEAC,EAAA,CACCC,UAAA,sBAGDF,EAAAG,SAAA,KACAH,EAAAI,YAAA,KACAJ,EAAAK,QAAA,KACAL,EAAAjT,SAAA,KACAiT,EAAAM,kBAAA,EACA,IAAAC,EAAA,CACCzhC,SAAA,sBAGD0hC,EAAAC,yEACAC,EAAA,CAAA,CACGC,IAAA,EAAQC,IAAA,0GAAV,CACED,IAAA,EAAQC,IAAA,0GAAV,CACED,IAAA,EAAQC,IAAA,oDAAV,CACED,IAAA,EAAQC,IAAA,oFAEXZ,EAAAa,gBAAA,SAAAC,EAAAC,EAAAC,GACC,IAAAC,EAAA,uIACAnT,EAAA,KACAoT,EAAA,KACA7gB,EAAAhiB,MAAAsW,iBAAA+rB,GAKA,OAJArgB,IACC6gB,EAAA7gB,EAAAugB,IACA9S,EAAA,QAAAgT,EAAA,WAAAG,EAAAN,KAED,CACCM,MAAAA,EACAC,KAAAA,EACApT,MAAAA,EACAqT,SAAAX,EACAxS,QAAA,WACC7yB,QAAAC,IAAA,4BACA2lC,GAAAA,KAED7S,KAAA,SAAAkT,GACCjmC,QAAAC,IAAA,4BACAD,QAAAC,IAAAgmC,GACAJ,GAAAA,OAIHhB,EAAAzS,kBAAA,SAAAwT,EAAAC,GACCtiC,OAAAC,GACCA,GAAA0iC,gBAAArB,EAAAa,gBAAA,YAAAE,EAAAC,IAEAD,GAAAA,KAGFf,EAAA9P,YAAA,SAAAjtB,EAAA89B,EAAAC,GACC,GAAAtiC,OAAAG,GAAA,CAEC,IAAAoiC,EAAA,uIACAnT,EAAA,KACAoT,EAAA,KACA7gB,EAAAhiB,MAAAsW,iBAAA+rB,GACArgB,IACC6gB,EAAA7gB,EAAAugB,IACA9S,EAAA,qBAAAmT,EAAAN,KAED9hC,GAAAwiC,gBAAA,CACCC,QAAA,QACAL,MAAAA,EACAC,KAAAA,EACAC,SAAAX,EACAe,WAAA,GACAzT,MAAAA,EACA0T,MAAA,CACC1U,UAAA7pB,EACAw+B,YAAA,CAAA,uCAAA,sBACAC,iBAAA,GAED1T,QAAA,WACC7yB,QAAAC,IAAA,wCACA2lC,GAAAA,KAED7S,KAAA,SAAAkT,GACCjmC,QAAAC,IAAA,wCACAD,QAAAC,IAAAgmC,GACAJ,GAAAA,SAOJhB,EAAAE,UAAA,SAAAyB,EAAAC,GACC,GAAA,MAAAljC,OAAAG,GAAA,CAGA,IAAAgjC,EAAAhjC,GAAA4uB,oBACAqU,EAAAD,EAAAE,YACAC,EAAAH,EAAAI,aACAjC,EAAAG,UACCH,EAAAG,SAAA7lC,UACAa,QAAAC,IAAA,2BAEAD,QAAAC,IAAA,8BAED,IAAA8mC,EAAArjC,GAAAsjC,eAAA,CACCC,SAAAnC,EAAA0B,GACAU,MAAAT,IAED5B,EAAAG,SAAA+B,EACAA,EAAApsC,OAAA,WACCqF,QAAAC,IAAA,qCACA4kC,EAAAG,SAAAr5B,OAAAw7B,KAAA,WACCnnC,QAAAC,IAAA,4CAKF8mC,EAAAK,SAAA,SAAAthC,GAGC,GAAAA,EAAAwd,OACA,GAAAxd,EAAAyd,QAGA,KAAAzd,EAAAwd,QACCyjB,EAAAG,MAAAG,IAAAR,EAAA/gC,EAAAyd,OACAwjB,EAAAG,MAAAI,MAAAX,EAAA7gC,EAAAwd,OAAA,OAsBHuhB,EAAA0C,aAAA,WACC,MAAAhkC,OAAAG,IAGAmhC,EAAAG,WACCH,EAAAG,SAAAwC,OACAxnC,QAAAC,IAAA,kBAIF4kC,EAAA4C,eAAA,SAAAC,GACC,GAAAnkC,OAAAG,GAAA,CACC,IAAAgjC,EAAAhjC,GAAA4uB,oBACAoU,EAAAE,YACAF,EAAAI,aACAjC,EAAAI,YAAAvhC,GAAAikC,sBAAA,CACCp8B,KAAA,QACAq8B,MAAAF,EACAR,MAAA,CACCI,KAAA,GACAD,IAAA,GACA/jB,MAAA,GACAC,OAAA,GACAskB,WAAA,GACAC,gBAAA,GACAC,UAAA,GACAC,UAAA,SACAC,SAAA,GACAC,aAAA,EACAC,YAAA,EACAC,YAAA,IAED3V,iBAAA,CAAA,CAEEC,MAAA,WACAC,MAAA,kBACAC,UAAA,KAIFyV,qBAAA,SAAAtgC,GACC/H,QAAAC,IAAA,6CAAA8H,MAGF/H,QAAAC,IAAA4kC,EAAAI,eAOFJ,EAAAyD,iBAAA,WACCzD,EAAAI,YAAA9lC,WAED0lC,EAAAlhC,SAAA,SAAA6iC,EAAAZ,EAAAC,GACC,GAAA,MAAAtiC,OAAAG,GAAA,CAIAmhC,EAAAK,QAAAxhC,GAAA6kC,sBAAA,CACCtB,SAAA7B,EAAAoB,KAGD,IACC3B,EAAAK,QAAAsD,YACCxoC,QAAAC,IAAA,2BACA4kC,EAAAK,QAAAuD,SAAA5D,EAAAK,QAAAsD,YAED3D,EAAAK,QAAAwD,YACC1oC,QAAAC,IAAA,2BACA4kC,EAAAK,QAAAyD,SAAA9D,EAAAK,QAAAwD,YAED,MAAAzC,GACAjmC,QAAA4oC,KAAA,qDACA5oC,QAAAgI,MAAAi+B,GAGDpB,EAAAK,QAAAsD,UAAA,SAAArnC,GACCnB,QAAAC,IAAAkB,GACA,MAAAA,EAAA0nC,QACCjD,GAAAA,EAAA,wCAEAA,GAAAA,EAAA,+CAGFf,EAAAK,QAAA4D,QAAAjE,EAAAK,QAAAsD,WACA3D,EAAAK,QAAAwD,UAAA,SAAA3gC,GACC/H,QAAAC,IAAA,+BACA8H,GAAAA,EAAAghC,cAAAvoC,IAAAuH,GAEC/H,QAAAC,IAAA,4BACA2lC,GAAAA,MAEA5lC,QAAAC,IAAA,4BACA4lC,GAAAA,MAGFhB,EAAAK,QAAA8D,QAAAnE,EAAAK,QAAAwD,WAGA7D,EAAAK,QAAAv5B,OAAA,MAAA,WAECk5B,EAAAK,QAAAvL,OAAAwN,KAAA,WACO,OAAAtC,EAAAK,QAAAv5B,SAAA,MAAA,WAEL3L,QAAAC,IAAA,wEAKJ4kC,EAAAnT,YAAA,SAAA7pB,EAAAohC,GACC,MAAA1lC,OAAAG,KAGAmhC,EAAAjT,SAAAluB,GAAAwlC,yBACArE,EAAAjT,SAAAuX,QAAA,WACCnpC,QAAAC,IAAA,4BACA4kC,EAAAM,kBAAA,EACAt9B,GAAAA,MAEDg9B,EAAAjT,SAAAwX,OAAA,SAAArhC,GACC/H,QAAAC,IAAA,wCACA4kC,EAAAM,kBAAA,EACA8D,GAAAA,EAAAlhC,KAED88B,EAAAjT,SAAAkX,QAAA,WACC9oC,QAAAC,IAAA,8BAED4kC,EAAAjT,SAAAvB,MAAA,CACCoJ,SAAA,SAGFoL,EAAApX,YAAA,SAAA5lB,GACCg9B,EAAAjT,SAAAyX,QAAA,WACCrpC,QAAAC,IAAA,4BACA4H,GAAAA,MAGDg9B,EAAAjT,SAAA0X,SAEDzE,EAAAnX,aAAA,SAAA7lB,GACCg9B,EAAAjT,SAAA2X,SAAA,WACCvpC,QAAAC,IAAA,4BACA4H,GAAAA,MAGDg9B,EAAAjT,SAAA4X,UAED3E,EAAA7P,WAAA,SAAAntB,GACCg9B,EAAAM,iBACCt9B,GAAAA,KAGDg9B,EAAAjT,SAAAwX,OAAA,SAAArhC,GACC/H,QAAAC,IAAA,4BAEA4H,GAAAA,EAAAE,KAGD88B,EAAAjT,SAAAtwB,SAIDiH,EAAAC,QAAAq8B,uIC3SArrC,GAAAiwC,SAAAC,UAAA,2JCAAlwC,GAAAmwC,SAGInwC,GAAAmwC,OAAAC,iCAAA","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        page1: cc.Node,\r\n        page2: cc.Node,\r\n        btn1: cc.Node,\r\n        btn2: cc.Node,\r\n        activeProgress: cc.ProgressBar,\r\n        progressBtnGroup: cc.Node,\r\n        activeUI: cc.Label,\r\n        curPageIndex: 0,\r\n        onLineTaskNum: [],\r\n        activityTaskNum: [],\r\n        activityCoinNum: [],\r\n    },\r\n\r\n    onLoad() {\r\n        let a = GameApp.dataManager.globalData.onLineGiftCurNum\r\n        this.onLineTaskNum = [a - 10, a - 5, a]\r\n        this.activityTaskNum = GameApp.dataManager.globalData.activityCurNum.concat()\r\n        this.activityCoinNum = GameApp.dataManager.globalData.activityCurCoin.concat()\r\n        this.btn1Click()\r\n    },\r\n    btn1Click(eventTouch) {\r\n        if (this.curPageIndex == 1 && eventTouch) return\r\n        this.curPageIndex = 1\r\n        eventTouch && GameApp.audioManager.playEffect('click')\r\n        this.btn1.children[0].active = false\r\n        this.btn1.children[1].active = true\r\n        this.btn2.children[0].active = true\r\n        this.btn2.children[1].active = false\r\n        this.page2.active = false\r\n        this.showPage1()\r\n    },\r\n    btn2Click(eventTouch) {\r\n        if (this.curPageIndex == 2 && eventTouch) return\r\n        this.curPageIndex = 2\r\n        eventTouch && GameApp.audioManager.playEffect('click')\r\n        this.btn1.children[0].active = true\r\n        this.btn1.children[1].active = false\r\n        this.btn2.children[0].active = false\r\n        this.btn2.children[1].active = true\r\n        this.page1.active = false\r\n        this.showPage2()\r\n    },\r\n    updateOnlineTask() {\r\n        var finishAll = true\r\n        for (var i in this.page1.children) {\r\n            if (GameApp.dataManager.getOnLineGiftsState(i) != 2) {\r\n                finishAll = false\r\n                break;\r\n            }\r\n        }\r\n        if (finishAll) {\r\n            GameApp.dataManager.globalData.onLineGiftCurNum += 15\r\n            cc.sys.localStorage.setItem(\"EatChicken_onLineGiftCurNum\", GameApp.dataManager.globalData.onLineGiftCurNum);\r\n            let a = GameApp.dataManager.globalData.onLineGiftCurNum\r\n            this.onLineTaskNum = [a - 10, a - 5, a]\r\n            GameApp.dataManager.setOnLineGiftsState(0, TaskState.Unfinish)\r\n            GameApp.dataManager.setOnLineGiftsState(1, TaskState.Unfinish)\r\n            GameApp.dataManager.setOnLineGiftsState(2, TaskState.Unfinish)\r\n        }\r\n        this.updateOnLineTaskShow()\r\n    },\r\n    updateOnLineTaskShow() {\r\n        for (var i in this.page1.children) {\r\n            this.page1.children[i].children[0].children[0].getComponent(cc.Label).string = \"累计游戏在线\" + this.onLineTaskNum[i] + \"分钟\"\r\n            this.page1.children[i].children[0].children[1].children[0].getComponent(cc.Label).string = this.onLineTaskNum[i]\r\n        }\r\n        this.updateOnlineTaskBtnShow()\r\n    },\r\n    updateOnlineTaskBtnShow() {\r\n        var _minuteTime = GameApp.dataManager.getOnlineTimeMinute()\r\n        for (var i in this.page1.children) {\r\n            switch (GameApp.dataManager.getOnLineGiftsState(i)) {\r\n                case 0:\r\n                    if (_minuteTime >= this.onLineTaskNum[i]) {\r\n                        GameApp.dataManager.setOnLineGiftsState(i, TaskState.Canget)\r\n                        this.page1.children[i].children[1].children[0].active = false\r\n                        this.page1.children[i].children[1].children[1].active = true\r\n                        this.page1.children[i].children[1].children[2].active = false\r\n                    } else {\r\n                        this.page1.children[i].children[1].children[0].active = true\r\n                        this.page1.children[i].children[1].children[1].active = false\r\n                        this.page1.children[i].children[1].children[2].active = false\r\n                    }\r\n                    break\r\n                case 1:\r\n                    this.page1.children[i].children[1].children[0].active = false\r\n                    this.page1.children[i].children[1].children[1].active = true\r\n                    this.page1.children[i].children[1].children[2].active = false\r\n                    break\r\n                case 2:\r\n                    this.page1.children[i].children[1].children[0].active = false\r\n                    this.page1.children[i].children[1].children[1].active = false\r\n                    this.page1.children[i].children[1].children[2].active = true\r\n                    break\r\n            }\r\n        }\r\n    },\r\n    updateActivityTask() {\r\n        for (var i in this.activityTaskNum) {\r\n            if (GameApp.dataManager.getActivityGiftsState(i) == 2) {\r\n                GameApp.dataManager.globalData.activityCurNum[i] += GameApp.dataManager.globalData.activityAddNum[i]\r\n                cc.sys.localStorage.setItem(\"EatChicken_activityCurNum\", JSON.stringify(GameApp.dataManager.globalData.activityCurNum));\r\n                GameApp.dataManager.globalData.activityCurCoin[i] += GameApp.dataManager.globalData.activityAddCoin[i]\r\n                cc.sys.localStorage.setItem(\"EatChicken_activityCurCoin\", JSON.stringify(GameApp.dataManager.globalData.activityCurCoin));\r\n                GameApp.dataManager.setActivityGiftsState(i, TaskState.Unfinish)\r\n            }\r\n        }\r\n\r\n        this.activityTaskNum = GameApp.dataManager.globalData.activityCurNum.concat()\r\n        this.activityCoinNum = GameApp.dataManager.globalData.activityCurCoin.concat()\r\n        this.updateActivityTaskShow()\r\n    },\r\n    updateActivityTaskShow() {\r\n        var arr1 = [\"累计使用手枪击杀\" + this.activityTaskNum[0] + \"人\",\r\n        \"累计击杀\" + this.activityTaskNum[1] + \"人\",\r\n        \"累计吃鸡\" + this.activityTaskNum[2] + \"局\"]\r\n        for (var i in this.activityTaskNum) {\r\n            this.page2.children[i].children[0].children[0].getComponent(cc.Label).string = arr1[i]\r\n            this.page2.children[i].children[0].children[1].children[0].getComponent(cc.Label).string = this.activityCoinNum[i]\r\n        }\r\n\r\n        this.updateActivityTaskBtnShow()\r\n    },\r\n    updateActivityTaskBtnShow() {\r\n        for (var i in this.activityTaskNum) {\r\n            switch (GameApp.dataManager.getActivityGiftsState(i)) {\r\n                case 0:\r\n                    if (GameApp.dataManager.globalData.activityNum[i] >= this.activityTaskNum[i]) {\r\n                        GameApp.dataManager.setActivityGiftsState(i, TaskState.Canget)\r\n                        this.page2.children[i].children[1].children[0].active = false\r\n                        this.page2.children[i].children[1].children[1].active = true\r\n                        this.page2.children[i].children[1].children[2].active = false\r\n                    } else {\r\n                        this.page2.children[i].children[1].children[0].active = true\r\n                        this.page2.children[i].children[1].children[1].active = false\r\n                        this.page2.children[i].children[1].children[2].active = false\r\n                    }\r\n                    break\r\n                case 1:\r\n                    this.page2.children[i].children[1].children[0].active = false\r\n                    this.page2.children[i].children[1].children[1].active = true\r\n                    this.page2.children[i].children[1].children[2].active = false\r\n                    break\r\n                case 2:\r\n                    this.page2.children[i].children[1].children[0].active = false\r\n                    this.page2.children[i].children[1].children[1].active = false\r\n                    this.page2.children[i].children[1].children[2].active = true\r\n                    break\r\n            }\r\n        }\r\n    },\r\n    showPage1() {\r\n        this.updateOnlineTask()\r\n\r\n        this.page1.active = true\r\n    },\r\n    showPage2() {\r\n        this.updateActivityTask()\r\n        this.updateProgressShow()\r\n        this.updateProgressBtnShow()\r\n        this.page2.active = true\r\n    },\r\n    onLineTaskBtnClick(eventTouch, customEventData) {\r\n        var selectId = parseInt(customEventData)\r\n        if (GameApp.dataManager.getOnLineGiftsState(selectId - 1) == 1) {\r\n            GameApp.dataManager.setOnLineGiftsState(selectId - 1, TaskState.Got)\r\n            GameApp.dataManager.addCoin(this.onLineTaskNum[selectId - 1])\r\n            GameApp.uiManager.showToast(\"获得金币*\" + this.onLineTaskNum[selectId - 1])\r\n            this.updateOnlineTaskBtnShow()\r\n        }\r\n    },\r\n    activityTaskBtnClick(eventTouch, customEventData) {\r\n        var selectId = parseInt(customEventData)\r\n        if (GameApp.dataManager.getActivityGiftsState(selectId - 1) == 1) {\r\n            GameApp.dataManager.setActivityGiftsState(selectId - 1, TaskState.Got)\r\n            GameApp.dataManager.addCoin(this.activityCoinNum[selectId - 1])\r\n            GameApp.dataManager.addActiveValue(20)\r\n            this.updateProgressShow()\r\n            GameApp.uiManager.showToast(\"获得金币*\" + this.activityCoinNum[selectId - 1])\r\n            this.updateActivityTaskBtnShow()\r\n        }\r\n    },\r\n    updateProgressShow() {\r\n        this.activeProgress.progress = GameApp.dataManager.globalData.activeValue / 120\r\n        this.activeUI.string = GameApp.dataManager.globalData.activeValue\r\n    },\r\n\r\n    progressBtnClick(eventTouch, customEventData) {\r\n        var selectId = parseInt(customEventData)\r\n        if (GameApp.dataManager.globalData.progressGifts[selectId - 1] == 1) {\r\n            GameApp.audioManager.playEffect('click')\r\n            var arr = [30, 60, 90, 120]\r\n            var arr2 = [100, 200, 300, 400]\r\n            // if (GameApp.dataManager.activeValue >= arr[selectId - 1]) {\r\n            GameApp.dataManager.addCoin(arr2[selectId - 1])\r\n            GameApp.uiManager.showToast(\"获得金币*\" + arr2[selectId - 1])\r\n            GameApp.dataManager.setProgressGifts(selectId - 1, 2)\r\n            this.updateProgressBtnShow()\r\n            // }\r\n        }\r\n\r\n    },\r\n    updateProgressBtnShow() {\r\n        var arr = [30, 60, 90, 120]\r\n        for (var i in arr) {\r\n            if (GameApp.dataManager.globalData.progressGifts[i] == 0) {\r\n                if (GameApp.dataManager.globalData.activeValue >= arr[i]) {\r\n                    GameApp.dataManager.setProgressGifts(i, 1)\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        for (var i in this.progressBtnGroup.children) {\r\n            if (GameApp.dataManager.globalData.progressGifts[i] == 2) {\r\n                this.progressBtnGroup.children[i].children[0].active = false\r\n                this.progressBtnGroup.children[i].children[1].active = true\r\n            } else {\r\n                this.progressBtnGroup.children[i].children[0].active = true\r\n                this.progressBtnGroup.children[i].children[1].active = false\r\n            }\r\n        }\r\n    },\r\n\r\n    closeBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.eventManager.emit(EventNames.EVENT_SHOW_ACTIVITYBTN)\r\n        this.node.destroy()\r\n    },\r\n});\r\n","cc.Class({\r\n    name: \"AudioManager\",\r\n\r\n    properties: {\r\n        _musicOn: true,\r\n        _musicAudioID: null,\r\n        _musicName: '',\r\n\r\n        _effectOn: true,\r\n        _effectAudioID: null,\r\n\r\n        _Audios: {\r\n            default: {},\r\n        },\r\n    },\r\n\r\n    ctor() {\r\n        cc.game.on(cc.game.EVENT_HIDE, function () {\r\n            console.log(\"cc.audioEngine.pauseAll\");\r\n            cc.audioEngine.pauseAll();\r\n        });\r\n        cc.game.on(cc.game.EVENT_SHOW, function () {\r\n            console.log(\"cc.audioEngine.resumeAll\");\r\n            cc.audioEngine.resumeAll();\r\n        });\r\n        // var tempMusic = cc.sys.localStorage.getItem('CrushAnt_Music');\r\n        var tempSound = cc.sys.localStorage.getItem('EatChicken_Sound');\r\n        // if (tempMusic != null && tempMusic != '' && tempMusic != undefined) {\r\n        //     tempMusic = (tempMusic == \"true\" ? true : false)\r\n        //     this._musicOn = tempMusic\r\n        //     this._effectOn = tempMusic\r\n        // }\r\n        if (tempSound != null && tempSound != '' && tempSound != undefined) {\r\n            tempSound = (tempSound == \"true\" ? true : false)\r\n            this._effectOn = tempSound\r\n        }\r\n    },\r\n\r\n    getMusicName(name) {\r\n        return cc.AudioClip.raw('resources/audio/music/' + name + '.mp3')\r\n    },\r\n\r\n    getEffectName(name) {\r\n        return cc.AudioClip.raw('resources/audio/effect/' + name + '.mp3')\r\n    },\r\n\r\n    playMusic(name, restart) {\r\n        if (name === '' || this._musicName === name && !restart) {\r\n            return;\r\n        }\r\n        this._musicName = name;\r\n        if (this._musicOn) {\r\n            cc.audioEngine.stopMusic(this._musicAudioID);\r\n\r\n            cc.loader.loadRes('audio/music/' + name + '.mp3', cc.AudioClip, (err, clip) => {\r\n                this._musicAudioID = cc.audioEngine.playMusic(clip, true, true)\r\n            });\r\n            // this._musicAudioID = cc.audioEngine.play(this.getMusicName(name), true, 1);\r\n        }\r\n    },\r\n\r\n    setMusic(on) {\r\n        this._musicOn = on;\r\n        cc.sys.localStorage.setItem('MUSIC_ON', '' + on);\r\n        if (on) {\r\n            this.playMusic(this._musicName, true);\r\n        } else {\r\n            cc.audioEngine.stop(this._musicAudioID);\r\n        }\r\n    },\r\n\r\n    playEffect(name, _volume, _loop) {//_loop=1为清除上次的循环音效,_loop=2为循环此次音效\r\n        if (this._effectOn) {\r\n            _loop == 1 && cc.audioEngine.stop(this._effectAudioID);\r\n            cc.loader.loadRes('audio/effect/' + name, cc.AudioClip, (err, clip) => {\r\n                var a = cc.audioEngine.play(clip, _loop == 2, _volume || 1);\r\n                // cc.audioEngine.setVolume(_volume)\r\n                // console.log(cc.audioEngine)\r\n                if (_loop == 2) {\r\n                    this._effectAudioID = a\r\n                }\r\n            });\r\n\r\n\r\n            // this._effectAudioID = cc.audioEngine.play(this.getEffectName(name), _loop == 2, _volume);\r\n        }\r\n    },\r\n\r\n    setEffect(on) {\r\n        this._effectOn = on;\r\n        cc.sys.localStorage.setItem('EatChicken_Sound', '' + on);\r\n        if (!on) {\r\n            cc.audioEngine.stop(this._effectAudioID);\r\n        }\r\n    },\r\n});\r\n","const Utils = require(\"Utils\")\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        coinUI: cc.Label,\r\n        needCoinUI: cc.Label,\r\n        box1CoinRewardUI: cc.Label,\r\n        box2CoinRewardUI: cc.Label,\r\n\r\n        onceClick: {\r\n            default: true,\r\n            visible: false\r\n        }\r\n    },\r\n    onLoad() {\r\n        GameApp.eventManager.on(EventNames.EVENT_UPDATE_COIN_SHOW, this.updateUIShow.bind(this))\r\n        this.updateUIShow()\r\n    },\r\n    onDestroy() {\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_COIN_SHOW)\r\n    },\r\n    updateUIShow() {\r\n        this.coinUI.string = GameApp.dataManager.userData.coinNum\r\n        this.needCoinUI.string = GameApp.dataManager.userData.box1NeedCoinNum\r\n        this.box1CoinRewardUI.string = GameApp.dataManager.userData.box1RewardCoinNum[0] + '~' + GameApp.dataManager.userData.box1RewardCoinNum[1]\r\n        this.box2CoinRewardUI.string = GameApp.dataManager.userData.box2RewardCoinNum[0] + '~' + GameApp.dataManager.userData.box2RewardCoinNum[1]\r\n    },\r\n    oneBtnClick() {\r\n        if (!this.onceClick) return;\r\n        this.onceClick = false\r\n        GameApp.audioManager.playEffect('click')\r\n        if (GameApp.dataManager.reduceCoin(GameApp.dataManager.userData.box1NeedCoinNum)) {\r\n            GameApp.uiManager.showPopup('OpenBoxPopup', (node) => {\r\n                var getNum = Tools.randomNum(GameApp.dataManager.userData.box1RewardCoinNum[0], GameApp.dataManager.userData.box1RewardCoinNum[1])\r\n                GameApp.dataManager.addCoin(getNum)\r\n                node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[0], 1, getNum)\r\n                if (GameApp.dataManager.userData.box1NeedCoinNum < 6400) {\r\n                    GameApp.dataManager.userData.box1NeedCoinNum *= 2\r\n                    GameApp.dataManager.userData.box1RewardCoinNum[0] = GameApp.dataManager.userData.box1NeedCoinNum / 2\r\n                    GameApp.dataManager.userData.box1RewardCoinNum[1] = GameApp.dataManager.userData.box1NeedCoinNum * 1.5\r\n                }\r\n                this.updateUIShow()\r\n                this.onceClick = true\r\n            })\r\n        } else {\r\n            this.onceClick = true\r\n            GameApp.uiManager.showToast(\"金币不足!\")\r\n        }\r\n    },\r\n    twoBtnClick() {\r\n        if (window.wx) {\r\n            GameApp.uiManager.showToast(\"暂未开放！\")\r\n            return\r\n        }\r\n        if (!this.onceClick) return;\r\n        this.onceClick = false\r\n        GameApp.audioManager.playEffect('click')\r\n        var self = this\r\n        if (window.tt) {\r\n            Utils.addVideo(\"addVideo\", function () { //看完了\r\n                self.onceClick = true\r\n                GameApp.dataManager.addPlayedVideoNum()\r\n                GameApp.uiManager.showPopup('OpenBoxPopup', (node) => {\r\n                    var getNum = Tools.randomNum(GameApp.dataManager.userData.box2RewardCoinNum[0], GameApp.dataManager.userData.box2RewardCoinNum[1])\r\n                    GameApp.dataManager.addCoin(getNum)\r\n                    node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[1], 1, getNum)\r\n                    if (GameApp.dataManager.userData.box2RewardCoinNum[0] < 1400) {\r\n                        GameApp.dataManager.userData.box2RewardCoinNum[0] = Math.floor(GameApp.dataManager.userData.box2RewardCoinNum[0] * 1.5)\r\n                        GameApp.dataManager.userData.box2RewardCoinNum[1] = Math.floor(GameApp.dataManager.userData.box2RewardCoinNum[1] * 1.5)\r\n                    }\r\n                    self.updateUIShow()\r\n                    self.onceClick = true\r\n                })\r\n            }, function (_info) { //没看完\r\n                self.onceClick = true\r\n                _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast(\"未看完视频！\")\r\n            })\r\n        } else {\r\n            self.onceClick = true\r\n            GameApp.dataManager.addPlayedVideoNum()\r\n            GameApp.uiManager.showPopup('OpenBoxPopup', (node) => {\r\n                var getNum = Tools.randomNum(GameApp.dataManager.userData.box2RewardCoinNum[0], GameApp.dataManager.userData.box2RewardCoinNum[1])\r\n                GameApp.dataManager.addCoin(getNum)\r\n                node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[1], 1, getNum)\r\n                if (GameApp.dataManager.userData.box2RewardCoinNum[0] < 1400) {\r\n                    GameApp.dataManager.userData.box2RewardCoinNum[0] = Math.floor(GameApp.dataManager.userData.box2RewardCoinNum[0] * 1.5)\r\n                    GameApp.dataManager.userData.box2RewardCoinNum[1] = Math.floor(GameApp.dataManager.userData.box2RewardCoinNum[1] * 1.5)\r\n                }\r\n                self.updateUIShow()\r\n                self.onceClick = true\r\n            })\r\n        }\r\n    },\r\n    threeBtnClick() {\r\n        if (window.wx) {\r\n            GameApp.uiManager.showToast(\"暂未开放！\")\r\n            return\r\n        }\r\n        if (!this.onceClick) return;\r\n        this.onceClick = false\r\n        GameApp.audioManager.playEffect('click')\r\n        var self = this\r\n\r\n        if (window.tt) {\r\n            Utils.addVideo(\"addVideo\", function () { //看完了\r\n                self.onceClick = true\r\n                GameApp.dataManager.addPlayedVideoNum()\r\n                var getIndex = Tools.randomNum(26, 30)\r\n                var getNum = 5\r\n                GameApp.dataManager.addPieceNum(getIndex, getNum)\r\n                GameApp.uiManager.showPopup('OpenBoxPopup', (node) => {\r\n                    node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[2], 2, getNum, getIndex)\r\n                    self.onceClick = true\r\n                })\r\n            }, function (_info) { //没看完\r\n                self.onceClick = true\r\n                _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast(\"未看完视频！\")\r\n            })\r\n        } else {\r\n            self.onceClick = true\r\n            GameApp.dataManager.addPlayedVideoNum()\r\n            var getIndex = Tools.randomNum(26, 30)\r\n            var getNum = 5\r\n            GameApp.dataManager.addPieceNum(getIndex, getNum)\r\n            GameApp.uiManager.showPopup('OpenBoxPopup', (node) => {\r\n                node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[2], 2, getNum, getIndex)\r\n                self.onceClick = true\r\n            })\r\n        }\r\n\r\n    },\r\n\r\n    coinBtnClick() {\r\n        if (!this.onceClick) return;\r\n        this.onceClick = false\r\n        GameApp.audioManager.playEffect('click')\r\n        var self = this\r\n\r\n        if (window.tt) {\r\n            Utils.addVideo(\"addVideo\", function () { //看完了\r\n                self.onceClick = true\r\n                GameApp.uiManager.showToast(\"获得500金币\")\r\n                GameApp.dataManager.addCoin(500)\r\n                self.updateUIShow()\r\n            }, function (_info) { //没看完\r\n                self.onceClick = true\r\n                _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast(\"未看完视频！\")\r\n            })\r\n        } else {\r\n            self.onceClick = true\r\n            GameApp.uiManager.showToast(\"非真机,获得500金币\")\r\n            GameApp.dataManager.addCoin(500)\r\n            self.updateUIShow()\r\n        }\r\n\r\n    },\r\n    backBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.showUI('LoginUI')\r\n    },\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        _belongTag: -1,//区分子弹是哪个角色打出来的\r\n        _belongName: \"\",//射出子弹角色名，用于展示击杀信息\r\n        gunData: {\r\n            default: {}\r\n        },\r\n        _pbc: cc.PhysicsBoxCollider,\r\n        _doFly: false,\r\n        _flyDir: {\r\n            default: cc.v2(0, 0),\r\n        },\r\n        _flySpeed: 0,\r\n        _maxRange: 500,\r\n        _curRange: 0,\r\n        _power: 0,\r\n        _isCrit: false,\r\n        _onceExec: true,\r\n        bulletAtlas: cc.SpriteAtlas,\r\n\r\n    },\r\n    onLoad() {\r\n        this._pbc = this.node.getComponent(cc.PhysicsBoxCollider)\r\n        // setTimeout(function () {\r\n        //     this.node && this.node.destroy()\r\n        // }.bind(this), 4000)\r\n    },\r\n    init(_data, _power, _isCrit, _isDef) {\r\n        this.gunData = _data\r\n        this._power = _power\r\n        this._isCrit = _isCrit\r\n        var cloneId = this.gunData.weaponid\r\n        if (cloneId > 1100) {\r\n            cloneId -= 100\r\n        }\r\n        this.getComponent(cc.Sprite).spriteFrame = this.bulletAtlas.getSpriteFrame(cloneId + 1000)\r\n        this._flySpeed = this.gunData.speed\r\n        this._maxRange = this.gunData.range\r\n        this._pbc.size = new cc.size(60, 30)\r\n        this._pbc.enabled = true\r\n        this._doFly = true\r\n    },\r\n    update(dt) {\r\n        if (this._doFly) {\r\n            this.node.x += this._flyDir.x * this._flySpeed * dt\r\n            this.node.y += this._flyDir.y * this._flySpeed * dt\r\n            this._curRange += this._flyDir.mag() * dt * 1000\r\n            // console.log(this._curRange)\r\n            if (this._curRange > this._maxRange) {\r\n                if (this.gunData.weaponid == 1005 || this.gunData.weaponid == 1105) {\r\n                    this._pbc.size = new cc.size(120, 120)\r\n                    this._pbc.apply()\r\n                }\r\n                this._doFly = false\r\n            }\r\n        } else {\r\n            this.doAnim()\r\n        }\r\n    },\r\n    doAnim() {\r\n        if (!this._onceExec) return\r\n        this._onceExec = false\r\n        this.node.runAction(cc.sequence(cc.delayTime(0.1), cc.callFunc(() => {\r\n            this._pbc.enabled = false\r\n        })))\r\n        var bsp = this.getComponent(cc.Sprite)\r\n        var spIndex = 1\r\n        this.node.runAction(cc.sequence(cc.callFunc(() => {\r\n            var cloneId = this.gunData.weaponid\r\n            if (cloneId > 1100) {\r\n                cloneId -= 100\r\n            }\r\n            var tempSp = this.bulletAtlas.getSpriteFrame(cloneId + 1000 + '_' + spIndex)\r\n            if (tempSp != null) {\r\n                bsp.spriteFrame = tempSp\r\n                ++spIndex\r\n            } else {\r\n                this.node.destroy()\r\n            }\r\n        }), cc.delayTime(0.1)).repeatForever())\r\n    },\r\n    onBeginContact(contact, self, other) {\r\n        if (other.tag == this._belongTag) return\r\n        if (other.tag == Tags.collider || other.tag == Tags.player || other.tag >= Tags.enemy) {\r\n            // console.log(\"子弹撞到了实体\")\r\n            if (this.gunData.weaponid == 1005 || this.gunData.weaponid === 1105) {\r\n                this._pbc.size = new cc.size(120, 120)\r\n                this._pbc.apply()\r\n            }\r\n            this._doFly = false\r\n        }\r\n    },\r\n});\r\n","const paths = {\r\n    \"Skin\": 'data/skins.json',\r\n};\r\n\r\nvar ConfigManager = {\r\n    allConfigs: {},\r\n    loadConfig: function (_name, _call) {\r\n\r\n        var path = paths[_name];\r\n        cc.loader.loadRes(path, function (err, res) {\r\n            if (err) {\r\n                console.log(\"加载出错了\")\r\n                console.error(err.message || err);\r\n                return;\r\n            }\r\n            var tempData = res;\r\n\r\n            this.allConfigs[_name] = tempData;\r\n            _call && _call()\r\n            // console.log(JSON.parse(JSON.stringify(res)));\r\n        }.bind(this));\r\n    },\r\n    loadAllConfig: function (_call) {\r\n        for (const key in paths) {\r\n            if (paths.hasOwnProperty(key)) {\r\n                // const element = paths[key];\r\n                this.loadConfig(key, _call);\r\n            }\r\n        }\r\n    },\r\n    getAllConfig: function () {\r\n        return this.allConfigs;\r\n    },\r\n\r\n};\r\nmodule.exports = ConfigManager;","\r\nwindow.WS_SERVERS = {\r\n    TEST: \"ws://192.168.25.242:19999/server\", // lf\r\n    INSPECT: \"\",\r\n    RELEASE: \"\",\r\n};\r\n\r\nconst servers = {\r\n    TEST: 'TEST',\r\n    INSPECT: 'INSPECT',\r\n    RELEASE: 'RELEASE',\r\n};\r\n\r\nwindow.SERVER = servers.TEST;\r\nwindow.VERSION = '1.0.0';\r\nwindow.NameColor = [\r\n    \"#0cf60b\",\r\n    \"#09b2eb\",\r\n    \"#fc01fc\",\r\n    \"#fb7f03\",\r\n    \"#ec0807\",\r\n    \"#faf80d\"\r\n];\r\n\r\nwindow.Tags = {\r\n    collider: 0,\r\n    player: 1,\r\n    item: 2,\r\n    bullet: 3,\r\n    empty: 4,\r\n    box: 5,\r\n    boom: 6,\r\n    enemy: 10,\r\n    //下面都是enemy\r\n\r\n};\r\n//0是武器，1是道具\r\nwindow.ItemType = {\r\n    weapon: 0,\r\n    item: 1,\r\n};\r\nwindow.EquipType = {\r\n    damage: 0,\r\n    def: 1,\r\n    speed: 2,\r\n    crit: 3\r\n};\r\n//例子： ItemAttr[a][b].c //a装备种类，b装备等级，c装备属性\r\nwindow.ItemAttr = [\r\n    [\r\n        {\r\n            attr: 0.1,\r\n            des: \"伤害+10%\"\r\n        },\r\n        {\r\n            attr: 0.2,\r\n            des: \"伤害+20%\"\r\n        },\r\n        {\r\n            attr: 0.3,\r\n            des: \"伤害+30%\"\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            attr: 0.1,\r\n            des: \"减伤+10%\"\r\n        },\r\n        {\r\n            attr: 0.2,\r\n            des: \"减伤+20%\"\r\n        },\r\n        {\r\n            attr: 0.3,\r\n            des: \"减伤+30%\"\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            attr: 0.1,\r\n            des: \"移速+10%\"\r\n        },\r\n        {\r\n            attr: 0.2,\r\n            des: \"移速+20%\"\r\n        },\r\n        {\r\n            attr: 0.3,\r\n            des: \"移速+30%\"\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            attr: 1,\r\n            des: \"暴击+10%\"\r\n        },\r\n        {\r\n            attr: 2,\r\n            des: \"暴击+20%\"\r\n        },\r\n        {\r\n            attr: 3,\r\n            des: \"暴击+30%\"\r\n        }\r\n    ]\r\n];\r\nwindow.TaskState = {\r\n    Unfinish: 0,\r\n    Canget: 1,\r\n    Got: 2\r\n}\r\n// 客户端自己定义的协议\r\nwindow.EventNames = {\r\n    EVENT_UPDATE_SHOP_CHOOSED_SHOW: 'EVENT_UPDATE_SHOP_CHOOSED_SHOW',\r\n    EVENT_UPDATE_COIN_SHOW: 'EVENT_UPDATE_COIN_SHOW',\r\n    EVENT_UPDATE_AMO_SHOW: 'EVENT_UPDATE_AMO_SHOW',\r\n    EVENT_PLAYER_SHOOT: 'EVENT_PLAYER_SHOOT',\r\n    EVENT_PLAYER_RELOAD: 'EVENT_PLAYER_RELOAD',\r\n    EVENT_UPDATE_TOPBAR_SHOW: 'EVENT_UPDATE_TOPBAR_SHOW',\r\n    EVENT_SHOW_GUN_UI: 'EVENT_SHOW_GUN_UI',\r\n    EVENT_SHOW_ALLROLENUM_UI: 'EVENT_SHOW_ALLROLENUM_UI',\r\n    EVENT_SHOW_RELOAD_UI: 'EVENT_SHOW_RELOAD_UI',\r\n    EVENT_PICKUP_WEAPON: 'EVENT_PICKUP_WEAPON',\r\n    EVENT_AIM: 'EVENT_AIM',\r\n    EVENT_GAME_BEGIN: 'EVENT_GAME_BEGIN',\r\n    EVENT_UPDATE_MIPMAP_PLAYER: 'EVENT_UPDATE_MIPMAP_PLAYER',\r\n    EVENT_THEGAMESTART: 'EVENT_THEGAMESTART',\r\n    EVENT_UPDATE_RANK_SHOW: 'EVENT_UPDATE_RANK_SHOW',\r\n    EVENT_UPDATE_GAS_SHOW: 'EVENT_UPDATE_GAS_SHOW',\r\n    EVENT_FLASH: 'EVENT_FLASH',\r\n    EVENT_RESUME_HEALTH: 'EVENT_RESUME_HEALTH',\r\n    EVENT_DROP_BOX: 'EVENT_DROP_BOX',\r\n    EVENT_NOTYFY_BOX_DISMISS: 'EVENT_NOTYFY_BOX_DISMISS',\r\n    EVENT_NOTYFY_BOOM_DISMISS: 'EVENT_NOTYFY_BOOM_DISMISS',\r\n    EVENT_SHOW_BOXITEM: 'EVENT_SHOW_BOXITEM',\r\n    EVENT_UPDATE_STAR_SHOW: 'EVENT_UPDATE_STAR_SHOW',\r\n    EVENT_NOTIFY_ENEMY_MAPBOX: 'EVENT_NOTIFY_ENEMY_MAPBOX',\r\n    EVENT_SHOW_ACTIVITYBTN: 'EVENT_SHOW_ACTIVITYBTN'\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const Utils = require(\"Utils\")\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        dailyGroup: cc.Node,\r\n        dailyGotNum: {\r\n            default: 0,\r\n            type: cc.number,\r\n            visible: false\r\n        },\r\n        closeBtn: cc.Node,\r\n\r\n        onceClick: true\r\n    },\r\n\r\n    onLoad() {\r\n        this.dailyGotNum = cc.sys.localStorage.getItem(\"EatChicken_dailyGotNum\")\r\n        if (this.dailyGotNum == null || this.dailyGotNum == undefined || this.dailyGotNum == \"\") {\r\n            this.dailyGotNum = 0\r\n            cc.sys.localStorage.setItem(\"EatChicken_dailyGotNum\", 0)\r\n        } else {\r\n            this.dailyGotNum = parseInt(this.dailyGotNum)\r\n        }\r\n        this.initShow()\r\n\r\n        var show = cc.sequence(cc.delayTime(3), cc.scaleTo(0.3, 1))\r\n        this.closeBtn.runAction(show)\r\n        if (GameApp.dataManager.globalData.curDailyGot) {\r\n            this.dailyGroup.children[this.dailyGotNum - 1].getComponent(cc.Button).interactable = false\r\n            this.dailyGroup.children[this.dailyGotNum - 1].children[0].active = true\r\n        } else {\r\n            this.dailyGroup.children[this.dailyGotNum].children[0].active = true\r\n        }\r\n\r\n    },\r\n    initShow() {\r\n        if (this.dailyGotNum > 0) {\r\n            for (var i = 0; i < this.dailyGotNum; i++) {\r\n                this.dailyGroup.children[i].children[1].runAction(cc.scaleTo(0.5, 1).easing(cc.easeBackOut()))\r\n            }\r\n        }\r\n    },\r\n    // sureBtnClick() {\r\n    //     if (!this.onceClick) return\r\n    //     this.onceClick = false\r\n    //     GameApp.audioManager.playEffect('btn_press')\r\n\r\n    //     var self = this\r\n    //     if (window.tt) {\r\n    //         Utils.addVideo(\"addVideo\", function () { //看完了\r\n    //             self.onceClick = true\r\n    //             self.getBtn.interactable = false\r\n    //             self.skipBtn.interactable = false\r\n    //             self.getBtn.node.stopAllActions()\r\n    //             GameApp.dataManager.globalData.curDailyGot = true\r\n    //             cc.sys.localStorage.setItem(\"EatChicken_dailyGotState\", true);\r\n    //             self.dailyGroup.children[self.dailyGotNum].children[2].runAction(cc.sequence(cc.scaleTo(0.5, 0.5).easing(cc.easeBackOut()), cc.callFunc(function () {\r\n    //                 var arr1 = [1, 2, 1, 2, 1, 2, 2] //物品表\r\n    //                 var arr2 = [1, 1, 2, 2, 3, 3, 4] //数量表\r\n    //                 if (arr1[self.dailyGotNum] == 1) {\r\n    //                     GameApp.uiManager.showToast(\"获取 <color=#0fffff>体力x\" + arr2[self.dailyGotNum] * 2 + \" </color>\")\r\n    //                     GameApp.dataManager.addHealthNum(arr2[self.dailyGotNum] * 2)\r\n    //                 } else if (arr1[self.dailyGotNum] == 2) {\r\n    //                     GameApp.uiManager.showToast(\"获取 <color=#0fffff>提示卡x\" + arr2[self.dailyGotNum] * 2 + \" </color>\")\r\n    //                     GameApp.dataManager.addTipNum(arr2[self.dailyGotNum] * 2)\r\n    //                 }\r\n    //                 self.dailyGotNum++\r\n    //                 if (self.dailyGotNum > 7) {\r\n    //                     self.dailyGotNum = 0\r\n    //                 }\r\n    //                 cc.sys.localStorage.setItem(\"EatChicken_dailyGotNum\", self.dailyGotNum)\r\n\r\n    //             }.bind(self), self)))\r\n\r\n    //         }, function (_info) { //没看完\r\n    //             self.onceClick = true\r\n    //             _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast(\"未看完视频\")\r\n    //         })\r\n    //     } else {\r\n    //         self.onceClick = true\r\n    //         this.getBtn.interactable = false\r\n    //         this.skipBtn.interactable = false\r\n    //         this.getBtn.node.stopAllActions()\r\n    //         GameApp.dataManager.globalData.curDailyGot = true\r\n    //         cc.sys.localStorage.setItem(\"EatChicken_dailyGotState\", true);\r\n    //         this.dailyGroup.children[this.dailyGotNum].children[2].runAction(cc.sequence(cc.scaleTo(0.5, 0.5).easing(cc.easeBackOut()), cc.callFunc(function () {\r\n    //             var arr1 = [1, 2, 1, 2, 1, 2, 2] //物品表\r\n    //             var arr2 = [1, 1, 2, 2, 3, 3, 4] //数量表\r\n    //             if (arr1[this.dailyGotNum] == 1) {\r\n    //                 GameApp.uiManager.showToast(\"获取 <color=#0fffff>体力x\" + arr2[this.dailyGotNum] * 2 + \" </color>\")\r\n    //                 GameApp.dataManager.addHealthNum(arr2[this.dailyGotNum] * 2)\r\n    //             } else if (arr1[this.dailyGotNum] == 2) {\r\n    //                 GameApp.uiManager.showToast(\"获取 <color=#0fffff>提示卡x\" + arr2[this.dailyGotNum] * 2 + \" </color>\")\r\n    //                 GameApp.dataManager.addTipNum(arr2[this.dailyGotNum] * 2)\r\n    //             }\r\n\r\n    //             this.dailyGotNum++\r\n    //             if (this.dailyGotNum == 7) {\r\n    //                 this.dailyGotNum = 0\r\n    //             }\r\n    //             cc.sys.localStorage.setItem(\"EatChicken_dailyGotNum\", this.dailyGotNum)\r\n\r\n    //         }.bind(this), this)))\r\n\r\n    //     }\r\n    // },\r\n    getBtnClick(eventTouch, customEventData) {\r\n        var selectId = parseInt(customEventData)\r\n        if (GameApp.dataManager.globalData.curDailyGot) return\r\n        if (this.dailyGotNum != (selectId - 1)) return\r\n        GameApp.audioManager.playEffect('click')\r\n        var self = this\r\n        self.onceClick = true\r\n        this.dailyGroup.children[this.dailyGotNum].getComponent(cc.Button).interactable = false\r\n        GameApp.dataManager.globalData.curDailyGot = true\r\n        cc.sys.localStorage.setItem(\"EatChicken_dailyGotState\", true);\r\n        this.dailyGroup.children[this.dailyGotNum].children[1].runAction(cc.sequence(cc.scaleTo(0.5, 1).easing(cc.easeBackOut()), cc.callFunc(function () {\r\n            var arr1 = [1, 2, 1, 2, 1, 2, 1] //物品表\r\n            var arr2 = [50, 5, 50, 5, 100, 5, 500] //数量表\r\n            if (arr1[this.dailyGotNum] == 1) {\r\n                GameApp.uiManager.showToast(\"获得金币*\" + arr2[this.dailyGotNum])\r\n                GameApp.dataManager.addCoin(arr2[this.dailyGotNum])\r\n            } else if (arr1[this.dailyGotNum] == 2) {\r\n                GameApp.uiManager.showToast(\"获得<color=#faf80d>\" + GameApp.dataManager.getSkinDataById(27).name + \"</color> 碎片*\" + arr2[this.dailyGotNum]);\r\n                GameApp.dataManager.addPieceNum(27, arr2[this.dailyGotNum])\r\n            }\r\n\r\n            this.dailyGotNum++\r\n            if (this.dailyGotNum == 7) {\r\n                this.dailyGotNum = 0\r\n            }\r\n            cc.sys.localStorage.setItem(\"EatChicken_dailyGotNum\", this.dailyGotNum)\r\n\r\n        }.bind(this), this)))\r\n    },\r\n    closeBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        this.node.destroy()\r\n    },\r\n\r\n\r\n    // var delay = cc.delayTime(0.01)\r\n    //     var act = cc.callFunc(function () {\r\n    //     this.winSprite.fillRange += 0.01\r\n    //     if (this.winSprite.fillRange >= 1) {\r\n    //         this.winSprite.node.stopAllActions()\r\n    //         GameApp.uiManager.showPopup('ResultPopup', function (node) {\r\n    //             var popup = node.getComponent('ResultPopup')\r\n    //             popup.init(true)\r\n    //         }.bind(this))\r\n    //     }\r\n    // }.bind(this), this)\r\n    //     this.winSprite.node.runAction(cc.sequence(delay, act).repeatForever())\r\n});\r\n","/**录屏状态 */\r\nwindow.RecordState = cc.Enum({\r\n    READY: 0,\r\n    RECORD: 1,\r\n    PAUSE: 2\r\n});\r\ncc.Class({\r\n    name: \"DataManager\",\r\n\r\n    properties: {\r\n        MD5Code: null,\r\n        userData: {\r\n            default: {},\r\n        },\r\n    },\r\n\r\n    ctor() {\r\n        this.userData = {\r\n            isFirstPlay: true,\r\n            playerName: \"菠萝吹雪\",\r\n            coinNum: 0,\r\n            choosedSkinId: 1, //21~30是独立的spine文件\r\n            unLockedSkinIdArr: [1],\r\n\r\n            playedVideoNum: 0,\r\n            havePieceNum: {\r\n                26: 0,\r\n                27: 0,\r\n                28: 0,\r\n                29: 0,\r\n                30: 0,\r\n            },\r\n            box1NeedCoinNum: 100,\r\n            box1RewardCoinNum: [50, 150],\r\n            box2RewardCoinNum: [250, 500],\r\n\r\n            //下面是人物基础属性\r\n            baseHp: 100,\r\n            baseDamage: 1,\r\n            baseCrit: 0,\r\n            baseSpeed: 200,\r\n            baseCd: 0,\r\n            baseDef: 0,\r\n            baseRecovery: 1,\r\n\r\n            //下面是战绩统计\r\n            alDieNum: 0,\r\n            allKillNum: 0,\r\n            allPlayNum: 0,\r\n            winNum: 0,\r\n            top5Num: 0,\r\n            winRate: 0,\r\n            kd: 0,\r\n            avgRank: 0,\r\n            mostKill: 0,\r\n            avgLifeTime: 0,\r\n        }\r\n        this.globalData = {\r\n            days: 1,\r\n            curDailyGot: false,\r\n\r\n            shootInterval: 0,\r\n            reloadInterval: 0,\r\n            maxAmoNum: 20,\r\n            curAmoNum: 20,\r\n\r\n            maxHp: 100,\r\n            curHp: 100,\r\n            curDamage: 0,\r\n            curCrit: 0,\r\n            curSpeed: 200,\r\n            curCd: 0,\r\n            curDef: 0,\r\n            curRecovery: 0,\r\n\r\n            allRoleArr: [],\r\n            allGunArr: [],\r\n            allBoxArr: [],\r\n            isInGame: false,//用于区分准备场景和游戏场景，准备场景是不会造成伤害的，也不显示一些UI\r\n            inGameKillNum: [],\r\n            gasConfig: null,\r\n            getItemAttrArr: [{\r\n                rank: 0,\r\n                item: null\r\n            }, {\r\n                rank: 0,\r\n                item: null\r\n            }, {\r\n                rank: 0,\r\n                item: null\r\n            }, {\r\n                rank: 0,\r\n                item: null\r\n            }],//伤害，防御，移速，暴击\r\n            equipItemAttr: [0, 0, 0, 0],//(装备带来的属性)伤害，防御，移速，暴击\r\n\r\n            lifeTime: 0,\r\n\r\n\r\n            //在线相关\r\n            onLineTime: 0,//累计在线时长\r\n            onLineGifts: [2, 2, 2],//0未完成，1可领取，2已领取\r\n            onLineGiftCurNum: 0,//当前一批任务最大金币数和所需在线时长(+5)\r\n\r\n            //活跃相关\r\n            activeValue: 0,//活跃值\r\n            activityGifts: [2, 2, 2],//0未完成，1可领取，2已领取\r\n            activityNum: [0, 0, 0],//当前三个任务完成数量\r\n            activityCurNum: [0, 0, 0],\r\n            activityCurCoin: [0, 0, 0],\r\n\r\n            progressGifts: [0, 0, 0, 0],//0是未达成，1是可领取，2是已领取\r\n\r\n            activityAddNum: [1, 3, 1],//每阶段任务增量\r\n            activityAddCoin: [50, 100, 100],//每阶段金币增量\r\n            //////\r\n            playerNameArr: [\r\n                \"隋晗蕾\",\r\n                \"驹夏之\",\r\n                \"壬紫雪\",\r\n                \"华清涵\",\r\n                \"厍岚彩\",\r\n                \"依雪兰\",\r\n                \"俟骊婧\",\r\n                \"声采珊\",\r\n                \"愈成济\",\r\n                \"暴雨\",\r\n                \"党雁丝\",\r\n                \"柴俊郎\",\r\n                \"潜春芳\",\r\n                \"衷亦巧\",\r\n                \"越世敏\",\r\n                \"祈桐\",\r\n                \"菅昆锐\",\r\n                \"卑绍钧\",\r\n                \"浑秀英\",\r\n                \"牛俊悟\",\r\n                \"汲永康\",\r\n                \"虎胤文\",\r\n                \"宿巧春\",\r\n                \"海合瑞\",\r\n                \"朋曾\",\r\n                \"哈蝶\",\r\n                \"宏睿文\",\r\n                \"黎泰然\"],\r\n            recordPath: null,\r\n            recordTimer: 0,\r\n            recordState: RecordState.READY,\r\n        }\r\n        //皮肤\r\n        this.jsonData = {\r\n            SkinsData: [],\r\n            WeaponData: [],\r\n            RobotName: []\r\n        }\r\n    },\r\n    initSomeAttr() {\r\n        cc.game.on(cc.game.EVENT_HIDE, () => {\r\n            console.log(\"进入后台前存储了数据\");\r\n            cc.sys.localStorage.setItem(\"EatChicken_onLineTime\", parseInt(this.globalData.onLineTime));\r\n        });\r\n\r\n        var getState = cc.sys.localStorage.getItem(\"EatChicken_dailyGotState\");\r\n        if (getState == \"true\" || getState == true) {\r\n            this.globalData.curDailyGot = true\r\n        } else {\r\n            this.globalData.curDailyGot = false\r\n        }\r\n        var tempOnLinetime = cc.sys.localStorage.getItem(\"EatChicken_onLineTime\")\r\n        if (tempOnLinetime == null || tempOnLinetime == undefined || tempOnLinetime == \"\") {\r\n            tempOnLinetime = 0\r\n            cc.sys.localStorage.setItem(\"EatChicken_onLineTime\", 0)\r\n        } else {\r\n            tempOnLinetime = parseInt(tempOnLinetime)\r\n        }\r\n        this.globalData.onLineTime = tempOnLinetime\r\n\r\n        var tempOnLineGifts = cc.sys.localStorage.getItem(\"EatChicken_onLineGifts\")\r\n        if (tempOnLineGifts == null || tempOnLineGifts == undefined || tempOnLineGifts == \"\") {\r\n            tempOnLineGifts = [2, 2, 2]\r\n            cc.sys.localStorage.setItem(\"EatChicken_onLineGifts\", JSON.stringify(tempOnLineGifts))\r\n        } else {\r\n            tempOnLineGifts = JSON.parse(tempOnLineGifts)\r\n        }\r\n        this.globalData.onLineGifts = tempOnLineGifts\r\n\r\n\r\n        var tempOnLineGiftCurNum = cc.sys.localStorage.getItem(\"EatChicken_onLineGiftCurNum\")\r\n        if (tempOnLineGiftCurNum == null || tempOnLineGiftCurNum == undefined || tempOnLineGiftCurNum == \"\") {\r\n            tempOnLineGiftCurNum = 0\r\n            cc.sys.localStorage.setItem(\"EatChicken_onLineGiftCurNum\", 0)\r\n        } else {\r\n            tempOnLineGiftCurNum = parseInt(tempOnLineGiftCurNum)\r\n        }\r\n        this.globalData.onLineGiftCurNum = tempOnLineGiftCurNum\r\n\r\n\r\n\r\n        var tempactiveValue = cc.sys.localStorage.getItem(\"EatChicken_activeValue\")\r\n        if (tempactiveValue == null || tempactiveValue == undefined || tempactiveValue == \"\") {\r\n            tempactiveValue = 0\r\n            cc.sys.localStorage.setItem(\"EatChicken_activeValue\", 0)\r\n        } else {\r\n            tempactiveValue = parseInt(tempactiveValue)\r\n        }\r\n        this.globalData.activeValue = tempactiveValue\r\n\r\n        var tempactivityGifts = cc.sys.localStorage.getItem(\"EatChicken_activityGifts\")\r\n        if (tempactivityGifts == null || tempactivityGifts == undefined || tempactivityGifts == \"\") {\r\n            tempactivityGifts = [2, 2, 2]\r\n            cc.sys.localStorage.setItem(\"EatChicken_activityGifts\", JSON.stringify(tempactivityGifts))\r\n        } else {\r\n            tempactivityGifts = JSON.parse(tempactivityGifts)\r\n        }\r\n        this.globalData.activityGifts = tempactivityGifts\r\n\r\n        var tempactivityNum = cc.sys.localStorage.getItem(\"EatChicken_activityNum\")\r\n        if (tempactivityNum == null || tempactivityNum == undefined || tempactivityNum == \"\") {\r\n            tempactivityNum = [0, 0, 0]\r\n            cc.sys.localStorage.setItem(\"EatChicken_activityNum\", JSON.stringify(tempactivityNum))\r\n        } else {\r\n            tempactivityNum = JSON.parse(tempactivityNum)\r\n        }\r\n        this.globalData.activityNum = tempactivityNum\r\n\r\n        var tempactivityCurNum = cc.sys.localStorage.getItem(\"EatChicken_activityCurNum\")\r\n        if (tempactivityCurNum == null || tempactivityCurNum == undefined || tempactivityCurNum == \"\") {\r\n            tempactivityCurNum = [0, 0, 0]\r\n            cc.sys.localStorage.setItem(\"EatChicken_activityCurNum\", JSON.stringify(tempactivityCurNum))\r\n        } else {\r\n            tempactivityCurNum = JSON.parse(tempactivityCurNum)\r\n        }\r\n        this.globalData.activityCurNum = tempactivityCurNum\r\n\r\n        var tempactivityCurCoin = cc.sys.localStorage.getItem(\"EatChicken_activityCurCoin\")\r\n        if (tempactivityCurCoin == null || tempactivityCurCoin == undefined || tempactivityCurCoin == \"\") {\r\n            tempactivityCurCoin = [0, 0, 0]\r\n            cc.sys.localStorage.setItem(\"EatChicken_activityCurCoin\", JSON.stringify(tempactivityCurCoin))\r\n        } else {\r\n            tempactivityCurCoin = JSON.parse(tempactivityCurCoin)\r\n        }\r\n        this.globalData.activityCurCoin = tempactivityCurCoin\r\n\r\n        var tempprogressGifts = cc.sys.localStorage.getItem(\"EatChicken_progressGifts\")\r\n        if (tempprogressGifts == null || tempprogressGifts == undefined || tempprogressGifts == \"\") {\r\n            tempprogressGifts = [0, 0, 0, 0]\r\n            cc.sys.localStorage.setItem(\"EatChicken_progressGifts\", JSON.stringify(tempprogressGifts))\r\n        } else {\r\n            tempprogressGifts = JSON.parse(tempprogressGifts)\r\n        }\r\n        this.globalData.progressGifts = tempprogressGifts\r\n\r\n\r\n        this.globalData.allRoleArr = []\r\n        this.globalData.allGunArr = []\r\n        this.globalData.allBoxArr = []\r\n        this.globalData.inGameKillNum = []\r\n        this.globalData.gasConfig = null\r\n        this.globalData.getItemAttrArr = [{\r\n            rank: 0,\r\n            item: null\r\n        }, {\r\n            rank: 0,\r\n            item: null\r\n        }, {\r\n            rank: 0,\r\n            item: null\r\n        }, {\r\n            rank: 0,\r\n            item: null\r\n        }]//伤害，防御，移速，暴击\r\n        this.globalData.equipItemAttr = [0, 0, 0, 0]\r\n        this.globalData.maxHp = this.globalData.curHp = this.userData.baseHp\r\n        this.globalData.curDamage = this.userData.baseDamage\r\n        this.globalData.curCrit = this.userData.baseCrit\r\n        this.globalData.curSpeed = this.userData.baseSpeed\r\n        this.globalData.curCd = this.userData.baseCd\r\n        this.globalData.curDef = this.userData.baseDef\r\n        this.globalData.curRecovery = this.userData.baseRecovery\r\n\r\n        // for (let i = 0; i < 30; i++) {\r\n        //     this.globalData.inGameKillNum.push({\r\n        //         _killNum: 0,\r\n        //         _belongName: \"\"\r\n        //     })\r\n        // }\r\n    },\r\n    setPlayerName(_name) {\r\n        this.userData.playerName = _name\r\n        this.save()\r\n    },\r\n    addCoin(_num) {\r\n        this.userData.coinNum += _num\r\n        GameApp.eventManager.emit(EventNames.EVENT_UPDATE_COIN_SHOW)\r\n        this.save()\r\n    },\r\n    reduceCoin(_num) {\r\n        var a = this.userData.coinNum - _num\r\n        if (a < 0) {\r\n            return false\r\n        } else {\r\n            this.userData.coinNum = a\r\n            GameApp.eventManager.emit(EventNames.EVENT_UPDATE_COIN_SHOW)\r\n            this.save()\r\n            return true\r\n        }\r\n    },\r\n\r\n    unLockSkin(_skinId) {\r\n        if (this.userData.unLockedSkinIdArr.indexOf(_skinId) == -1) {\r\n            this.userData.unLockedSkinIdArr.push(_skinId)\r\n        }\r\n    },\r\n    addPieceNum(_pieceIndex, _num) {\r\n        this.userData.havePieceNum[_pieceIndex] += _num\r\n        var arr = [26, 27, 28, 29, 30]\r\n        arr.forEach(index => {\r\n            if (this.userData.havePieceNum[index] >= this.getSkinDataById(index).needpiece) {\r\n                this.unLockSkin(index)\r\n            }\r\n        });\r\n        this.save()\r\n    },\r\n    addPlayedVideoNum() {\r\n        this.userData.playedVideoNum++\r\n        var arr = [21, 22, 23, 24, 25]\r\n        arr.forEach(index => {\r\n            if (this.userData.playedVideoNum >= this.getSkinDataById(index).needgem) {\r\n                this.unLockSkin(index)\r\n            }\r\n        });\r\n        this.save()\r\n    },\r\n    getSkinDataById(_skinId) {\r\n        return this.jsonData.SkinsData[_skinId - 1]\r\n    },\r\n\r\n    setChoosedSkinId(_val) {\r\n        (_val > 30) && (_val = 1);\r\n        (_val < 1) && (_val = 30);\r\n        this.userData.choosedSkinId = _val\r\n        this.addSkinAttr()\r\n        this.save()\r\n    },\r\n    addSkinAttr() {\r\n        var curSkinData = this.getSkinDataById(this.userData.choosedSkinId)\r\n        this.globalData.maxHp = this.globalData.curHp = this.userData.baseHp + Math.floor(this.userData.baseHp * (curSkinData.att_hpmax / 100))\r\n        this.globalData.curDamage = this.userData.baseDamage + curSkinData.att_damage / 100\r\n        this.globalData.curCrit = this.userData.baseCrit + curSkinData.att_crit / 10\r\n        this.globalData.curSpeed = this.userData.baseSpeed + Math.floor(this.userData.baseSpeed * (curSkinData.att_speed / 100))\r\n        this.globalData.curCd = this.userData.baseCd + curSkinData.att_cd / 100\r\n        this.globalData.curDef = this.userData.baseDef + curSkinData.att_defense / 100\r\n        this.globalData.curRecovery = this.userData.baseRecovery + curSkinData.att_recovery / 100\r\n    },\r\n    getChoosedSkinId() {\r\n        return this.userData.choosedSkinId\r\n    },\r\n    reduceHp(_num) {\r\n        var a = this.globalData.curHp - _num\r\n        if (a <= 0) {\r\n            this.globalData.curHp = 0\r\n            GameApp.eventManager.emit(EventNames.EVENT_UPDATE_TOPBAR_SHOW)\r\n            return false\r\n        } else {\r\n            this.globalData.curHp = a\r\n            GameApp.eventManager.emit(EventNames.EVENT_UPDATE_TOPBAR_SHOW)\r\n            return true\r\n        }\r\n    },\r\n    getResumeHealthNum() {\r\n        return 10 * this.globalData.curRecovery\r\n    },\r\n    getSkillCD() {\r\n        return 10 * (1 - this.globalData.curCd)\r\n    },\r\n    addHp(_num) {\r\n        var a = this.globalData.curHp + _num\r\n        if (a > this.globalData.maxHp) {\r\n            this.globalData.curHp = this.globalData.maxHp\r\n        } else {\r\n            this.globalData.curHp = a\r\n        }\r\n        GameApp.eventManager.emit(EventNames.EVENT_UPDATE_TOPBAR_SHOW)\r\n    },\r\n    reduceAmo() {\r\n        var a = this.globalData.curAmoNum - 1\r\n        if (a < 0) {\r\n            this.globalData.curAmoNum = 0\r\n            GameApp.eventManager.emit(EventNames.EVENT_UPDATE_AMO_SHOW)\r\n            return false\r\n        } else {\r\n            this.globalData.curAmoNum = a\r\n            GameApp.eventManager.emit(EventNames.EVENT_UPDATE_AMO_SHOW)\r\n            return true\r\n        }\r\n    },\r\n    reloadAmo() {\r\n        this.globalData.curAmoNum = this.globalData.maxAmoNum\r\n        GameApp.eventManager.emit(EventNames.EVENT_UPDATE_AMO_SHOW)\r\n    },\r\n    addKillNum(_index, _belongName) {\r\n        if (_index == 1) {\r\n            _index = 0\r\n        } else {\r\n            _index -= 9\r\n        }\r\n        this.globalData.inGameKillNum[_index]._killNum++\r\n        this.globalData.inGameKillNum[_index]._belongName = _belongName\r\n        GameApp.eventManager.emit(EventNames.EVENT_UPDATE_RANK_SHOW)\r\n        return this.globalData.inGameKillNum[_index]._killNum\r\n    },\r\n    equipBoxItem(_index) {\r\n        var _rank = this.globalData.getItemAttrArr[_index].rank + 1\r\n        this.globalData.getItemAttrArr[_index] = {\r\n            rank: _rank,\r\n            item: ItemAttr[_index][_rank - 1]\r\n        }\r\n        // var _num = 1\r\n        // if (_index == 3) {\r\n        //     _num = 0\r\n        // }\r\n        this.globalData.equipItemAttr[_index] = this.globalData.getItemAttrArr[_index].item.attr\r\n        GameApp.eventManager.emit(EventNames.EVENT_UPDATE_STAR_SHOW)\r\n    },\r\n    getEquipItemAttr(_index) {\r\n        return this.globalData.equipItemAttr[_index]\r\n    },\r\n    getEquipShowAttr() {\r\n        var arr = []\r\n        for (var i in this.globalData.getItemAttrArr) {\r\n            var _rank = this.globalData.getItemAttrArr[i].rank\r\n            if (_rank == 0) {\r\n                arr.push(null)\r\n            } else {\r\n                arr.push(this.globalData.getItemAttrArr[i])\r\n            }\r\n        }\r\n        return arr\r\n    },\r\n    getOnLineGiftsState(_index) {\r\n        return this.globalData.onLineGifts[_index]\r\n    },\r\n    getActivityGiftsState(_index) {\r\n        return this.globalData.activityGifts[_index]\r\n    },\r\n    setOnLineGiftsState(_index, _state) {\r\n        this.globalData.onLineGifts[_index] = _state\r\n        cc.sys.localStorage.setItem(\"EatChicken_onLineGifts\", JSON.stringify(this.globalData.onLineGifts))\r\n    },\r\n    setActivityGiftsState(_index, _state) {\r\n        this.globalData.activityGifts[_index] = _state\r\n        cc.sys.localStorage.setItem(\"EatChicken_activityGifts\", JSON.stringify(this.globalData.activityGifts))\r\n    },\r\n    getOnlineTimeMinute() {\r\n        var minuteTime = 0\r\n        var newtime = Tools.toTimeString2(this.globalData.onLineTime)\r\n        minuteTime = Math.floor(newtime.hour * 60 + newtime.minute)\r\n        return minuteTime\r\n    },\r\n    addActiveValue(_num) {\r\n        var a = this.globalData.activeValue + _num\r\n        if (a > 120) {\r\n            a = 120\r\n        }\r\n        this.globalData.activeValue = a\r\n        var arr = [30, 60, 90, 120]\r\n        for (var i in arr) {\r\n            if (this.globalData.progressGifts[i] == 0) {\r\n                if (this.globalData.activeValue >= arr[i]) {\r\n                    this.setProgressGifts(i, 1)\r\n                }\r\n            }\r\n        }\r\n        cc.sys.localStorage.setItem(\"EatChicken_activeValue\", this.globalData.activeValue)\r\n    },\r\n    addActivityNum(_index, _num) { //更新对应任务完成数量\r\n        this.globalData.activityNum[_index] += _num\r\n        cc.sys.localStorage.setItem(\"EatChicken_activityNum\", JSON.stringify(this.globalData.activityNum))\r\n    },\r\n    setProgressGifts(_index, _state) {\r\n        this.globalData.progressGifts[_index] = _state\r\n        cc.sys.localStorage.setItem(\"EatChicken_progressGifts\", JSON.stringify(this.globalData.progressGifts))\r\n    },\r\n    save() {\r\n        cc.sys.localStorage.setItem(\"EatChicken_UserData\", JSON.stringify(this.userData))\r\n    },\r\n    //////////////////////////////////////////////////////////下卖弄是通用的\r\n    changeRecordState(state) {\r\n        this.globalData.recordState = state\r\n    },\r\n    setMD5Code(_data) {\r\n        this.MD5Code = _data\r\n    },\r\n\r\n    getMD5Code() {\r\n        return this.MD5Code\r\n    },\r\n\r\n});","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        boxIndex: 1231231,\r\n        _showToPlayer: false,\r\n        progressBar: cc.ProgressBar,\r\n        _beginOpen: false,\r\n        _hadOpen: false,\r\n        _openTimer: 0,\r\n        _belongTagsArr: [],\r\n        other: null,\r\n    },\r\n\r\n\r\n    onLoad() {\r\n        this._belongTagsArr = []\r\n    },\r\n    init(_index) {\r\n        // console.log(_index)\r\n        this.boxIndex = _index\r\n    },\r\n    update(dt) {\r\n        if (this._hadOpen) return\r\n\r\n        if (this._beginOpen) {\r\n            this._openTimer += dt\r\n            if (this._openTimer >= 5) {\r\n                if (this._hadOpen) return\r\n                this._hadOpen = true\r\n                GameApp.eventManager.emit(EventNames.EVENT_NOTYFY_BOX_DISMISS, this.boxIndex.toString())\r\n                if (this._belongTagsArr.length == 0) return\r\n                if (this._belongTagsArr.indexOf(Tags.player) != -1) {\r\n                    GameApp.eventManager.emit(EventNames.EVENT_SHOW_BOXITEM)\r\n                } else {\r\n                    // console.log(\"触发了\")\r\n                    this.other && this.other.node.getComponent(\"Enemy\").enemyEquipBoxItem()\r\n                }\r\n            }\r\n\r\n        } else {\r\n            this._openTimer -= dt\r\n            if (this._openTimer < 0) {\r\n                this._openTimer = 0\r\n            }\r\n        }\r\n        this.progressBar.progress = this._openTimer / 5\r\n    },\r\n    onBeginContact(contact, self, other) {\r\n        if (other.tag == Tags.player || other.tag >= Tags.enemy) {\r\n            this._beginOpen = true\r\n\r\n            if (this._belongTagsArr.indexOf(other.tag) == -1) {\r\n                this._belongTagsArr.push(other.tag)\r\n            }\r\n        }\r\n    },\r\n\r\n    onEndContact(contact, self, other) {\r\n        if (other.tag == Tags.player || other.tag >= Tags.enemy) {\r\n            if (this._openTimer >= 5) {\r\n                this.other = other\r\n                if (this._hadOpen) return\r\n                this._hadOpen = true\r\n                GameApp.eventManager.emit(EventNames.EVENT_NOTYFY_BOX_DISMISS, this.boxIndex.toString())\r\n                if (this._belongTagsArr.length == 0) return\r\n                if (this._belongTagsArr.indexOf(Tags.player) != -1) {\r\n                    GameApp.eventManager.emit(EventNames.EVENT_SHOW_BOXITEM)\r\n                } else {\r\n                    // console.log(\"触发了\")\r\n                    other.node.getComponent(\"Enemy\").enemyEquipBoxItem()\r\n                }\r\n                return\r\n            }\r\n\r\n\r\n            if (this._belongTagsArr.indexOf(other.tag) != -1) {\r\n                Tools.removeArray(this._belongTagsArr, other.tag)\r\n            }\r\n            if (this._belongTagsArr.length == 0) {\r\n                this._beginOpen = false\r\n            }\r\n        }\r\n    },\r\n\r\n});\r\n","import { SpeedType } from 'JoystickCommon'\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n\r\n        // from joystick\r\n        moveDir: {\r\n            default: cc.v2(0, 0),\r\n            displayName: 'Move Dir',\r\n            tooltip: '移动方向',\r\n        },\r\n        _speedType: {\r\n            default: SpeedType.STOP,\r\n            displayName: 'Speed Type',\r\n            type: SpeedType,\r\n            tooltip: '速度级别'\r\n        },\r\n\r\n        // from self\r\n        _moveSpeed: {\r\n            default: 0,\r\n            displayName: 'Move Speed',\r\n            tooltip: '移动速度'\r\n        },\r\n\r\n        stopSpeed: {\r\n            default: 0,\r\n            type: cc.Integer,\r\n            tooltip: '停止时速度'\r\n        },\r\n        normalSpeed: {\r\n            default: 200,\r\n            type: cc.Integer,\r\n            tooltip: '正常速度'\r\n        },\r\n        fastSpeed: {\r\n            default: 200,\r\n            type: cc.Integer,\r\n            tooltip: '最快速度'\r\n        },\r\n\r\n        roleAnim: {\r\n            default: null,\r\n            type: sp.Skeleton,\r\n            tooltip: '角色的Spine动画组件',\r\n        },\r\n        _gunDir: {\r\n            default: cc.v2(1, 0),\r\n        },\r\n        gunAnim: {\r\n            default: null,\r\n            type: sp.Skeleton,\r\n            tooltip: '枪的Spine动画组件',\r\n        },\r\n        gunNode: {\r\n            default: null,\r\n            type: cc.Node,\r\n            tooltip: '枪节点',\r\n        },\r\n        _haveGun: false,\r\n        _mapNoGun: false,\r\n        _mapNoBox: true,\r\n        thisName: \"\",\r\n        gunData: {\r\n            default: {}\r\n        },\r\n        skinData: {\r\n            default: {}\r\n        },\r\n        _pbc: cc.PhysicsBoxCollider,\r\n        nameUI: cc.Label,\r\n        bulletPrefab: cc.Prefab,\r\n\r\n        _choosedSkinId: 0,\r\n\r\n        hpBar: cc.ProgressBar,\r\n        amoBar: cc.ProgressBar,\r\n\r\n        starNode: cc.Node,\r\n        _maxHp: 100,\r\n        _curHp: 100,\r\n        _shootInterval: 0,\r\n        _reloadInterval: 0,\r\n        _maxAmoNum: 20,\r\n        _curAmoNum: 20,\r\n\r\n        _curDamage: 0,\r\n        _curCrit: 0,\r\n        _curSpeed: 200,\r\n        _curCd: 0,\r\n        _curDef: 0,\r\n        _curRecovery: 0,\r\n\r\n        getItemAttrArr: [],//伤害，防御，移速，暴击\r\n        equipItemAttr: [],//(装备带来的属性)伤害，防御，移速，暴击\r\n\r\n\r\n        _shootFlag: false,\r\n        _shootTimer: 0.3,\r\n        _reloadFlag: false,\r\n        _reloadTimer: 0,\r\n        lastHitBullet: null,\r\n\r\n        _desTime: 0,//巡逻的变向频率\r\n        _desTime2: 0,// 追踪或逃跑的变向频率\r\n        _isAim: false,//瞄准状态，此状态下枪不可自主转向，避免鬼畜\r\n        _aimDir: null,\r\n        _aimTimer: 0,\r\n        _aimInterval: 0.1,\r\n        _isDie: false,\r\n        _move: false,\r\n        _isProtect: false,\r\n        _isBlock: false,\r\n        _isGas: false,\r\n        _inGasTimer: 0,\r\n        _inGasInterval: 0.5,\r\n    },\r\n    onLoad() {\r\n        this.getItemAttrArr = [{\r\n            rank: 0,\r\n            item: null\r\n        }, {\r\n            rank: 0,\r\n            item: null\r\n        }, {\r\n            rank: 0,\r\n            item: null\r\n        }, {\r\n            rank: 0,\r\n            item: null\r\n        }]//伤害，防御，移速，暴击\r\n        this.equipItemAttr = [0, 0, 0, 0]//(装备带来的属性)伤害，防御，移速，暴击\r\n\r\n        GameApp.eventManager.on(EventNames.EVENT_THEGAMESTART, this.theGameStart.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_NOTIFY_ENEMY_MAPBOX, this.notifyMapBox.bind(this))\r\n        // this._pbc = this.getComponent(cc.PhysicsBoxCollider)\r\n        // this._pbc.tag = Tags.role\r\n        this._pbc = this.getComponent(cc.PhysicsBoxCollider)\r\n        // this._desTime = Tools.randomNum(1, 3)\r\n    },\r\n    onEnable() {\r\n\r\n    },\r\n    onDisable() {\r\n    },\r\n    onDestroy() {\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_THEGAMESTART)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_NOTIFY_ENEMY_MAPBOX)\r\n    },\r\n    init(_index, _names) {\r\n        // this.schedule(() => {\r\n        //     console.log(GameApp.dataManager.userData.choosedSkinId)\r\n        //     GameApp.dataManager.setSkinId(GameApp.dataManager.userData.choosedSkinId += 1)\r\n        // }, 2);\r\n        if (GameApp.dataManager.globalData.isInGame) {\r\n            this.roleProtect()\r\n        }\r\n        this._choosedSkinId = _index\r\n        this.skinData = GameApp.dataManager.jsonData.SkinsData[_index - 1]\r\n        this.addSkinAttr()\r\n        this.initNameShow(_names)\r\n        this.initSkinShow()\r\n        this.setSpeedType(SpeedType.FAST)\r\n        // console.log(this._pbc.tag)\r\n    },\r\n    addSkinAttr() {\r\n        var curSkinData = this.skinData\r\n        this._maxHp = this._curHp = GameApp.dataManager.userData.baseHp + Math.floor(GameApp.dataManager.userData.baseHp * (curSkinData.att_hpmax / 100))\r\n        this._curDamage = GameApp.dataManager.userData.baseDamage + curSkinData.att_damage / 100\r\n        this._curCrit = GameApp.dataManager.userData.baseCrit + curSkinData.att_crit / 10\r\n        this._curSpeed = GameApp.dataManager.userData.baseSpeed + Math.floor(GameApp.dataManager.userData.baseSpeed * (curSkinData.att_speed / 100))\r\n        this._curCd = GameApp.dataManager.userData.baseCd + curSkinData.att_cd / 100\r\n        this._curDef = GameApp.dataManager.userData.baseDef + curSkinData.att_defense / 100\r\n        this._curRecovery = GameApp.dataManager.userData.baseRecovery + curSkinData.att_recovery / 100\r\n    },\r\n    roleProtect() {\r\n        this._isProtect = true\r\n        this.node.opacity = 0\r\n    },\r\n    theGameStart() {\r\n        this.node.opacity = 255\r\n        this._isProtect = false\r\n    },\r\n    notifyMapBox() {\r\n        this._mapNoBox = false\r\n    },\r\n    enemyEquipBoxItem() {\r\n        var arr = [0, 1, 2, 3]\r\n        var _selectIndex = 0\r\n        while (this.getItemAttrArr[_selectIndex].rank == 3) {\r\n            Tools.removeArray(arr, _selectIndex)\r\n            if (arr.length == 0) {\r\n                return\r\n            }\r\n            _selectIndex = Tools.getRandomElement(arr)\r\n        }\r\n\r\n        // console.log(\"选择了\" + _selectIndex)\r\n        var _rank = this.getItemAttrArr[_selectIndex].rank + 1\r\n        this.getItemAttrArr[_selectIndex] = {\r\n            rank: _rank,\r\n            item: ItemAttr[_selectIndex][_rank - 1]\r\n        }\r\n        this.equipItemAttr[_selectIndex] = this.getItemAttrArr[_selectIndex].item.attr\r\n        this.updateStarShow()\r\n    },\r\n    updateStarShow() {\r\n        var _sum = 0\r\n        for (var i = 0; i < 4; i++) {\r\n            _sum += this.getItemAttrArr[i].rank\r\n        }\r\n        if (_sum == 0) {\r\n            this.starNode.active = false\r\n        } else {\r\n            var level = parseInt((_sum - 1) / 3)\r\n            var starNum = _sum - level * 3\r\n            this.starNode.children[0].getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame(\"level_bg_\" + (level + 1))\r\n            this.starNode.children[1].getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame(\"level_star_\" + (level + 1) + \"_\" + starNum)\r\n            this.starNode.active = true\r\n        }\r\n    },\r\n    initNameShow(_names) {\r\n        this.thisName = _names\r\n        this.nameUI.string = _names\r\n        if (!GameApp.dataManager.globalData.isInGame) {\r\n            this.hpBar.node.active = false\r\n        }\r\n        // var colorIndex = Math.floor((this.skinData.skinid - 1) / 5)\r\n        // this.nameUI.node.color = new cc.Color().fromHEX(NameColor[colorIndex]);\r\n    },\r\n    initSkinShow() {\r\n        if (this._choosedSkinId < 21) {\r\n            this.roleAnim.skeletonData = GameApp.uiManager.normalSkinData\r\n            this.roleAnim.setSkin(this.skinData.skinname)\r\n        } else {\r\n            this.roleAnim.skeletonData = GameApp.uiManager.advanceSkinDataGroup[this._choosedSkinId - 21]\r\n        }\r\n        var arr = this._choosedSkinId < 21 ? ['await'] : ['await_fight_1']\r\n        this.roleAnim.setAnimation(0, arr[0], true)\r\n    },\r\n    // methods\r\n    move(dt) {\r\n        // this.node.rotation = 90 - cc.misc.radiansToDegrees(\r\n        //     Math.atan2(this.moveDir.y, this.moveDir.x)\r\n        // );\r\n        if (!this.moveDir) return\r\n        var theAngle = 90 - cc.misc.radiansToDegrees(Math.atan2(this.moveDir.y, this.moveDir.x))\r\n        if (theAngle > 180 || theAngle < 0) {\r\n            this.roleAnim.node.scaleX = -1\r\n        } else {\r\n            this.roleAnim.node.scaleX = 1\r\n        }\r\n        let newPos = this.node.position.add(this.moveDir.mul(this._moveSpeed * dt));\r\n        this.node.setPosition(newPos);\r\n        // this.roleAnim.node.setPosition(0, 0)\r\n    },\r\n    doParser(dt) {\r\n        this._desTime -= dt\r\n        this._desTime2 -= dt\r\n        if (this._isAim) {\r\n            if (this._desTime2 < 0) {\r\n                this._desTime2 = 1\r\n                if (this._haveGun) {\r\n                    // console.log(\"追踪\")\r\n                    !this._isBlock && this.setDir(this._aimDir)\r\n                } else {\r\n                    // console.log(\"逃跑\")\r\n                    !this._isBlock && this.setDir(this._aimDir.rotate(180))\r\n                }\r\n            }\r\n            return\r\n        }\r\n        if (GameApp.dataManager.globalData.gasConfig != null) {\r\n            let dir = cc.v2(GameApp.dataManager.globalData.gasConfig.safePosition).sub(cc.v2(this.node.position))\r\n            let distance = dir.mag()\r\n            if (GameApp.dataManager.globalData.gasConfig.gasCircle > 0 && distance > GameApp.dataManager.globalData.gasConfig.gasCircle / 2) {\r\n                this._inGasTimer -= dt\r\n                if (this._inGasTimer < 0) {\r\n                    this._inGasTimer = this._inGasInterval\r\n                    this.beDamage(5, -1)\r\n                }\r\n                this._isGas = true\r\n                !this._isBlock && this.setDir(dir.normalize())\r\n                return\r\n            } else {\r\n                this._isGas = false\r\n            }\r\n        } else {\r\n            this._isGas = false\r\n        }\r\n\r\n        if (this._desTime < 0) {\r\n            //1 1 不找  1 0 找  0 1 不找  0 0 不找\r\n            if (!this._isGas && !this._mapNoGun && !this._haveGun) {\r\n                this._desTime = 0.3\r\n                // console.log(\"找枪\")\r\n                !this._isBlock && this.searchGun()\r\n            } else {\r\n                if (!this._isGas && GameApp.dataManager.globalData.isInGame && !this._mapNoBox && this._haveGun) {\r\n                    this._desTime = 0.3\r\n                    // console.log(\"找箱子\")\r\n                    this.searchBox()\r\n                } else {\r\n                    // console.log(\"巡逻\")\r\n                    this._desTime = Tools.randomNum(1, 3)\r\n                    var desDir = cc.v2(0, 1).rotate(cc.misc.radiansToDegrees(Tools.randomNum(0, 360)))\r\n                    !this._isBlock && this.setDir(desDir)\r\n                }\r\n\r\n            }\r\n        }\r\n    },\r\n    searchGun() {\r\n        var allGunArr = GameApp.dataManager.globalData.allGunArr.concat()\r\n        var minDis = 1000000;\r\n        var index = -1;\r\n        for (let i = 0; i < allGunArr.length; i++) {\r\n            var distance = cc.v2(allGunArr[i].position).sub(cc.v2(this.node.position)).mag()\r\n            if (distance < minDis) {\r\n                if (GameApp.dataManager.globalData.gasConfig != null) {\r\n                    let dirDistance = cc.v2(GameApp.dataManager.globalData.gasConfig.safePosition).sub(cc.v2(allGunArr[i].position)).mag()\r\n                    if (dirDistance > GameApp.dataManager.globalData.gasConfig.gasCircle / 2) {\r\n                        continue\r\n                    }\r\n                }\r\n                minDis = distance\r\n                index = i\r\n            }\r\n        }\r\n        var dir = null\r\n        if (index == -1) {\r\n            this._mapNoGun = true\r\n        } else {\r\n            var aimGun = allGunArr[index]\r\n            dir = cc.v2(aimGun.position).sub(cc.v2(this.node.position)).normalize()\r\n        }\r\n        this.setDir(dir)\r\n    },\r\n    searchBox() {\r\n        var allBoxArr = GameApp.dataManager.globalData.allBoxArr.concat()\r\n        var minDis = 1000000;\r\n        var index = -1;\r\n        for (let i = 0; i < allBoxArr.length; i++) {\r\n            var distance = cc.v2(allBoxArr[i].position).sub(cc.v2(this.node.position)).mag()\r\n            if (distance < 10) {\r\n                this.setDir(cc.v2(0, 0))\r\n                return;\r\n            }\r\n            if (distance < minDis) {\r\n                if (GameApp.dataManager.globalData.gasConfig != null) {\r\n                    let dirDistance = cc.v2(GameApp.dataManager.globalData.gasConfig.safePosition).sub(cc.v2(allBoxArr[i].position)).mag()\r\n                    if (dirDistance > GameApp.dataManager.globalData.gasConfig.gasCircle / 2) {\r\n                        continue\r\n                    }\r\n                }\r\n                minDis = distance\r\n                index = i\r\n            }\r\n        }\r\n        var dir = cc.v2(0, 0)\r\n        if (index == -1) {\r\n            this._mapNoBox = true\r\n        } else {\r\n            var aimBox = allBoxArr[index]\r\n            dir = cc.v2(aimBox.position).sub(cc.v2(this.node.position)).normalize()\r\n        }\r\n        this.setDir(dir)\r\n    },\r\n    setSpeedType(_type) {\r\n        if (this._isDie) return;\r\n        if (this._speedType != _type) {\r\n            this._speedType = _type\r\n\r\n            var arr = this._choosedSkinId < 21 ? ['await', 'run2', 'run2'] : ['await_fight_1', 'run', 'run']\r\n            this.roleAnim.setAnimation(0, arr[_type], true)\r\n        }\r\n    },\r\n    setDir(_dir) {\r\n        if (this._isDie) return;\r\n        if (_dir && _dir.mag() == 0) {\r\n            this.setSpeedType(SpeedType.STOP)\r\n        } else {\r\n            this.setSpeedType(SpeedType.FAST)\r\n        }\r\n        this.moveDir = _dir\r\n        if (this._isAim) return\r\n        this.setGunDir(_dir)\r\n    },\r\n    setGunDir(_dir) {\r\n        if (_dir == null) {\r\n            _dir = this.moveDir\r\n        }\r\n        this._gunDir = _dir\r\n        this._aimDir = _dir\r\n        if (!this._haveGun) return\r\n        this.gunNode.rotation = -cc.misc.radiansToDegrees(\r\n            Math.atan2(_dir.y, _dir.x)\r\n        );\r\n        let theAngle = 90 - this.gunNode.rotation\r\n\r\n        if (theAngle > 180 || theAngle < 0) {\r\n            this.gunNode.scaleY = -1\r\n        } else {\r\n            this.gunNode.scaleY = 1\r\n        }\r\n    },\r\n    update(dt) {\r\n        if (this._isDie) return;\r\n        this.doParser(dt)\r\n        switch (this._speedType) {\r\n            case SpeedType.STOP:\r\n                this._moveSpeed = this.stopSpeed;\r\n                break;\r\n            case SpeedType.NORMAL:\r\n                this._moveSpeed = this.normalSpeed;\r\n                // this._moveSpeed = this.fastSpeed;\r\n                break;\r\n            case SpeedType.FAST:\r\n                this._moveSpeed = this._curSpeed + Math.floor(this._curSpeed * this.equipItemAttr[EquipType.speed]);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.move(dt);\r\n\r\n        if (this._isProtect) return;\r\n\r\n        this._aimTimer -= dt\r\n        if (this._aimTimer < 0) {\r\n            this._aimTimer = this._aimInterval\r\n            this.aimToNearest()\r\n        }\r\n        if (this._isAim) {\r\n            this._shootTimer -= dt\r\n            if (this._shootTimer < 0 && !this._reloadFlag) {\r\n                this._shootTimer = this._shootInterval\r\n                this.shoot()\r\n            }\r\n        }\r\n\r\n        if (this._reloadFlag) {\r\n            this._reloadTimer -= dt\r\n            if (this._reloadFlag && this._reloadTimer < 0) {\r\n                this._reloadFlag = false\r\n                this.reloadAmo()\r\n            }\r\n        }\r\n\r\n    },\r\n    lateUpdate(dt) {\r\n        // this.mainC.node.setPosition(this.player.position)\r\n        // this.testC.node.setPosition(this.player.position)\r\n        // GameApp.uiManager.mapCamera.node.setPosition(this.node.position)\r\n        // this.mipmapCamera.node.setPosition(this.node.position)\r\n    },\r\n    aimToNearest() {\r\n        // return\r\n        if (!this._haveGun) {\r\n            this.gunData.range = 400\r\n        }\r\n        var allRoleArr = GameApp.dataManager.globalData.allRoleArr.concat()\r\n        // for (let i = 0; i < allRoleArr.length; i++) {\r\n        //     if (allRoleArr[i].skinData.skinid == this.skinData.skinid) {\r\n        //         allRoleArr.splice(i, 1)\r\n        //         break\r\n        //     }\r\n        // }\r\n        Tools.removeArray(allRoleArr, this.getComponent(\"Enemy\"))\r\n        var minDis = 1000000;\r\n        var index = -1;\r\n        for (let i = 0; i < allRoleArr.length; i++) {\r\n            var distance = cc.v2(allRoleArr[i].node.position).sub(cc.v2(this.node.position)).mag()\r\n            if (distance < minDis && distance < this.gunData.range * 1.4) {\r\n                minDis = distance\r\n                index = i\r\n            }\r\n        }\r\n        var dir = null\r\n        if (index == -1) {\r\n            this._isAim = false\r\n        } else {\r\n            var aimEnemy = allRoleArr[index].node\r\n            dir = cc.v2(aimEnemy.position).sub(cc.v2(this.node.position)).normalize()\r\n            this._isAim = true\r\n        }\r\n        this.setGunDir(dir)\r\n    },\r\n\r\n    shoot() {\r\n        if (!this._haveGun) return\r\n        if (this.reduceAmo()) {\r\n            this.gunAnim.setAnimation(0, 'attack_' + this.gunData.skinname, false)\r\n            var power = Math.ceil(this.gunData.power * (this._curDamage + this.equipItemAttr[EquipType.damage]))\r\n            var isCrit = false\r\n            if (Tools.isCrit(this._curCrit + this.equipItemAttr[EquipType.crit])) {\r\n                power *= 2\r\n                isCrit = true\r\n            }\r\n\r\n            if (this.gunData.weaponid == 1002) {\r\n                GameApp.uiManager.isInMapSight(this.node) && GameApp.audioManager.playEffect('shot_shoot', 0.3, false)\r\n                var bullet1 = cc.instantiate(this.bulletPrefab)\r\n                var bullet2 = cc.instantiate(this.bulletPrefab)\r\n                var bullet3 = cc.instantiate(this.bulletPrefab)\r\n                let bulletPos = this.node.parent.parent.convertToNodeSpaceAR(this.gunNode.children[0].convertToWorldSpaceAR(cc.v2(0, 0)))\r\n                bullet1.parent = bullet2.parent = bullet3.parent = this.node.parent.parent\r\n                bullet1.setPosition(bulletPos)\r\n                bullet2.setPosition(bulletPos)\r\n                bullet3.setPosition(bulletPos)\r\n                bullet1.rotation = this.gunNode.rotation\r\n                bullet2.rotation = this.gunNode.rotation + 30\r\n                bullet3.rotation = this.gunNode.rotation - 30\r\n                var cloneGunDir = cc.v2(this._gunDir)\r\n                var bulletC1 = bullet1.getComponent('Bullet')\r\n                bulletC1._belongTag = this._pbc.tag\r\n                bulletC1._belongName = this.thisName\r\n                bulletC1._flyDir = cloneGunDir\r\n                bulletC1.init(this.gunData, power, isCrit)\r\n                var bulletC2 = bullet2.getComponent('Bullet')\r\n                bulletC2._belongTag = this._pbc.tag\r\n                bulletC2._belongName = this.thisName\r\n                bulletC2._flyDir = cloneGunDir.rotate(-cc.misc.degreesToRadians(30))\r\n                bulletC2.init(this.gunData, power, isCrit)\r\n                var bulletC3 = bullet3.getComponent('Bullet')\r\n                bulletC3._belongTag = this._pbc.tag\r\n                bulletC3._belongName = this.thisName\r\n                bulletC3._flyDir = cloneGunDir.rotate(-cc.misc.degreesToRadians(-30))\r\n                bulletC3.init(this.gunData, power, isCrit)\r\n            } else {\r\n                if (this.gunData.weaponid == 1003) {\r\n                    GameApp.uiManager.isInMapSight(this.node) && GameApp.audioManager.playEffect('charge_shoot', 0.3, false)\r\n                } else if (this.gunData.weaponid == 1005) {\r\n                    GameApp.uiManager.isInMapSight(this.node) && GameApp.audioManager.playEffect('missile_shoot', 0.3, false)\r\n                }\r\n                var bullet = cc.instantiate(this.bulletPrefab)\r\n                let bulletPos = this.node.parent.parent.convertToNodeSpaceAR(this.gunNode.children[0].convertToWorldSpaceAR(cc.v2(0, 0)))\r\n                bullet.parent = this.node.parent.parent\r\n                bullet.setPosition(bulletPos)\r\n                bullet.rotation = this.gunNode.rotation\r\n                var bulletC = bullet.getComponent('Bullet')\r\n                bulletC._belongTag = this._pbc.tag\r\n                bulletC._belongName = this.thisName\r\n                bulletC._flyDir = this._gunDir\r\n                bulletC.init(this.gunData, power, isCrit)\r\n            }\r\n            this.updateAmoShow()\r\n        } else {\r\n            this.reload()\r\n        }\r\n        if (this._curAmoNum == 0) {\r\n            this.reload()\r\n        }\r\n    },\r\n    reduceAmo() {\r\n        var a = this._curAmoNum - 1\r\n        if (a < 0) {\r\n            this._curAmoNum = 0\r\n            this.updateAmoShow()\r\n            return false\r\n        } else {\r\n            this._curAmoNum = a\r\n            this.updateAmoShow()\r\n            return true\r\n        }\r\n    },\r\n    reload() {\r\n        if (!this._haveGun) return\r\n        if (this._reloadFlag) return;\r\n        GameApp.uiManager.isInMapSight(this.node) && GameApp.audioManager.playEffect('reload', 0.6)\r\n        this.gunAnim.setAnimation(0, 'reload_' + this.gunData.skinname, false)\r\n        this._reloadTimer = this._reloadInterval\r\n        this._reloadFlag = true\r\n    },\r\n    reloadAmo() {\r\n        this._curAmoNum = this._maxAmoNum\r\n        this.updateAmoShow()\r\n    },\r\n    updateAmoShow() {\r\n        this.amoBar.progress = this._curAmoNum / this._maxAmoNum\r\n    },\r\n    updateHpShow() {\r\n        this.hpBar.progress = this._curHp / this._maxHp\r\n    },\r\n    equipWeapon(_kind) {\r\n        GameApp.uiManager.isInMapSight(this.node) && GameApp.audioManager.playEffect('pick_item', 0.6)\r\n        this.gunData = GameApp.dataManager.jsonData.WeaponData[_kind]\r\n        this._shootInterval = this.gunData.shootdelay\r\n        this._reloadInterval = this.gunData.reloaddelay\r\n        this._maxAmoNum = this.gunData.clipnum\r\n        this.reloadAmo()\r\n        this.gunNode.active = true\r\n        if (_kind < 3) {\r\n            this.gunAnim.skeletonData = GameApp.uiManager.gunSkinDataGroup[0]\r\n        } else {\r\n            this.gunAnim.skeletonData = GameApp.uiManager.gunSkinDataGroup[1]\r\n        }\r\n        this.gunAnim.setSkin(this.gunData.skinname)\r\n        this._haveGun = true\r\n        this.setGunDir(this.moveDir)\r\n        // this.gunAnim.setAnimation(0, 'attack_' + this.gunData.skinname, false)\r\n    },\r\n    getItem() {\r\n\r\n    },\r\n    onBeginContact(contact, self, other) {\r\n        if (this._isDie) return\r\n        if (self.tag == Tags.empty) return;\r\n        if (other.tag == Tags.item) {\r\n            var groundItem = other.node.getComponent('GroundItem')\r\n            if (groundItem.itemType._type == ItemType.weapon) {\r\n                var _kind = groundItem.itemType._kind\r\n                if (!this._haveGun) {\r\n                    Tools.removeArray(GameApp.dataManager.globalData.allGunArr, other.node)\r\n                    this.equipWeapon(_kind)\r\n                    other.node.destroy()\r\n                } else {\r\n                    // let _param = {\r\n                    //     _type: ItemType.weapon,\r\n                    //     _kind: GameApp.dataManager.jsonData.WeaponData.indexOf(this.gunData)\r\n                    // }\r\n                    // groundItem.init(_param)\r\n                }\r\n                // this.equipWeapon(_kind)\r\n            } else if (groundItem.itemType._type == ItemType.item) {\r\n                this.getItem()\r\n            }\r\n        } else if (other.tag == Tags.bullet) {\r\n            if (!GameApp.dataManager.globalData.isInGame) return;\r\n            var bC = other.node.getComponent('Bullet')\r\n            if (bC._belongTag == self.tag) return\r\n            if (other.node == this.lastHitBullet) return;\r\n            this.lastHitBullet = other.node\r\n            this.beDamage(bC._power, bC._belongTag, bC._belongName, bC._isCrit, bC.gunData.weaponid)\r\n        } else if (other.tag == Tags.collider) {\r\n            this._isBlock = true\r\n            this.moveDir && this.moveDir.rotateSelf(cc.misc.degreesToRadians(Tools.randomNum(90, 180)))\r\n            this.scheduleOnce(() => {\r\n                this._isBlock = false\r\n            }, 0.5)\r\n        } else if (other.tag == Tags.boom) {\r\n            this.beDamage(999, -2)\r\n        }\r\n    },\r\n    reduceHp(_num) {\r\n        var a = this._curHp - _num\r\n        if (a <= 0) {\r\n            this._curHp = 0\r\n            this.updateHpShow()\r\n            return false\r\n        } else {\r\n            this._curHp = a\r\n            this.updateHpShow()\r\n            return true\r\n        }\r\n    },\r\n    beDamage(_power, _belongIndex, _belongName, _isCrit, _weaponid) {\r\n        GameApp.uiManager.isInMapSight(this.node) && GameApp.uiManager.showGameObject(\"InfoLabel\", (node) => {\r\n            var originPos = node.parent.convertToNodeSpaceAR(this.node.convertToWorldSpaceAR(cc.v2(0.5, 0.5)))\r\n            node.setPosition(originPos)\r\n            var _isDef = Math.ceil(_power * this._curDef) + Math.ceil(_power * this.equipItemAttr[EquipType.def])\r\n            _power -= _isDef\r\n            var str = \"<color=red>-\" + _power + \"</color>\"\r\n            if (_isCrit) {\r\n                str = \"<color=red>暴击-\" + _power + \"</color>\"\r\n            }\r\n            if (_isDef) {\r\n                str += \"<color=#0fffff>减伤\" + _isDef + \"</color>\"\r\n            }\r\n            node.getComponent(cc.RichText).string = \"<b>\" + str + \"</b>\"\r\n\r\n            let desPos = cc.v2(Tools.randomNum(60, 100), Tools.randomNum(60, 100))\r\n            let bezier = [originPos, cc.v2(originPos.x + desPos.x - 20, originPos.y + desPos.y + 20), originPos.add(desPos)];\r\n            let seq = cc.sequence(cc.spawn(cc.fadeIn(0.2), cc.scaleTo(0.3, 1.5), cc.bezierTo(0.3, bezier)), cc.delayTime(0.5), cc.fadeOut(0.3), cc.callFunc(() => {\r\n                node.destroy()\r\n            }))\r\n            node.runAction(seq)\r\n        }, this.node.parent.parent)\r\n        // console.log(GameApp.dataManager.globalData.allRoleArr)\r\n        if (this.reduceHp(_power)) {\r\n\r\n        } else {\r\n            GameApp.uiManager.isInMapSight(this.node) && GameApp.audioManager.playEffect('maleDeath', 0.5)\r\n            this.node.parent = GameApp.uiManager.getGame(\"GameMap\").getChildByName(\"DeadObjectNode\")\r\n            this._pbc.enabled = false\r\n            this._isDie = true\r\n            if (_belongIndex == -1) {\r\n                GameApp.uiManager.showToast(this.thisName + \" 被毒出局\")\r\n            } else if (_belongIndex == -2) {\r\n                GameApp.uiManager.showToast(this.thisName + \" 被轰炸出局\")\r\n            } else {\r\n                var killNum = GameApp.dataManager.addKillNum(_belongIndex, _belongName)\r\n                if (_belongName == GameApp.dataManager.userData.playerName) {\r\n                    _belongName = \"<color=#0fffff>\" + _belongName + \"</color>\"\r\n                }\r\n                if (killNum > 1) {\r\n                    var soundIndex = killNum > 5 ? 5 : killNum\r\n                    GameApp.audioManager.playEffect('kill' + soundIndex, 0.5)\r\n                    GameApp.uiManager.showToast(_belongName, null, killNum)\r\n                } else {\r\n                    GameApp.uiManager.showToast(_belongName + \" 击杀了 \" + this.thisName)\r\n                }\r\n                //任务相关\r\n                if (_belongIndex == 1) {\r\n                    cc.log(\"玩家杀人了\")\r\n                    GameApp.dataManager.addActivityNum(1, 1)\r\n                    if (_weaponid == 1102) {\r\n                        GameApp.dataManager.addActivityNum(0, 1)\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._haveGun) {\r\n                var theParentC = GameApp.uiManager.gameRoot.children[0].getComponent(\"GameMap\")\r\n                GameApp.uiManager.showGameObject(\"GroundItem\", (node) => {\r\n                    let ddd = theParentC.allGunNode.convertToNodeSpaceAR(this.node.convertToWorldSpaceAR(cc.v2(0, 0)))\r\n                    node.parent = theParentC.allGunNode\r\n                    node.setPosition(ddd)\r\n                    let _param = {\r\n                        _type: ItemType.weapon,\r\n                        _kind: Tools.getIndex(GameApp.dataManager.jsonData.WeaponData, this.gunData)\r\n                    }\r\n                    // console.log(_param._kind)\r\n                    node.getComponent('GroundItem').init(_param)\r\n                    GameApp.dataManager.globalData.allGunArr.push(node)\r\n                })\r\n            }\r\n            this.node.stopActionByTag(1)\r\n            // for (var i in GameApp.dataManager.globalData.allRoleArr) {\r\n            //     if (GameApp.dataManager.globalData.allRoleArr[i].skinData.skinid == this.skinData.skinid) {\r\n            //         GameApp.dataManager.globalData.allRoleArr.splice(i, 1)\r\n            //         break;\r\n            //     }\r\n            // }\r\n            var arr = this._choosedSkinId < 21 ? ['dead'] : ['dead2']\r\n            this.roleAnim.setAnimation(0, arr[0], false)\r\n            this.gunNode.active = false\r\n            Tools.removeArray(GameApp.dataManager.globalData.allRoleArr, this.node.getComponent('Enemy'))\r\n            GameApp.eventManager.emit(EventNames.EVENT_SHOW_ALLROLENUM_UI)\r\n        }\r\n    },\r\n\r\n});\r\n","var EventEmitter = require('events').EventEmitter;\r\n\r\ncc.Class({\r\n    name: 'EventManager',\r\n\r\n    properties: {\r\n        _eventEmitter: EventEmitter,\r\n    },\r\n\r\n    ctor: function () {\r\n        this._eventEmitter = new EventEmitter();\r\n        this._eventEmitter.setMaxListeners(0);\r\n    },\r\n\r\n    on: function (eventName, func) {\r\n        this._eventEmitter.on(eventName, func);\r\n        // console.log(\"加\")\r\n        // console.log(this._eventEmitter)\r\n    },\r\n\r\n    once: function (eventName, func) {\r\n        this._eventEmitter.once(eventName, func);\r\n    },\r\n\r\n    emit: function (eventName, self, param) {\r\n        if (self && param) {\r\n            this._eventEmitter.emit(eventName, self, param);\r\n            return;\r\n        }\r\n        if (self) {\r\n            this._eventEmitter.emit(eventName, self);\r\n            return;\r\n        }\r\n\r\n        this._eventEmitter.emit(eventName);\r\n    },\r\n\r\n    removeListener: function (eventName, func) {\r\n        if (func) {\r\n            return this._eventEmitter.removeListener(eventName, func);\r\n        }\r\n        // console.log(\"减\")\r\n        // console.log(this._eventEmitter)\r\n        this._eventEmitter.removeAllListeners(eventName);\r\n    },\r\n});","const AudioManager = require('AudioManager');\r\nconst UIManager = require('UIManager');\r\nconst DataManager = require('DataManager');\r\nconst EventManager = require('EventManager');\r\n\r\nlet GameApp = cc.Class({\r\n    properties: {\r\n        eventManager: EventManager,\r\n        dataManager: DataManager,\r\n        audioManager: AudioManager,\r\n        // httpManager: HttpManager,\r\n        // socketManager: SocketManager,\r\n        uiManager: UIManager,\r\n\r\n    },\r\n\r\n    ctor() {\r\n        this.eventManager = new EventManager();\r\n        this.dataManager = new DataManager();\r\n        this.audioManager = new AudioManager();\r\n        // this.httpManager = new HttpManager();\r\n        // this.socketManager = new SocketManager();\r\n        this.uiManager = null;\r\n        // this.protocol = require(\"Protocol\");\r\n    },\r\n\r\n    Start() {\r\n        // this.protocol.Initialize();\r\n        // cc.debug.setDisplayStats(false);   // 关闭Creator调试的时候左下角的fps面板\r\n        // var manager = cc.director.getCollisionManager();  // 获取碰撞检测类\r\n        // manager.enabled = true   //开启碰撞检测\r\n        // manager.enabledDebugDraw = true //显示碰撞检测区域\r\n    },\r\n});\r\nif (!CC_EDITOR) {\r\n    console.log('初始化GameApp');\r\n    window.GameApp = new GameApp();\r\n    window.GameApp.Start();\r\n}\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        tiledMap: cc.TiledMap,\r\n        objectPrefab: cc.Prefab,\r\n        colliderPrefab: cc.Prefab,\r\n        groundItemPrefab: cc.Prefab,\r\n\r\n        allObjectNode: cc.Node,\r\n        allColliderNode: cc.Node,\r\n        allGunNode: cc.Node,\r\n        otherGunPos: cc.Node,\r\n        enemySpawnPosGroupNode: cc.Node,\r\n        paratrooperNode: cc.Node,\r\n        cloudNode: cc.Node,\r\n\r\n        mapAtlas: cc.SpriteAtlas,\r\n\r\n        _timer0: 0.1,\r\n        _timer: 0.1,\r\n        readyToSort: false,\r\n\r\n        gasPanel: cc.Node,\r\n        dropPanel: cc.Node,\r\n        boomPanel: cc.Node,\r\n        safeCircle: 10240,\r\n        safePosition: cc.v2(0, 0),\r\n        _gasState: 0,\r\n        safeCircle: 0,\r\n        _dropTime: 0,\r\n        _mipBoxGroup: [],\r\n    },\r\n    onLoad() {\r\n        GameApp.eventManager.on(EventNames.EVENT_UPDATE_GAS_SHOW, this.updateGasShow.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_DROP_BOX, this.dropBox.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_NOTYFY_BOX_DISMISS, this.notifyBoxDismiss.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_DROP_BOOM, this.dropBoom.bind(this))\r\n\r\n        this.initMapShow()\r\n        // this.showCloud()\r\n        // this.showPlayer()\r\n        // this.showEnemy()\r\n    },\r\n    onDestroy() {\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_GAS_SHOW)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_DROP_BOX)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_NOTYFY_BOX_DISMISS)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_DROP_BOOM)\r\n\r\n    },\r\n    init(_chooseType, _bili, _speedUpJump) {\r\n        this.showCloud(_speedUpJump)\r\n        this.showParatrooperPlayer(_chooseType, _bili)\r\n        this.schedule(() => {\r\n            this.showParatrooperEnemy(_chooseType, Tools.randomNum(0, 100) / 100)\r\n        }, 0.1, 29, 0.5)\r\n        this.initGas()\r\n    },\r\n    update(dt) {\r\n        this.gasCountDown(dt)\r\n        if (!this.readyToSort) return;\r\n        this._timer -= dt\r\n        if (this._timer < 0) {\r\n            this._timer = this._timer0\r\n            this.sortAll()\r\n        }\r\n    },\r\n    initGas() {\r\n        this.gasPanel.children[1].width = this.gasPanel.children[1].height = 10240 * (300 / 204)\r\n        // this.gasPanel.children[0].width = this.gasPanel.children[0].height = this.gasPanel.children[1].width / 0.98\r\n        this.gasPanel.children[1].runAction(cc.sequence(cc.fadeTo(1, 200), cc.fadeTo(0.8, 255)).repeatForever())\r\n    },\r\n    updateGasShow(_state, event) {\r\n        this._gasState = _state\r\n        this.safeCircle = 10240 * (event.safeCircle / 204)\r\n        this.safePosition.x = 10240 * (event.safePosition.x / 204)\r\n        this.safePosition.y = 10240 * (event.safePosition.y / 204)\r\n\r\n        GameApp.dataManager.globalData.gasConfig = {\r\n            safePosition: this.gasPanel.children[1].position,\r\n            gasCircle: this.gasPanel.children[1].width\r\n        }\r\n    },\r\n    gasCountDown(dt) {\r\n        if (this.safeCircle < 0) {\r\n            return\r\n        }\r\n        if (this._gasState == 2) {\r\n            // console.log(this.gasPanel.children[1].width)\r\n            if (this.gasPanel.children[1].width <= this.safeCircle) {\r\n                this.gasPanel.children[1].width = this.gasPanel.children[1].height = this.safeCircle\r\n                // this.gasPanel.children[0].width = this.gasPanel.children[0].height = this.safeCircle / 0.98\r\n                if (this.safeCircle <= 0) {\r\n                    this.safeCircle -= 50//为了变成负数\r\n                    return\r\n                }\r\n                return\r\n            }\r\n\r\n            let delt = dt * ((10 / 204) * 10240)\r\n            this.gasPanel.children[1].width -= delt\r\n            this.gasPanel.children[1].height -= delt\r\n            // this.gasPanel.children[0].width -= delt\r\n            // this.gasPanel.children[0].height -= delt\r\n            GameApp.dataManager.globalData.gasConfig = {\r\n                safePosition: this.gasPanel.children[1].position,\r\n                gasCircle: this.gasPanel.children[1].width\r\n            }\r\n            if (this.safeCircle == 50) return\r\n            if (!Tools.isIntersect(this.gasPanel.children[1].position, this.gasPanel.children[1].width / 2, this.safePosition, this.safeCircle / 2)) {\r\n\r\n            } else {\r\n                if (Math.abs(this.gasPanel.children[1].width - this.safeCircle) > 0.01)  //外圈和内圈圆心重合,半径相同\r\n                {\r\n                    // k = y/x\r\n                    // y = kx\r\n                    // x^2+y^2 = 1\r\n                    // x^2 = 1/(k^2+1)\r\n                    var k = (this.gasPanel.children[1].y - this.safePosition.y) / (this.gasPanel.children[1].x - this.safePosition.x);\r\n\r\n                    var x_off = delt * parseFloat(Math.sqrt(1 / (k * k + 1)))\r\n\r\n                    // 通过mPoint_outer和mPoint_inner的x坐标来判断此时外圆圆心要移动的是该 + x_off（x轴偏移量）还是 -x_off\r\n                    this.gasPanel.children[1].x += 1 * (this.gasPanel.children[1].x < this.safePosition.x ? 1 : -1) * x_off;\r\n                    // 知道变化后的外圈圆心的x坐标，和直线方程来求对应的y坐标\r\n                    this.gasPanel.children[1].y = k * (this.gasPanel.children[1].x - this.safePosition.x) + this.safePosition.y;\r\n                    // // 通过mPoint_outer和mPoint_inner的x坐标来判断此时外圆圆心要移动的是该 + x_off（x轴偏移量）还是 -x_off\r\n                    // this.gasPanel.children[0].x += 1 * (this.gasPanel.children[1].x < this.safePosition.x ? 1 : -1) * x_off;\r\n                    // // 知道变化后的外圈圆心的x坐标，和直线方程来求对应的y坐标\r\n                    // this.gasPanel.children[0].y = k * (this.gasPanel.children[1].x - this.safePosition.x) + this.safePosition.y;\r\n\r\n                    GameApp.dataManager.globalData.gasConfig = {\r\n                        safePosition: this.gasPanel.children[1].position,\r\n                        gasCircle: this.gasPanel.children[1].width\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    dropBox(_thePos, _index) {\r\n        _thePos = (_thePos.div(204)).mul(10240)\r\n        GameApp.uiManager.showGameObject(\"DropBox\", (node) => {\r\n            this._mipBoxGroup.push(node)\r\n            GameApp.dataManager.globalData.allBoxArr.push(node)\r\n            node.setPosition(_thePos)\r\n            node.getComponent(\"DropBox\").init(Tools.getIndex(this._mipBoxGroup, node))\r\n            GameApp.eventManager.emit(EventNames.EVENT_NOTIFY_ENEMY_MAPBOX)\r\n        }, this.dropPanel)\r\n    },\r\n    notifyBoxDismiss(_index) {\r\n        Tools.removeArray(GameApp.dataManager.globalData.allBoxArr, this._mipBoxGroup[parseInt(_index)])\r\n        this._mipBoxGroup[parseInt(_index)].destroy()\r\n    },\r\n    dropBoom(_thePos, _theWidth) {\r\n        _thePos = (_thePos.div(204)).mul(10240)\r\n        _theWidth = 10240 * _theWidth / 204\r\n        let boomArr = []\r\n        for (let i = 0; i < 10; i++) {\r\n            boomArr.push(Tools.pointOfRandom(_thePos, _theWidth / 2, 0))\r\n        }\r\n        this.dropItBoom(boomArr, 0)\r\n    },\r\n    dropItBoom(boomArr, _index) {\r\n        if (_index >= boomArr.length) {\r\n            GameApp.eventManager.emit(EventNames.EVENT_NOTYFY_BOOM_DISMISS)\r\n            return\r\n        }\r\n        var _delay = Tools.randomNum(0, 2, true)\r\n        this.node.runAction(cc.sequence(cc.delayTime(_delay), cc.callFunc(() => {\r\n            GameApp.uiManager.showGameObject(\"Boom\", (node) => {\r\n                // console.log(boomArr[_index])\r\n                node.setPosition(boomArr[_index])\r\n                node.children[0].getComponent(sp.Skeleton).setAnimation(0, \"animation\", true)\r\n                node.children[0].runAction(cc.sequence(cc.moveBy(1, cc.v2(0, -220)), cc.fadeOut(0)))\r\n                node.children[1].runAction(cc.sequence(cc.delayTime(1), cc.callFunc(() => {\r\n                    GameApp.audioManager.playEffect('boom')\r\n                    var coli = node.getComponent(cc.PhysicsBoxCollider)\r\n                    coli.enabled = true\r\n                    var theAnim = node.children[1].getComponent(sp.Skeleton)\r\n                    theAnim.setAnimation(0, \"boom1\", false)\r\n                    theAnim.setCompleteListener(() => {\r\n                        coli.enabled = false\r\n                        node.destroy()\r\n                    })\r\n                })))\r\n            }, this.boomPanel)\r\n            this.dropItBoom(boomArr, ++_index)\r\n        })))\r\n\r\n    },\r\n    initMapShow() {\r\n        GameApp.dataManager.globalData.allRoleArr = []\r\n        GameApp.dataManager.globalData.allGunArr = []\r\n        // this.node.children[2].active = true\r\n        let wallLayer = this.tiledMap.getLayer(\"wall\")\r\n        this.tiledMap.getObjectGroup(\"dynamic\")._objects.forEach(element => {\r\n            let obj = cc.instantiate(this.objectPrefab)\r\n            obj.getComponent(cc.Sprite).spriteFrame = this.mapAtlas.getSpriteFrame(element.name.split('.')[0])\r\n            obj.parent = this.allColliderNode\r\n            let desPos = wallLayer.getPositionAt(this.getTilePos(cc.v2(element.x, element.y)))\r\n            obj.setPosition(desPos)\r\n            let ddd = this.allObjectNode.convertToNodeSpaceAR(obj.convertToWorldSpaceAR(cc.v2(0, 0)))\r\n            obj.parent = this.allObjectNode\r\n            obj.setPosition(ddd)\r\n        });\r\n        this.tiledMap.getObjectGroup(\"collision\")._objects.forEach(element => {\r\n            let obj = cc.instantiate(this.colliderPrefab)\r\n            let coli = obj.getComponent(cc.PhysicsBoxCollider)\r\n            coli.size = cc.size(element.width, element.height)\r\n            coli.offset = cc.v2(element.width / 2, -element.height / 2)\r\n            coli.apply()\r\n            this.allColliderNode.addChild(obj)\r\n            obj.setPosition(cc.v2(element.x, element.y))\r\n            coli.tag = Tags.collider\r\n        });\r\n    },\r\n    showParatrooperPlayer(_chooseType, _bili) {\r\n        GameApp.uiManager.showGameObject('ParatrooperPlayer', (node) => {\r\n            var pC = node.getComponent('ParatrooperPlayer')\r\n            pC.init(this.enemySpawnPosGroupNode.children)\r\n            GameApp.uiManager.getUI(\"GameUI\").getComponent(\"GameUI\").joystick.getComponent(\"Joystick\").player = pC\r\n            var theX = 0\r\n            var theY = 0\r\n            if (_chooseType == 0) {\r\n                theX = (this.enemySpawnPosGroupNode.children[3].x - this.enemySpawnPosGroupNode.children[0].x) * _bili - this.enemySpawnPosGroupNode.children[3].x\r\n                theY = (this.enemySpawnPosGroupNode.children[3].y - this.enemySpawnPosGroupNode.children[0].y) * _bili - this.enemySpawnPosGroupNode.children[3].y\r\n            } else {\r\n                theX = (this.enemySpawnPosGroupNode.children[1].x - this.enemySpawnPosGroupNode.children[2].x) * _bili - this.enemySpawnPosGroupNode.children[1].x\r\n                theY = (this.enemySpawnPosGroupNode.children[1].y - this.enemySpawnPosGroupNode.children[2].y) * _bili - this.enemySpawnPosGroupNode.children[1].y\r\n            }\r\n            node.setPosition(theX, theY)\r\n        }, this.paratrooperNode)\r\n    },\r\n    showParatrooperEnemy(_chooseType, _bili) {\r\n        GameApp.uiManager.showGameObject('ParatrooperEnemy', (node) => {\r\n            node.getComponent('ParatrooperEnemy').init(this.enemySpawnPosGroupNode.children)\r\n            var theX = 0\r\n            var theY = 0\r\n            if (_chooseType == 0) {\r\n                theX = (this.enemySpawnPosGroupNode.children[3].x - this.enemySpawnPosGroupNode.children[0].x) * _bili - this.enemySpawnPosGroupNode.children[3].x\r\n                theY = (this.enemySpawnPosGroupNode.children[0].y - this.enemySpawnPosGroupNode.children[3].y) * _bili - this.enemySpawnPosGroupNode.children[0].y\r\n            } else {\r\n                theX = (this.enemySpawnPosGroupNode.children[1].x - this.enemySpawnPosGroupNode.children[2].x) * _bili - this.enemySpawnPosGroupNode.children[1].x\r\n                theY = (this.enemySpawnPosGroupNode.children[1].y - this.enemySpawnPosGroupNode.children[2].y) * _bili - this.enemySpawnPosGroupNode.children[1].y\r\n            }\r\n            node.setPosition(theX, theY)\r\n            var desDir = cc.v2(0, 10).rotate(cc.misc.radiansToDegrees(Tools.randomNum(0, 360)))\r\n            // var randTime = Tools.randomNum(2, 4)\r\n            node.runAction(cc.repeatForever(cc.moveBy(0.1, desDir)))\r\n\r\n        }, this.paratrooperNode)\r\n    },\r\n    showCloud(_speedUpJump) {\r\n        var _jumpTime = 2\r\n        if (_speedUpJump) {\r\n            _jumpTime = 1\r\n        }\r\n        GameApp.uiManager.mapCamera.zoomRatio = 0.3\r\n        var each0_05 = 0.3 / (3.6 + _jumpTime * 3) / 100 * 5\r\n        var act = cc.sequence(cc.callFunc(() => {\r\n            if (GameApp.uiManager.mapCamera.zoomRatio >= 0.8) {\r\n                GameApp.uiManager.mapCamera.zoomRatio = 0.8\r\n                return\r\n            }\r\n            GameApp.uiManager.mapCamera.zoomRatio += each0_05//0.0015625\r\n        }), cc.delayTime(0.05)).repeatForever()\r\n        this.cloudNode.runAction(act)\r\n        _jumpTime = _jumpTime ? _jumpTime : 2\r\n        this.cloudNode.runAction(cc.sequence(cc.callFunc(() => {\r\n            this.cloudNode.children[0].active = true\r\n        }), cc.delayTime(0.3), cc.callFunc(() => {\r\n            GameApp.audioManager.playEffect('skydivingBegin', null, 1)\r\n            this.cloudNode.children[1].active = true\r\n        }), cc.delayTime(0.3), cc.callFunc(() => {\r\n            this.cloudNode.children[2].active = true\r\n        }), cc.delayTime(0.3), cc.callFunc(() => {\r\n            this.cloudNode.children[3].active = true\r\n        }), cc.delayTime(_jumpTime), cc.callFunc(() => {\r\n            GameApp.audioManager.playEffect('skydivingWind', null, 2)\r\n            this.cloudNode.children[0].active = false\r\n        }), cc.delayTime(0.3), cc.callFunc(() => {\r\n            this.cloudNode.children[1].active = true\r\n        }), cc.delayTime(0.3), cc.callFunc(() => {\r\n            this.cloudNode.children[2].active = true\r\n        }), cc.delayTime(0.3), cc.callFunc(() => {\r\n            this.cloudNode.children[3].active = true\r\n        }), cc.delayTime(_jumpTime), cc.callFunc(() => {\r\n            this.cloudNode.children[0].active = false\r\n        }), cc.delayTime(0.3), cc.callFunc(() => {\r\n            this.cloudNode.children[1].active = false\r\n        }), cc.delayTime(0.3), cc.callFunc(() => {\r\n            this.cloudNode.children[2].active = true\r\n        }), cc.delayTime(0.3), cc.callFunc(() => {\r\n            this.cloudNode.children[3].active = true\r\n        }), cc.delayTime(_jumpTime), cc.callFunc(() => {\r\n            this.cloudNode.children[0].active = false\r\n        }), cc.delayTime(0.3), cc.callFunc(() => {\r\n            this.cloudNode.children[1].active = false\r\n        }), cc.delayTime(0.3), cc.callFunc(() => {\r\n            this.cloudNode.children[2].active = false\r\n        }), cc.delayTime(0.3), cc.callFunc(() => {\r\n            this.cloudNode.children[3].active = true\r\n        }), cc.delayTime(_jumpTime), cc.callFunc(() => {\r\n            // console.log(GameApp.uiManager.mapCamera.zoomRatio)\r\n            this.gameBegin(_speedUpJump)\r\n        })))\r\n    },\r\n    gameBegin(_speedUpJump) {\r\n        GameApp.dataManager.globalData.isInGame = true\r\n        this.cloudNode.destroy()\r\n        GameApp.uiManager.mapCamera.zoomRatio = 0.8\r\n        GameApp.audioManager.playEffect('skydivingToGround', null, 1)\r\n        GameApp.eventManager.emit(EventNames.EVENT_GAME_BEGIN)\r\n        var landUpPos = this.paratrooperNode.children[0].position\r\n        this.paratrooperNode.destroyAllChildren()\r\n        this.showGun()\r\n        this.showPlayer(landUpPos)\r\n        if (_speedUpJump) {\r\n            this.node.runAction(cc.sequence(cc.delayTime(5), cc.callFunc(() => {\r\n                this.showEnemy()\r\n            })))\r\n        } else {\r\n            this.showEnemy()\r\n        }\r\n\r\n    },\r\n    showGun() {\r\n        let wallLayer = this.tiledMap.getLayer(\"wall\")\r\n        this.tiledMap.getObjectGroup(\"grass\")._objects.forEach(element => {\r\n            // var element = this.tiledMap.getObjectGroup(\"gun\")._objects[0]\r\n            let obj = cc.instantiate(this.groundItemPrefab)\r\n            obj.parent = this.allColliderNode\r\n            let desPos = wallLayer.getPositionAt(this.getTilePos(cc.v2(element.x, element.y)))\r\n            obj.setPosition(desPos)\r\n            let ddd = this.allGunNode.convertToNodeSpaceAR(obj.convertToWorldSpaceAR(cc.v2(0, 0)))\r\n            obj.parent = this.allGunNode\r\n            obj.setPosition(ddd)\r\n            let _param = {\r\n                _type: ItemType.weapon,\r\n                _kind: Tools.randomNum(0, 5)\r\n            }\r\n            obj.getComponent('GroundItem').init(_param)\r\n            GameApp.dataManager.globalData.allGunArr.push(obj)\r\n        });\r\n        this.otherGunPos.children.forEach(posNode => {\r\n            let obj = cc.instantiate(this.groundItemPrefab)\r\n            let ddd = this.allGunNode.convertToNodeSpaceAR(posNode.convertToWorldSpaceAR(cc.v2(0, 0)))\r\n            obj.parent = this.allGunNode\r\n            obj.setPosition(ddd)\r\n            let _param = {\r\n                _type: ItemType.weapon,\r\n                _kind: Tools.randomNum(0, 5)\r\n            }\r\n            obj.getComponent('GroundItem').init(_param)\r\n            GameApp.dataManager.globalData.allGunArr.push(obj)\r\n        });\r\n    },\r\n    //将像素坐标转化为瓦片坐标，posInPixel：目标节点的position\r\n    getTilePos(posInPixel) {\r\n        var mapSize = this.tiledMap.node.getContentSize();\r\n        var tileSize = this.tiledMap.getTileSize();\r\n        var x = Math.floor(posInPixel.x / tileSize.width);\r\n        var y = Math.floor((mapSize.height - posInPixel.y) / tileSize.height);\r\n        return cc.v2(x, y);\r\n    },\r\n\r\n    showPlayer(landUpPos) {\r\n        GameApp.uiManager.showGameObject('Player', (node) => {\r\n            // GameApp.dataManager.globalData.allRoleArr.push(node)\r\n            node.setPosition(landUpPos)\r\n            var c = node.getComponent(\"Player\")\r\n            GameApp.uiManager.getUI(\"GameUI\").getComponent(\"GameUI\").joystick.getComponent(\"Joystick\").player = c\r\n            c.init()\r\n\r\n            GameApp.dataManager.globalData.allRoleArr.push(c)\r\n            // this.readyToSort = true\r\n        }, this.allObjectNode)\r\n    },\r\n    showEnemy() {\r\n        var tempPosArr = []\r\n        var standardArr = this.enemySpawnPosGroupNode.children\r\n        // var xRangeArr = []\r\n        // var eachSpaceX = (standardArr[1].x - standardArr[0].x) / 6\r\n        // for (let i = 0; i < 7; i++) {\r\n        //     xRangeArr.push(standardArr[0].x + eachSpaceX * i)\r\n        // }\r\n        // var yRangeArr = []\r\n        // var eachSpaceY = (standardArr[2].y - standardArr[0].y) / 5\r\n        // for (let i = 0; i < 6; i++) {\r\n        //     yRangeArr.push(standardArr[0].y + eachSpaceY * i)\r\n        // }\r\n        // for (let i = 0; i < xRangeArr.length; i++) {\r\n        //     for (let j = 0; j < yRangeArr.length; j++) {\r\n        //         tempPosArr.push(cc.v2(xRangeArr[i], yRangeArr[j]))\r\n        //     }\r\n        // }\r\n        for (let i = 0; i < 30; i++) {\r\n            tempPosArr.push(cc.v2(Tools.randomNum(standardArr[0].x, standardArr[1].x), Tools.randomNum(standardArr[2].y, standardArr[0].y)))\r\n        }\r\n        // tempPosArr = Tools.getRandomAmountElementUnRepeat(tempPosArr, 30)\r\n        var tagNum = Tags.enemy\r\n        for (var i = 0; i < tempPosArr.length; i++) {\r\n            if (i + 1 == GameApp.dataManager.userData.choosedSkinId) {\r\n                continue;\r\n            }\r\n            GameApp.uiManager.showGameObject('Enemy', (node) => {\r\n                // GameApp.dataManager.globalData.allRoleArr.push(node)\r\n                node.getComponent(cc.PhysicsBoxCollider).tag = tagNum++\r\n                node.setPosition(tempPosArr[i])\r\n                var c = node.getComponent(\"Enemy\")\r\n                c.init(i + 1, GameApp.dataManager.jsonData.RobotName[i])\r\n                GameApp.dataManager.globalData.inGameKillNum.push({\r\n                    _killNum: 0,\r\n                    _belongName: GameApp.dataManager.jsonData.RobotName[i]\r\n                })\r\n                GameApp.dataManager.globalData.allRoleArr.push(c)\r\n                this.readyToSort = true\r\n            }, this.allObjectNode)\r\n        }\r\n\r\n        GameApp.eventManager.emit(EventNames.EVENT_SHOW_ALLROLENUM_UI)\r\n        GameApp.eventManager.emit(EventNames.EVENT_UPDATE_RANK_SHOW)\r\n    },\r\n    sortAll() {\r\n        var cloneObjArr = this.allObjectNode.children.concat()\r\n        var tempDict = []\r\n        var tempIndex = []\r\n        for (let i in cloneObjArr) {\r\n            if (GameApp.uiManager.isInMapSight(cloneObjArr[i])) {\r\n                tempDict.push({\r\n                    y: cloneObjArr[i].y,\r\n                    index: i\r\n                })\r\n                tempIndex.push(i)\r\n            }\r\n        }\r\n        tempDict.sort((a, b) => b.y - a.y)\r\n        for (let i in tempDict) {\r\n            cloneObjArr[tempDict[i].index].setSiblingIndex(tempDict[i])\r\n        }\r\n        // console.log(tempDict)\r\n        // console.log(this.allObjectNode.children)\r\n    }\r\n});\r\n","const Utils = require(\"Utils\")\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        joystick: {\r\n            default: null,\r\n            type: cc.Node,\r\n            tooltip: '摇杆的脚本'\r\n        },\r\n        btnArr: {\r\n            default: [],\r\n            type: [cc.Node],\r\n        },\r\n        soundNode: cc.Node,\r\n        gameUIPanel: cc.Node,\r\n        shootBtn: cc.Node,\r\n        reloadBtnNode: cc.Node,\r\n        amoUI: cc.Label,\r\n        allRoleNumUI: cc.Label,\r\n        weaponBtnNode: cc.Node,\r\n        mipmapNode: cc.Node,\r\n\r\n        prepareTopNode: cc.Node,\r\n        // readActSp: cc.SpriteFrame,\r\n        countDownSpGroup: [cc.SpriteFrame],\r\n        rankGroup: [cc.Node],\r\n        _shootFlag: false,\r\n        _shootTimer: 0,\r\n        _reloadFlag: false,\r\n        _reloadTimer: 0,\r\n\r\n        _theGameBegin: false,\r\n        _protectTimeCountDown: 8,\r\n        _onceCountDownAnim: false,\r\n        _onceGasCountDownAnim: false,\r\n        gasNodeUI: cc.Node,\r\n        safeNode: cc.Node,\r\n        gasNode: cc.Node,\r\n        boomNode: cc.Node,\r\n        _gasState: 0,//0是不动圈,不现时。1是画圈,倒计时。2是缩圈,提示字。\r\n        _gasCountDownTimer: 40,\r\n        _gasCountDownInterval: 20,\r\n        safeCircle: 150,\r\n        _boxCountDownTimer: 20,\r\n        _boxCountDownInterval: 50,\r\n        _dropTime: 0,\r\n        _boomCountDownTimer: 30,\r\n        _boomCountDownInterval: 50,\r\n        tipNode: cc.Node,\r\n        flashBtn: cc.Node,\r\n        flashCDUI: cc.Label,\r\n        healthBtn: cc.Node,\r\n        healthCDUI: cc.Label,\r\n        _flashTimer: 0,\r\n        _flashInCD: false,\r\n        _healthTimer: 0,\r\n        _healthInCD: false,\r\n\r\n        mipNode: cc.Node,\r\n        _mipBoxGroup: [],\r\n        boxAttrNodeGroup: [cc.Node],\r\n        equipAttrNodeGroup: [cc.Node],\r\n    },\r\n\r\n    onLoad() {\r\n        this._gasState = 0\r\n        this._gasCountDownTimer = 40\r\n        this._gasCountDownInterval = 20\r\n        this.safeCircle = 150\r\n        this._boxCountDownTimer = 20\r\n        this._boxCountDownInterval = 50\r\n\r\n        this._boomCountDownTimer = 30\r\n        this._boomCountDownInterval = 50\r\n\r\n        GameApp.eventManager.on(EventNames.EVENT_UPDATE_AMO_SHOW, this.updateAmoShow.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_SHOW_GUN_UI, this.updateGunUIShow.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_SHOW_RELOAD_UI, this.updateReloadUIShow.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_SHOW_ALLROLENUM_UI, this.updateAllRoleNumUIShow.bind(this))\r\n\r\n        GameApp.eventManager.on(EventNames.EVENT_GAME_BEGIN, this.gameBegin.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_UPDATE_MIPMAP_PLAYER, this.updateMipmapPlayer.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_UPDATE_RANK_SHOW, this.updateRankShow.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_NOTYFY_BOX_DISMISS, this.notifyBoxDismiss.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_NOTYFY_BOOM_DISMISS, this.notifyBoomDismiss.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_SHOW_BOXITEM, this.showBoxItemUI.bind(this))\r\n        this.shootBtn.on(cc.Node.EventType.TOUCH_START, this.onTouchBegin, this);\r\n        this.shootBtn.on(cc.Node.EventType.TOUCH_END, this.onTouchLeave, this);\r\n        this.shootBtn.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchLeave, this);\r\n        this.weaponBtnNode.children[0].runAction(cc.rotateBy(0.2, 90).repeatForever())\r\n        if (GameApp.dataManager.userData.isFirstPlay) {\r\n            this.tipNode.active = true\r\n            this.tipNode.children[0].runAction(cc.sequence(cc.moveTo(0.5, cc.v2(0, 10)), cc.moveTo(0.5, cc.v2(0, -10))).repeatForever())\r\n        }\r\n        this.updateSoundBtnShow()\r\n    },\r\n    onDestroy() {\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_AMO_SHOW)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_GUN_UI)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_RELOAD_UI)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_ALLROLENUM_UI)\r\n\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_GAME_BEGIN)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_MIPMAP_PLAYER)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_RANK_SHOW)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_NOTYFY_BOX_DISMISS)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_NOTYFY_BOOM_DISMISS)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_BOXITEM)\r\n\r\n    },\r\n    init(_chooseType, _bili, _speedUpJump) {\r\n        GameApp.uiManager.showGame('GameMap', (node) => {\r\n            node.getComponent(\"GameMap\").init(_chooseType, _bili, _speedUpJump)\r\n        })\r\n        GameApp.uiManager.showToast(\"落地后请尽快寻找枪械\")\r\n\r\n    },\r\n\r\n    gameBegin() {\r\n        this._theGameBegin = true\r\n        this.gameUIPanel.active = true\r\n    },\r\n    update(dt) {\r\n        this._shootTimer -= dt\r\n        if (this._shootFlag && this._shootTimer < 0 && !this._reloadFlag) {\r\n            this._shootTimer = GameApp.dataManager.globalData.shootInterval\r\n            this.shoot()\r\n        }\r\n        if (this._reloadFlag) {\r\n            this._reloadTimer -= dt\r\n            if (this._reloadFlag && this._reloadTimer < 0) {\r\n                this._reloadFlag = false\r\n                GameApp.dataManager.reloadAmo()\r\n            }\r\n        }\r\n        this.gasCountDown(dt)\r\n        this.boxCountDown(dt)\r\n        this.boomCountDown(dt)\r\n        this.duleFlash(dt)\r\n        this.duleHealth(dt)\r\n\r\n        if (!this._theGameBegin) return\r\n        this.protectCcountDown(dt)\r\n    },\r\n    duleFlash(dt) {\r\n        this._flashTimer -= dt\r\n        if (this._flashTimer < 0) {\r\n            this._flashInCD = false\r\n            this.flashBtn.children[0].active = true\r\n            this.flashBtn.children[1].active = false\r\n        }\r\n        if (this._flashInCD) {\r\n            this.flashCDUI.string = Math.floor(this._flashTimer)\r\n        } else {\r\n            this.flashCDUI.string = \"\"\r\n        }\r\n    },\r\n    duleHealth(dt) {\r\n        this._healthTimer -= dt\r\n        if (this._healthTimer < 0) {\r\n            this._healthInCD = false\r\n            this.healthBtn.children[0].active = true\r\n            this.healthBtn.children[1].active = false\r\n        }\r\n        if (this._healthInCD) {\r\n            this.healthCDUI.string = Math.floor(this._healthTimer)\r\n        } else {\r\n            this.healthCDUI.string = \"\"\r\n        }\r\n    },\r\n    protectCcountDown(dt) {\r\n        this._protectTimeCountDown -= dt\r\n        if (this._protectTimeCountDown < 6) {\r\n            this.prepareTopNode.children[1].active = true\r\n            this.protectCcountDownAnim()\r\n            this.prepareTopNode.children[1].getComponent(cc.Sprite).spriteFrame = this.countDownSpGroup[Math.floor(this._protectTimeCountDown - 1)]\r\n        }\r\n        if (Math.floor(this._protectTimeCountDown) <= 0) {\r\n            GameApp.eventManager.emit(EventNames.EVENT_THEGAMESTART)\r\n            this.prepareTopNode.active = false\r\n            this._theGameBegin = false\r\n        }\r\n    },\r\n    protectCcountDownAnim() {\r\n        if (this._onceCountDownAnim) return\r\n        this._onceCountDownAnim = true\r\n        GameApp.audioManager.playEffect('waitSceneCutDown')\r\n        var seq = cc.sequence(cc.scaleTo(0.2, 1.5), cc.scaleTo(0.3, 1), cc.delayTime(0.5), cc.callFunc(() => {\r\n            this._onceCountDownAnim = false\r\n        }))\r\n        this.prepareTopNode.children[1].runAction(seq)\r\n    },\r\n    gasCountDown(dt) {\r\n        this._gasCountDownTimer -= dt\r\n        //0是不动圈,不现时。1是画圈,倒计时。2是缩圈,提示字。\r\n        switch (this._gasState) {\r\n            case 0: this.quietGasState(); break;\r\n            case 1: this.refreshCircleAndCD(dt); break;\r\n            case 2: this.reduceCircleAndTip(dt); break;\r\n        }\r\n    },\r\n\r\n    quietGasState() {\r\n        if (this._gasCountDownTimer < 16) {\r\n            this.gasNodeUI.children[0].active = true\r\n            this.gasNodeUI.children[1].active = true\r\n            this.gasNodeUI.children[2].active = false\r\n            this.gasNodeUI.children[3].getComponent(cc.RichText).string = \"毒气倒计时\"\r\n            this.gasNodeUI.active = true\r\n            this.safeNode.children[0].active = true\r\n            this.safeNode.children[0].width = this.safeNode.children[0].height = this.safeCircle + 5\r\n            var theWidth = this.gasNode.width\r\n            if (theWidth == 300) {\r\n                theWidth = 204\r\n            }\r\n            if (this.safeCircle == 0) {\r\n                this.safeNode.setPosition(this.gasNode.position)\r\n            } else {\r\n                this.safeNode.setPosition(Tools.pointOfRandom(this.safeNode.position, theWidth / 2, this.safeCircle / 2))\r\n            }\r\n            this.safeNode.width = this.safeNode.height = this.safeCircle\r\n            GameApp.audioManager.playEffect('gasAlert')\r\n            GameApp.audioManager.playEffect('noticeGasComing')\r\n            this.safeNode.children[0].runAction(cc.sequence(cc.spawn(cc.scaleTo(0, 1), cc.fadeIn(0)), cc.spawn(cc.scaleTo(1, 1.3), cc.fadeOut(1))).repeat(2))\r\n            this._gasState = 1\r\n            // GameApp.eventManager.emit(EventNames.EVENT_UPDATE_GAS_SHOW, 1, this.safeCircle)\r\n        }\r\n    },\r\n    refreshCircleAndCD(dt) {\r\n        this.gasNodeUI.children[0].getComponent(cc.RichText).string = Math.floor(this._gasCountDownTimer) + \"秒\"\r\n        if (this._gasCountDownTimer < 0) {\r\n\r\n            this.gasNodeUI.children[0].active = false\r\n            this.gasNodeUI.children[1].active = false\r\n            this.gasNodeUI.children[2].active = true\r\n            this.gasNodeUI.children[3].getComponent(cc.RichText).string = \"<color=#0fffff>毒气正在扩散</color>\"\r\n            GameApp.audioManager.playEffect('noticeGasDiffusion')\r\n            this.gasNodeUI.children[2].runAction(cc.sequence(cc.fadeOut(0.3), cc.fadeIn(0.5)).repeatForever())\r\n            this._gasState = 2\r\n\r\n            GameApp.eventManager.emit(EventNames.EVENT_UPDATE_GAS_SHOW, 2, { safeCircle: this.safeCircle, safePosition: this.safeNode.position })\r\n\r\n        }\r\n    },\r\n    reduceCircleAndTip(dt) {\r\n        if (this.safeCircle < 0) {\r\n            return\r\n        }\r\n        if (this.gasNode.width <= this.safeCircle) {\r\n            this._gasCountDownTimer = this._gasCountDownInterval\r\n            this.gasNode.width = this.gasNode.height = this.safeCircle\r\n            this.safeCircle -= 50\r\n            this.gasNodeUI.active = false\r\n            if (this.safeCircle < 0) {\r\n                GameApp.audioManager.playEffect('noticeGasNoWay')\r\n                return\r\n            }\r\n            this._gasState = 0\r\n            return\r\n        }\r\n        this.gasNode.width -= dt * 10\r\n        this.gasNode.height -= dt * 10\r\n        if (this.safeCircle == 0) return\r\n        if (!Tools.isIntersect(this.gasNode.position, this.gasNode.width / 2, this.safeNode.position, this.safeCircle / 2)) {\r\n\r\n        } else {\r\n            if (Math.abs(this.gasNode.width - this.safeCircle) > 0.05)  //外圈和内圈圆心重合,半径相同\r\n            {\r\n                // k = y/x\r\n                // y = kx\r\n                // x^2+y^2 = 1\r\n                // x^2 = 1/(k^2+1)\r\n                var k = (this.gasNode.y - this.safeNode.y) / (this.gasNode.x - this.safeNode.x);\r\n\r\n                var x_off = dt * 10 * parseFloat(Math.sqrt(1 / (k * k + 1)))\r\n\r\n                // 通过mPoint_outer和mPoint_inner的x坐标来判断此时外圆圆心要移动的是该 + x_off（x轴偏移量）还是 -x_off\r\n                this.gasNode.x += 1 * (this.gasNode.x < this.safeNode.x ? 1 : -1) * x_off;\r\n                // 知道变化后的外圈圆心的x坐标，和直线方程来求对应的y坐标\r\n                this.gasNode.y = k * (this.gasNode.x - this.safeNode.x) + this.safeNode.y;\r\n\r\n            }\r\n        }\r\n    },\r\n    boxCountDown(dt) {\r\n        if (this._dropTime >= 2) return;\r\n        this._boxCountDownTimer -= dt\r\n        if (this._boxCountDownTimer < 0) {\r\n            this._boxCountDownTimer = this._boxCountDownInterval\r\n            this.dropBox()\r\n        }\r\n    },\r\n    boomCountDown(dt) {\r\n        if (this._dropTime >= 2) return;\r\n        this._boomCountDownTimer -= dt\r\n        if (this._boomCountDownTimer < 0) {\r\n            this._boomCountDownTimer = this._boomCountDownInterval\r\n            this.dropBoom()\r\n        }\r\n    },\r\n    dropBox() {\r\n        GameApp.audioManager.playEffect('noticeExpShow')\r\n        var theNumArr = [10, 6, 3, 2]\r\n        for (let i = 0; i < theNumArr[this._dropTime]; i++) {\r\n            GameApp.uiManager.showGameObject(\"MipBox\", (node) => {\r\n                this._mipBoxGroup.push(node)\r\n                var thePos = Tools.pointOfRandom(this.safeNode.position, this.safeCircle / 2, 0)\r\n                node.setPosition(thePos)\r\n                let paramPos = this.mipNode.convertToNodeSpaceAR(node.convertToWorldSpaceAR(cc.v2(0.5, 0.5)))\r\n                GameApp.eventManager.emit(EventNames.EVENT_DROP_BOX, paramPos, this._dropTime + \"\" + i)\r\n                node.children[0].runAction(cc.sequence(cc.scaleTo(1, 4), cc.scaleTo(0, 1), cc.fadeOut(0)).repeat(2))\r\n                // node.getComponent(\"DropBox\").init()\r\n            }, this.mipNode)\r\n        }\r\n        this._dropTime++\r\n        // GameApp.eventManager.emit(EventNames.EVENT_DROP_BOX, this.safeCircle)\r\n    },\r\n    dropBoom() {\r\n        if (this.safeCircle <= 0) return\r\n        GameApp.audioManager.playEffect('noticeBoomComing')\r\n        this.boomNode.active = true\r\n        this.boomNode.setPosition(Tools.pointOfRandom(this.safeNode.position, this.safeCircle / 2, this.boomNode.width / 2))\r\n        GameApp.eventManager.emit(EventNames.EVENT_DROP_BOOM, this.mipNode.convertToNodeSpaceAR(this.boomNode.convertToWorldSpaceAR(cc.v2(0.5, 0.5))), this.boomNode.width)\r\n    },\r\n    notifyBoxDismiss(_index) {\r\n        this._mipBoxGroup[parseInt(_index)].destroy()\r\n    },\r\n    notifyBoomDismiss(_index) {\r\n        this.boomNode.active = false\r\n    },\r\n    showBoxItemUI() {\r\n        this.boxAttrNodeGroup.forEach(element => {\r\n            element.active = false\r\n        });\r\n        var arr = [0, 1, 2, 3]\r\n        var randNum = Tools.randomNum(3, 4)\r\n        var randArr = Tools.getRandomAmountElementUnRepeat(arr, randNum).nodeArr\r\n        // console.log(randArr)\r\n        randArr.forEach(element => {\r\n            var _rank = GameApp.dataManager.globalData.getItemAttrArr[element].rank\r\n            if (_rank == 3) {\r\n                // console.log(element + \"号关闭了\")\r\n                this.boxAttrNodeGroup[element].active = false\r\n            } else {\r\n                var param = {\r\n                    rank: _rank + 1,\r\n                    item: ItemAttr[element][_rank],\r\n                }\r\n                this.boxAttrNodeGroup[element].children[0].getComponent(cc.Label).string = param.rank + \"级\"\r\n                this.boxAttrNodeGroup[element].children[1].getComponent(cc.Label).string = param.item.des\r\n                this.boxAttrNodeGroup[element].children[2].runAction(cc.rotateBy(0.2, 90).repeatForever())\r\n                this.boxAttrNodeGroup[element].active = true\r\n                // console.log(element + \"号打开了\")\r\n            }\r\n        });\r\n    },\r\n    boxItemUIBtnClick(eventTouch, customEventData) {\r\n        var _selectIndex = parseInt(customEventData) - 1\r\n        // console.log(\"选择了\" + _selectIndex + \"号装备\")\r\n        GameApp.dataManager.equipBoxItem(_selectIndex)\r\n        this.boxAttrNodeGroup.forEach(element => {\r\n            element.active = false\r\n        });\r\n        this.updateEquipShowUI()\r\n    },\r\n    updateEquipShowUI() {\r\n        var arr = GameApp.dataManager.getEquipShowAttr()\r\n        for (var i in this.equipAttrNodeGroup) {\r\n            if (arr[i] == null) {\r\n                this.equipAttrNodeGroup[i].active = false\r\n            } else {\r\n                this.equipAttrNodeGroup[i].children[0].getComponent(cc.Label).string = arr[i].rank + \"级\"\r\n                this.equipAttrNodeGroup[i].children[1].getComponent(cc.Label).string = arr[i].item.des\r\n                this.equipAttrNodeGroup[i].active = true\r\n            }\r\n        }\r\n    },\r\n    // gasCountDownAnim() {\r\n    //     if (this._onceGasCountDownAnim) return\r\n    //     this._onceGasCountDownAnim = true\r\n\r\n    // },\r\n    onTouchBegin(event) {\r\n        this._shootFlag = true\r\n\r\n    },\r\n    onTouchLeave(event) {\r\n        this._shootFlag = false\r\n        GameApp.eventManager.emit(EventNames.EVENT_AIM, false)\r\n    },\r\n    shoot() {\r\n        GameApp.eventManager.emit(EventNames.EVENT_AIM, true)\r\n        GameApp.eventManager.emit(EventNames.EVENT_PLAYER_SHOOT)\r\n    },\r\n    updateAmoShow() {\r\n        this.amoUI.string = GameApp.dataManager.globalData.curAmoNum\r\n        GameApp.eventManager.emit(EventNames.EVENT_UPDATE_TOPBAR_SHOW)\r\n    },\r\n    updateGunUIShow(event, _gunData) {\r\n        if (_gunData) {\r\n            this.weaponBtnNode.getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame(\"ui_weapon_\" + _gunData.weaponid)\r\n            this.weaponBtnNode.children[1].children[0].getComponent(cc.Label).string = _gunData.name\r\n        }\r\n        this.weaponBtnNode.active = event\r\n    },\r\n    updateReloadUIShow(event) {\r\n        this.reloadBtnNode.active = event\r\n    },\r\n    updateAllRoleNumUIShow() {\r\n        var theRank = GameApp.dataManager.globalData.allRoleArr.length\r\n        if (theRank == 1) {\r\n            var theRole = GameApp.dataManager.globalData.allRoleArr[0]\r\n            if (theRole._pbc.tag == Tags.player) {\r\n                GameApp.uiManager.getPopup(\"OverPopup\") == null && GameApp.uiManager.showPopup(\"OverPopup\", (node) => {\r\n                    node.getComponent(\"OverPopup\").init(true, theRank)\r\n                })\r\n            }\r\n        }\r\n        this.allRoleNumUI.string = theRank + \"人存活\"\r\n    },\r\n    updateMipmapPlayer(event) {\r\n        this.mipmapNode.children[2].setPosition(event)\r\n    },\r\n    updateMipmapBox(event) {\r\n\r\n    },\r\n    updateRankShow() {\r\n        var theArr = GameApp.dataManager.globalData.inGameKillNum.concat()\r\n        theArr.sort((a, b) => b._killNum - a._killNum)\r\n        for (let i = 0; i < 5; i++) {\r\n            var theName = theArr[i]._belongName\r\n            if (theName == GameApp.dataManager.userData.playerName) {\r\n                theName = \"<color=#0fffff>\" + theArr[i]._belongName + \"</color>\"\r\n            }\r\n            this.rankGroup[i].children[0].getComponent(cc.RichText).string = theName\r\n            this.rankGroup[i].children[1].getComponent(cc.Label).string = theArr[i]._killNum\r\n        }\r\n    },\r\n    reloadBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        if (this._reloadFlag) return;\r\n        this._reloadTimer = GameApp.dataManager.globalData.reloadInterval\r\n        this._reloadFlag = true\r\n        GameApp.eventManager.emit(EventNames.EVENT_PLAYER_RELOAD)\r\n    },\r\n    weaponBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.eventManager.emit(EventNames.EVENT_PICKUP_WEAPON)\r\n    },\r\n    flashBtnClick() {\r\n        if (this._flashInCD) {\r\n            GameApp.uiManager.showToast(\"技能正在冷却中\")\r\n        } else {\r\n            this.tipNode.active = false\r\n            GameApp.eventManager.emit(EventNames.EVENT_FLASH)\r\n            this.flashBtn.children[0].active = false\r\n            this.flashBtn.children[1].active = true\r\n            this._flashTimer = GameApp.dataManager.getSkillCD()\r\n            this._flashInCD = true\r\n        }\r\n    },\r\n    healthBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        if (this._healthInCD) {\r\n            GameApp.uiManager.showToast(\"技能正在冷却中\")\r\n        } else {\r\n            GameApp.eventManager.emit(EventNames.EVENT_RESUME_HEALTH)\r\n            this.healthBtn.children[0].active = false\r\n            this.healthBtn.children[1].active = true\r\n            this._healthTimer = GameApp.dataManager.getSkillCD()\r\n            this._healthInCD = true\r\n        }\r\n    },\r\n    backBtnClick() {\r\n        GameApp.uiManager.showUI('LoginUI')\r\n    },\r\n    soundBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        var onoff = !GameApp.audioManager._effectOn\r\n        GameApp.audioManager.setEffect(onoff)\r\n        // GameApp.audioManager.setEffect(onoff)\r\n        this.updateSoundBtnShow()\r\n    },\r\n    updateSoundBtnShow() {\r\n        this.soundNode.children[0].active = GameApp.audioManager._effectOn\r\n        this.soundNode.children[1].active = !GameApp.audioManager._effectOn\r\n    },\r\n    updateRecordBtnShow() {\r\n        this.btnArr[0].active = (GameApp.dataManager.globalData.recordState == RecordState.RECORD)\r\n        this.btnArr[1].active = (GameApp.dataManager.globalData.recordState == RecordState.PAUSE || GameApp.dataManager.globalData.recordState == RecordState.READY)\r\n    },\r\n    recordBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        let self = this\r\n        switch (GameApp.dataManager.globalData.recordState) {\r\n            case RecordState.RECORD: Utils.pauseRecord(function () {\r\n                GameApp.dataManager.changeRecordState(RecordState.PAUSE)\r\n                self.updateRecordBtnShow()\r\n            }); break;\r\n            case RecordState.PAUSE: Utils.resumeRecord(function () {\r\n                GameApp.dataManager.changeRecordState(RecordState.RECORD)\r\n                self.updateRecordBtnShow()\r\n            }); break;\r\n            //预备bug情况\r\n            case RecordState.READY: console.log(\"录屏bug了\"); break;\r\n        }\r\n    }\r\n    // update (dt) {},\r\n});\r\n","const Utils = require(\"Utils\")\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        closeBtnNode: cc.Node,\r\n        sureBtnNode: cc.Node,\r\n        nextUIName: \"\",\r\n        _popupType: 1,\r\n\r\n        titleUI: cc.Label,\r\n        coinSp: cc.Node,\r\n        coinInfo: cc.Node,\r\n        speedSp: cc.Node,\r\n        speedInfo: cc.Node,\r\n        onceClick: {\r\n            default: true,\r\n            visible: false\r\n        }\r\n    },\r\n\r\n\r\n    onLoad() {\r\n        this.node.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(() => {\r\n            this.closeBtnNode.active = true\r\n        })))\r\n        Tools.scaleUpAndDowm(this.sureBtnNode)\r\n    },\r\n    init(_name, _type) {\r\n        this.nextUIName = _name\r\n        this._popupType = _type\r\n        if (_type == 1) {\r\n            this.titleUI.string = \"金币大礼包\"\r\n            this.coinSp.active = true\r\n            this.coinInfo.active = true\r\n        } else if (_type == 2) {\r\n            this.titleUI.string = \"加速大礼包\"\r\n            this.speedSp.active = true\r\n            this.speedInfo.active = true\r\n        }\r\n\r\n    },\r\n\r\n    sureBtnClick() {\r\n        if (!this.onceClick) return;\r\n        this.onceClick = false\r\n        GameApp.audioManager.playEffect('click')\r\n        var self = this\r\n\r\n        if (window.tt) {\r\n            Utils.addVideo(\"addVideo\", function () { //看完了\r\n                self.onceClick = true\r\n                if (self._popupType == 1) {\r\n                    GameApp.uiManager.showToast(\"获得500金币\")\r\n                    GameApp.dataManager.addCoin(500)\r\n                    self.closeBtnClick()\r\n                } else if (self._popupType == 2) {\r\n                    GameApp.uiManager.showToast(\"获得加速\")\r\n                    self.closeBtnClick2(true)\r\n                }\r\n\r\n            }, function (_info) { //没看完\r\n                self.onceClick = true\r\n                _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast(\"未看完视频！\")\r\n            })\r\n        } else {\r\n            if (self._popupType == 1) {\r\n                if (window.wx) {\r\n                    GameApp.uiManager.showToast(\"暂未开放！\")\r\n                    self.closeBtnClick()\r\n                    return\r\n                }\r\n                GameApp.uiManager.showToast(\"福利,获得500金币\")\r\n                GameApp.dataManager.addCoin(500)\r\n                self.closeBtnClick()\r\n            } else if (self._popupType == 2) {\r\n                if (window.wx) {\r\n                    GameApp.uiManager.showToast(\"暂未开放！\")\r\n                    self.closeBtnClick2(true)\r\n                    return\r\n                }\r\n                GameApp.uiManager.showToast(\"福利,获得加速\")\r\n                self.closeBtnClick2(true)\r\n            }\r\n        }\r\n\r\n    },\r\n    closeBtnClick() {\r\n        if (this._popupType == 1) {\r\n            GameApp.audioManager.playEffect('click')\r\n            GameApp.uiManager.closePopup(\"GiftPopup\")\r\n            GameApp.uiManager.showUI(this.nextUIName)\r\n        } else if (this._popupType == 2) {\r\n            this.closeBtnClick2(false)\r\n        }\r\n    },\r\n    closeBtnClick2(_speedUp) {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.closePopup(\"GiftPopup\")\r\n        GameApp.uiManager.getUI(\"PrepareUI\").getComponent(\"PrepareUI\").showPlaneUI(_speedUp)\r\n    }\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        itemType: {\r\n            default: {}\r\n        },\r\n\r\n    },\r\n\r\n    onLoad() {\r\n        this.getComponent(cc.PhysicsBoxCollider).tag = Tags.item\r\n        this.doAnim()\r\n    },\r\n    doAnim() {\r\n        this.node.children[0].runAction(cc.sequence(cc.fadeOut(0.6), cc.fadeIn(0.3)).repeatForever())\r\n        this.node.children[1].runAction(cc.sequence(cc.moveBy(0.5, cc.v2(0, 10)), cc.moveBy(0.5, cc.v2(0, -10))).repeatForever())\r\n    },\r\n    init(_param, _spriteFrame) {\r\n        _param && (this.itemType = _param)\r\n        // if (true) {\r\n        if (this.itemType._type == ItemType.weapon) {\r\n            this.node.children[2].active = false\r\n            this.node.children[1].getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame(\"item_weapon_\" + GameApp.dataManager.jsonData.WeaponData[_param._kind].skinname)\r\n        } else {\r\n            this.node.children[2].getComponent(cc.Label).string = GameApp.dataManager.jsonData.WeaponData[this.itemType._kind].name\r\n            this.node.children[2].active = true\r\n            this.node.children[1].getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame(\"item_equip_1_valid\")\r\n        }\r\n\r\n\r\n    },\r\n    // setItemIcon(id) {\r\n    //     var self = this\r\n    //     cc.loader.loadRes(\"texture/skin_piece/card_p_\" + id, cc.SpriteFrame, function (err, spriteFrame) {\r\n    //         self.methodBtnGroup[2].children[0].getComponent(cc.Sprite).spriteFrame = spriteFrame\r\n    //     });\r\n    // },\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n    backBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.showUI('LoginUI')\r\n    },\r\n});\r\n","export default {\n  JoystickType: cc.Enum({\n    FIXED: 0,\n    FOLLOW: 1,\n  }),\n\n  DirectionType: cc.Enum({\n    FOUR: 4,\n    EIGHT: 8,\n    ALL: 0,\n  }),\n\n  SpeedType: cc.Enum({\n    STOP: 0,\n    NORMAL: 1,\n    FAST: 2\n  })\n};\n","import JoystickCommon from 'JoystickCommon'\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    dot: {\n      default: null,\n      type: cc.Node,\n      displayName: '杆子',\n      tooltip: '摇杆操纵点',\n    },\n    ring: {\n      default: null,\n      type: cc.Node,\n      displayName: '底部圈子',\n      tooltip: '摇杆背景节点',\n    },\n\n    player: {\n      default: null,\n      type: cc.Node,\n      displayName: '操控角色',\n      tooltip: '操控角色',\n    },\n\n    joystickType: {\n      default: JoystickCommon.JoystickType.FIXED,\n      type: JoystickCommon.JoystickType,\n      displayName: '触摸类型',\n      tooltip: '定死的还是随触摸位置变化的',\n    },\n    directionType: {\n      default: JoystickCommon.DirectionType.ALL,\n      type: JoystickCommon.DirectionType,\n      displayName: '方向限制',\n      tooltip: '四向，八向，万向',\n    },\n    _stickPos: {\n      default: null,\n      type: cc.Node,\n      tooltip: '摇杆所在位置',\n    },\n    _touchLocation: {\n      default: null,\n      type: cc.Node,\n      tooltip: '触摸位置',\n    },\n  },\n\n  onLoad() {\n    this._radius = this.ring.width / 2;\n    this._initTouchEvent();\n    // hide joystick when follow\n    if (this.joystickType == JoystickCommon.JoystickType.FOLLOW) {\n      this.node.opacity = 0;\n    }\n  },\n\n  _initTouchEvent() {\n    // set the size of joystick node to control scale\n    const self = this;\n    self.node.on(cc.Node.EventType.TOUCH_START, self._touchStartEvent, self);\n    self.node.on(cc.Node.EventType.TOUCH_MOVE, self._touchMoveEvent, self);\n    self.node.on(cc.Node.EventType.TOUCH_END, self._touchEndEvent, self);\n    self.node.on(cc.Node.EventType.TOUCH_CANCEL, self._touchEndEvent, self);\n  },\n\n  _touchStartEvent(event) {\n    if (this.player == null || this.player == undefined) return\n    // this.player = this.player.getComponent('Player') || this.player.getComponent('ParatrooperPlayer')\n\n    const touchPos = this.node.convertToNodeSpaceAR(event.getLocation());\n\n    if (this.joystickType === JoystickCommon.JoystickType.FIXED) {\n      this._stickPos = this.ring.getPosition();\n\n      // 触摸点与圆圈中心的距离\n      const distance = touchPos.sub(this.ring.getPosition()).mag();\n\n      // 手指在圆圈内触摸,控杆跟随触摸点\n      if (this._radius > distance) {\n        this.dot.setPosition(touchPos);\n      }\n\n    } else if (this.joystickType === JoystickCommon.JoystickType.FOLLOW) {\n\n      // 记录摇杆位置，给 touch move 使用\n      this._stickPos = touchPos;\n      this.node.opacity = 255;\n      this._touchLocation = event.getLocation();\n\n      // 更改摇杆的位置\n      this.ring.setPosition(touchPos);\n      this.dot.setPosition(touchPos);\n    }\n  },\n\n  _touchMoveEvent(event) {\n    if (this.joystickType === JoystickCommon.JoystickType.FOLLOW) {\n      // 如果 touch start 位置和 touch move 相同，禁止移动\n      if (this._touchLocation === event.getLocation()) {\n        return false;\n      }\n    }\n\n    // 以圆圈为锚点获取触摸坐标\n    const touchPos = this.ring.convertToNodeSpaceAR(event.getLocation());\n    const distance = touchPos.mag();\n\n    // 由于摇杆的 postion 是以父节点为锚点，所以定位要加上 touch start 时的位置\n    const posX = this._stickPos.x + touchPos.x;\n    const posY = this._stickPos.y + touchPos.y;\n\n    // 归一化\n    const p = cc.v2(posX, posY).sub(this.ring.getPosition()).normalize();\n\n    if (this._radius > distance) {\n      this.dot.setPosition(cc.v2(posX, posY));\n      // this.player.setSpeedType(JoystickCommon.SpeedType.NORMAL)\n    } else {\n      // 控杆永远保持在圈内，并在圈内跟随触摸更新角度\n      const x = this._stickPos.x + p.x * this._radius;\n      const y = this._stickPos.y + p.y * this._radius;\n      this.dot.setPosition(cc.v2(x, y));\n      // this.player.setSpeedType(JoystickCommon.SpeedType.FAST)\n    }\n    if (this.player == null || this.player == undefined) return\n    this.player.setSpeedType(JoystickCommon.SpeedType.FAST)\n    // this.player.moveDir = p\n    this.player.setDir(p)\n  },\n\n  _touchEndEvent() {\n    this.dot.setPosition(this.ring.getPosition());\n    if (this.joystickType == JoystickCommon.JoystickType.FOLLOW) {\n      this.node.opacity = 0;\n    }\n    if (this.player == null || this.player == undefined) return\n    this.player.setSpeedType(JoystickCommon.SpeedType.STOP)\n  },\n\n  // methods\n\n  // setPlayerSpeed() {\n  //   this.player = this.player.getComponent('Player');\n  //   this.player.moveDir = p;\n  //   this.player.speedType = JoystickCommon.SpeedType.NORMAL;\n  // },\n});\n","var JSON_PATH = {\r\n    SkinsData: 'data/skins',\r\n    WeaponData: 'data/weapon',\r\n    RobotName: 'data/robotName',\r\n}\r\nmodule.exports = JSON_PATH;","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        Player: {\n            default: null,\n            type: sp.Skeleton,\n            displayName: '玩家动画'\n        }\n    },\n\n    start() {\n        this.loadSkeletonDataResources();\n    },\n\n    loadSkeletonDataResources() {\n        // cc.loader.loadResDir(\"spine\", sp.SkeletonData, function (err, assets) {\n        //     if (!err) {\n        //         cc.SkeletonData = assets;\n        //         //console.log('加载动画文件成功:', cc.SkeletonData);\n        //         let data = this.getSkeletonDataByName('player');\n        //         console.log('玩家动画:', data);\n        //         //this.Player.skeletonData = this.PlayerSkeletonData;\n        //         this.Player.skeletonData = data;\n        //         this.Player.setSkin(\"cook\");\n        //         this.Player.setAnimation(0, \"await\", true);\n        //     }\n        // }.bind(this));\n    },\n\n    getSkeletonDataByName(data) {\n        for (let i = 0; i < cc.SkeletonData.length; i++) {\n            let skeletonData = cc.SkeletonData[i];\n            let name = skeletonData.name;\n            if (name === data) {\n                return skeletonData;\n            }\n        }\n    }\n});\n","const Utils = require(\"Utils\")\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        coinUI: cc.Label,\r\n        nameUI: cc.EditBox,\r\n        curPlayerAnim: sp.Skeleton,\r\n        onceClick: {\r\n            default: true,\r\n            visible: false\r\n        },\r\n        moreBtn: cc.Node,\r\n        moreSprites: [cc.SpriteFrame],\r\n        spriteIndex: 0,\r\n        activityBtnNode: cc.Node,\r\n        originActivityBtnPos: null,\r\n    },\r\n\r\n\r\n    onLoad() {\r\n        GameApp.eventManager.on(EventNames.EVENT_SHOW_ACTIVITYBTN, this.showActivityBtn.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_UPDATE_COIN_SHOW, this.updateCoinShow.bind(this))\r\n\r\n        // if (window.tt) {\r\n        //     const systemInfo = tt.getSystemInfoSync();\r\n        //     if (systemInfo.platform !== \"ios\" && systemInfo.appName != \"XiGua\") {\r\n        //         this.moreBtn.active = true\r\n        //         Tools.scaleUpAndDowm(this.moreBtn)\r\n        //         this.moreBtn.runAction(cc.sequence(cc.callFunc(() => {\r\n        //             this.moreBtn.children[0].getComponent(cc.Sprite).spriteFrame = this.moreSprites[this.spriteIndex]\r\n        //             this.spriteIndex++\r\n        //             if (this.spriteIndex == this.moreSprites.length) {\r\n        //                 this.spriteIndex = 0\r\n        //             }\r\n        //         }), cc.delayTime(2)).repeatForever())\r\n        //     } else {\r\n        //         this.moreBtn.active = false\r\n        //     }\r\n        // } else {\r\n        //     this.moreBtn.active = true\r\n        //     Tools.scaleUpAndDowm(this.moreBtn)\r\n        //     this.moreBtn.runAction(cc.sequence(cc.callFunc(() => {\r\n        //         this.moreBtn.children[0].getComponent(cc.Sprite).spriteFrame = this.moreSprites[this.spriteIndex]\r\n        //         this.spriteIndex++\r\n        //         if (this.spriteIndex == this.moreSprites.length) {\r\n        //             this.spriteIndex = 0\r\n        //         }\r\n        //     }), cc.delayTime(2)).repeatForever())\r\n        // }\r\n\r\n        GameApp.dataManager.initSomeAttr()\r\n        GameApp.dataManager.setChoosedSkinId(GameApp.dataManager.userData.choosedSkinId)\r\n        this.updateCoinShow()\r\n        this.updateNameShow()\r\n        this.initSkinShow()\r\n        this.originActivityBtnPos = this.activityBtnNode.position\r\n        this.showActivityBtn()\r\n        // if (window.tt) {\r\n        //     var phone = tt.getSystemInfoSync();\r\n        //     var w = phone.screenWidth\r\n        //     var h = phone.screenHeight;\r\n        //     Utils.addBanner(\"addBanner\", {\r\n        //         top: h - (200 * 9 / 16),\r\n        //         left: w / 2 - 100,\r\n        //         width: 200\r\n        //     }, null, null)\r\n        // }\r\n\r\n        var passDays = cc.sys.localStorage.getItem(\"EatChicken_passDays\")\r\n        if (passDays == null || passDays == undefined || passDays == \"\") {\r\n            passDays = 0\r\n            cc.sys.localStorage.setItem(\"EatChicken_passDays\", 0)\r\n        } else {\r\n            passDays = parseInt(passDays)\r\n        }\r\n\r\n        var days = 0\r\n        let date = new Date();\r\n        date = parseInt(date.getTime() / 1000)\r\n        var dailyDate = cc.sys.localStorage.getItem(\"EatChicken_dailyDate\")\r\n        if (dailyDate == null || dailyDate == undefined || dailyDate == \"\") {\r\n            cc.sys.localStorage.setItem(\"EatChicken_dailyDate\", date)\r\n            days = 1\r\n        } else {\r\n            dailyDate = parseInt(dailyDate)\r\n            console.log(date)\r\n            console.log(dailyDate)\r\n            if (date >= dailyDate) {\r\n                var newDate = date - dailyDate\r\n                var newtime = Tools.toTimeString2(newDate)\r\n                days = Math.floor(newtime.hour / 24) + 1\r\n            } else {\r\n                console.log(\"现在时间比之前时间早，调时间了？\")\r\n                cc.sys.localStorage.setItem(\"EatChicken_dailyDate\", date)\r\n                days = 1\r\n                cc.sys.localStorage.setItem(\"EatChicken_passDays\", 0)\r\n                passDays = 0\r\n            }\r\n        }\r\n\r\n        if (days - passDays > 0) {\r\n            console.log(\"执行了天数加一\")\r\n            passDays += (days - passDays)\r\n            GameApp.dataManager.globalData.curDailyGot = false\r\n            cc.sys.localStorage.setItem(\"EatChicken_dailyGotState\", false);\r\n            GameApp.dataManager.globalData.activeValue = 0\r\n            cc.sys.localStorage.setItem(\"EatChicken_activeValue\", GameApp.dataManager.globalData.activeValue)\r\n            GameApp.dataManager.globalData.progressGifts = [0, 0, 0, 0]\r\n            cc.sys.localStorage.setItem(\"EatChicken_progressGifts\", JSON.stringify(GameApp.dataManager.globalData.progressGifts))\r\n        }\r\n        cc.sys.localStorage.setItem(\"EatChicken_passDays\", passDays)\r\n        var des = passDays\r\n        des = des % 7\r\n        if (des == 0) {\r\n            des = 7\r\n        }\r\n        GameApp.dataManager.globalData.days = des\r\n        console.log(GameApp.dataManager.globalData.curDailyGot)\r\n        if (!GameApp.dataManager.globalData.curDailyGot) {\r\n            GameApp.uiManager.showPopup('DailyPopup')\r\n        }\r\n        // GameApp.uiManager.showPopup('DailyPopup')\r\n\r\n        if (GameApp.dataManager.globalData.recordState == RecordState.READY) {\r\n            Utils.startRecord(function () {\r\n                GameApp.dataManager.changeRecordState(RecordState.RECORD)\r\n            }, function (res) {\r\n                GameApp.uiManager.showToast(\"已到录屏最大时长!\")\r\n                if (res.videoPath != null && res.videoPath != '') {\r\n                    GameApp.dataManager.globalData.recordPath = res.videoPath\r\n                    Utils.recorder.stop()\r\n                }\r\n            })\r\n        }\r\n    },\r\n    onDestroy() {\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_ACTIVITYBTN)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_COIN_SHOW)\r\n    },\r\n    // update (dt) {},\r\n\r\n    soloBtnClick() {\r\n        GameApp.audioManager.playEffect('click');\r\n        GameApp.uiManager.showPopup('GiftPopup', (node) => {\r\n            node.getComponent(\"GiftPopup\").init(\"PrepareUI\", 1)\r\n        })\r\n    },\r\n    onNameChanged(event) {\r\n        // GameApp.dataManager.setPlayerName(event.string)\r\n        GameApp.dataManager.setPlayerName(Tools.getRandomElement(GameApp.dataManager.globalData.playerNameArr))\r\n        this.updateNameShow()\r\n    },\r\n\r\n    updateCoinShow() {\r\n        this.coinUI.string = GameApp.dataManager.userData.coinNum\r\n    },\r\n\r\n    updateNameShow() {\r\n        // this.nameUI.string = GameApp.dataManager.userData.playerName\r\n        this.nameUI.node.children[0].getComponent(cc.Label).string = GameApp.dataManager.userData.playerName\r\n    },\r\n\r\n    initSkinShow() {\r\n        if (GameApp.dataManager.userData.choosedSkinId < 21) {\r\n            this.curPlayerAnim.skeletonData = GameApp.uiManager.normalSkinData;\r\n            this.curPlayerAnim.setSkin(GameApp.dataManager.getSkinDataById(GameApp.dataManager.getChoosedSkinId()).skinname)\r\n        } else {\r\n            this.curPlayerAnim.skeletonData = GameApp.uiManager.advanceSkinDataGroup[GameApp.dataManager.userData.choosedSkinId - 21]\r\n        }\r\n        if (GameApp.dataManager.userData.choosedSkinId < 21) {\r\n            this.curPlayerAnim.setAnimation(0, 'await', true)\r\n        } else {\r\n            this.curPlayerAnim.setAnimation(0, 'await_main_1', false)\r\n            this.curPlayerAnim.setCompleteListener(() => {\r\n                this.curPlayerAnim.setAnimation(0, 'await_main_' + Tools.randomNum(1, 3), false)\r\n            })\r\n        }\r\n    },\r\n    \r\n    coinBtnClick() {\r\n        if (window.wx) {\r\n            GameApp.uiManager.showToast(\"暂未开放！\")\r\n            return\r\n        }\r\n\r\n\r\n        if (!this.onceClick) return;\r\n        this.onceClick = false\r\n        GameApp.audioManager.playEffect('click')\r\n        var self = this\r\n\r\n        if (window.tt) {\r\n            Utils.addVideo(\"addVideo\", function () { //看完了\r\n                self.onceClick = true\r\n                GameApp.uiManager.showToast(\"获得500金币\")\r\n                GameApp.dataManager.addCoin(500)\r\n                self.updateCoinShow()\r\n            }, function (_info) { //没看完\r\n                self.onceClick = true\r\n                _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast(\"未看完视频！\")\r\n            })\r\n        } else {\r\n            self.onceClick = true\r\n            GameApp.uiManager.showToast(\"非真机,获得500金币\")\r\n            GameApp.dataManager.addCoin(500)\r\n            self.updateCoinShow()\r\n        }\r\n\r\n    },\r\n    skinBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.showUI('SkinUI')\r\n    },\r\n    boxBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.showUI('BoxUI')\r\n    },\r\n    rankBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.showUI('RankUI')\r\n    },\r\n    weaponBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.showUI('GunUI')\r\n    },\r\n    shopBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n    },\r\n    shareBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        Utils.shareFromHomePage(() => {\r\n            GameApp.uiManager.showToast(\"感谢您的支持，赠送50金币\")\r\n            GameApp.dataManager.addCoin(50)\r\n        }, () => {\r\n            GameApp.uiManager.showToast(\"分享失败!\")\r\n        })\r\n    },\r\n    moreGameBtnClick() {\r\n        this.showActivityBtn()\r\n        if (window.tt) {\r\n            const systemInfo = tt.getSystemInfoSync();\r\n            // iOS 不支持，建议先检测再使用\r\n            if (systemInfo.platform !== \"ios\") {\r\n                // 打开互跳弹窗\r\n                tt.showMoreGamesModal({\r\n                    appLaunchOptions: [\r\n                        {\r\n                            appId: \"ttXXXXXX\",\r\n                            query: \"foo=bar&baz=qux\",\r\n                            extraData: {}\r\n                        }\r\n                        // {...}\r\n                    ],\r\n                    success(res) {\r\n                        console.log(\"success\", res.errMsg);\r\n                    },\r\n                    fail(res) {\r\n                        console.log(\"fail\", res.errMsg);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    },\r\n    showActivityBtn() {\r\n        this.activityBtnNode.getComponent(cc.Button).interactable = true\r\n        this.activityBtnNode.stopAllActions()\r\n        this.activityBtnNode.runAction(cc.sequence(cc.moveTo(0.2, cc.v2(this.originActivityBtnPos).add(cc.v2(90, 0))).easing(cc.easeBackOut()), cc.callFunc(() => {\r\n            this.activityBtnNode.runAction(cc.sequence(cc.moveBy(0.8, cc.v2(20, 0)).easing(cc.easeBounceOut(4)), cc.moveBy(0.2, cc.v2(-20, 0)), cc.moveBy(0.5, cc.v2(20, 0)).easing(cc.easeBounceOut(4)), cc.moveBy(0.2, cc.v2(-20, 0)), cc.delayTime(1)).repeatForever())\r\n        })))\r\n    },\r\n    activityBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        this.activityBtnNode.getComponent(cc.Button).interactable = false\r\n        this.activityBtnNode.stopAllActions()\r\n        this.activityBtnNode.runAction(cc.moveTo(0.2, this.originActivityBtnPos))\r\n        GameApp.uiManager.showPopup(\"ActivityPopup\")\r\n    },\r\n});\r\n","const Utils = require(\"Utils\")\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        boxAnim: sp.Skeleton,\r\n        delayShowPanel: cc.Node, //children 0是图，1是字\r\n        _itemType: 1,\r\n        _itemNum: 0,\r\n        _pieceIndex: 0,\r\n\r\n        onceClick: {\r\n            default: true,\r\n            visible: false\r\n        }\r\n    },\r\n\r\n    onLoad() {\r\n\r\n    },\r\n    init(_skinData, _type, _num, _pieceIndex) {\r\n        this._itemType = _type\r\n        this._itemNum = _num\r\n        this._pieceIndex = _pieceIndex\r\n        switch (_type) {\r\n            case 1: this.addCoin(_num); break;\r\n            case 2: this.addPiece(_num, _pieceIndex); break;\r\n        }\r\n        this.initSkinShow(_skinData)\r\n    },\r\n    initSkinShow(_skinData) {\r\n        this.boxAnim.skeletonData = _skinData\r\n        var arr = ['appear', 'big--small', 'open', 'open_await']//, 'last_open_await'\r\n        var i = 0\r\n        this.boxAnim.setAnimation(0, arr[i++], false)\r\n        this.boxAnim.setCompleteListener(() => {\r\n            if (i > arr.length - 1) return;\r\n            var loop = (i == arr.length - 1)\r\n            if (i == arr.length - 2) {\r\n                this.node.runAction(cc.sequence(cc.delayTime(0.8), cc.callFunc(() => {\r\n                    this.delayShowPanel.active = true\r\n                    Tools.scaleUpAndDowm(this.delayShowPanel.children[2])\r\n                })))\r\n            }\r\n            this.boxAnim.setAnimation(0, arr[i++], loop)\r\n        })\r\n    },\r\n    sureBtnClick() {\r\n        if (window.wx) {\r\n            GameApp.uiManager.showToast(\"暂未开放！\")\r\n            return\r\n        }\r\n        if (!this.onceClick) return;\r\n        this.onceClick = false\r\n        GameApp.audioManager.playEffect('click')\r\n        var self = this\r\n        if (window.tt) {\r\n            Utils.addVideo(\"addVideo\", function () { //看完了\r\n                self.onceClick = true\r\n                GameApp.dataManager.addPlayedVideoNum()\r\n                switch (self._itemType) {\r\n                    case 1: GameApp.dataManager.addCoin(self._itemNum); GameApp.uiManager.showToast(\"获得金币*\" + self._itemNum * 2); break;\r\n                    case 2: GameApp.dataManager.addPieceNum(self._pieceIndex, self._itemNum); GameApp.uiManager.showToast(\"获得<color=#faf80d>\" + GameApp.dataManager.getSkinDataById(self._pieceIndex).name + \"</color> 碎片*\" + self._itemNum * 2); break;\r\n                }\r\n                GameApp.uiManager.closePopup(\"OpenBoxPopup\")\r\n            }, function (_info) { //没看完\r\n                self.onceClick = true\r\n                _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast(\"未看完视频！\")\r\n            })\r\n        } else {\r\n            self.onceClick = true\r\n            GameApp.dataManager.addPlayedVideoNum()\r\n            switch (self._itemType) {\r\n                case 1: GameApp.dataManager.addCoin(self._itemNum); GameApp.uiManager.showToast(\"获得金币*\" + self._itemNum * 2); break;\r\n                case 2: GameApp.dataManager.addPieceNum(self._pieceIndex, self._itemNum); GameApp.uiManager.showToast(\"获得<color=#faf80d>\" + GameApp.dataManager.getSkinDataById(self._pieceIndex).name + \"</color> 碎片*\" + self._itemNum * 2); break;\r\n            }\r\n            GameApp.uiManager.closePopup(\"OpenBoxPopup\")\r\n        }\r\n    },\r\n    skipBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        var self = this\r\n        switch (self._itemType) {\r\n            case 1: GameApp.uiManager.showToast(\"获得金币*\" + self._itemNum); break;\r\n            case 2: GameApp.uiManager.showToast(\"获得<color=#faf80d>\" + GameApp.dataManager.getSkinDataById(self._pieceIndex).name + \"</color> 碎片*\" + self._itemNum); break;\r\n        }\r\n        GameApp.uiManager.closePopup(\"OpenBoxPopup\")\r\n    },\r\n    addCoin(_num) {\r\n        this.delayShowPanel.children[1].getComponent(cc.RichText).string = \"金币*\" + _num\r\n    },\r\n    addPiece(_num, _pieceIndex) {\r\n        this.setpieceIcon(_pieceIndex);\r\n        this.delayShowPanel.children[1].getComponent(cc.RichText).string = \"<color=#faf80d>\" + GameApp.dataManager.getSkinDataById(_pieceIndex).name + \"</color> 碎片*\" + _num\r\n    },\r\n    setpieceIcon(id) {\r\n        var self = this\r\n        cc.loader.loadRes(\"texture/skin_piece/card_p_\" + id, cc.SpriteFrame, function (err, spriteFrame) {\r\n            self.delayShowPanel.children[0].getComponent(cc.Sprite).spriteFrame = spriteFrame\r\n        });\r\n    },\r\n});\r\n","const Utils = require(\"Utils\")\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        winTitle: cc.Node,\r\n        winSprite: cc.Node,\r\n        loseTitle: cc.Node,\r\n        nameUI: cc.Label,\r\n        rankUI: cc.Label,\r\n        killUI: cc.Label,\r\n        allRewardUI: cc.Label,\r\n        rankRewardUI: cc.Label,\r\n        killRewardUI: cc.Label,\r\n        rewardBtnNode: cc.Button,\r\n        homeBtnNode: cc.Node,\r\n        onceClick: {\r\n            default: true,\r\n            visible: false\r\n        },\r\n        clickedShare: {\r\n            default: false,\r\n            visible: false\r\n        },\r\n    },\r\n\r\n\r\n    onLoad() {\r\n        // Utils.addInsertAd(\"addInsertAd\")\r\n        this.node.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(() => {\r\n            this.homeBtnNode.active = true\r\n        })))\r\n        Tools.scaleUpAndDowm(this.rewardBtnNode.node)\r\n    },\r\n    init(_isWin, rank) {\r\n        if (_isWin) {\r\n            rank = 1\r\n            this.winTitle.active = true\r\n            this.winSprite.active = true\r\n            GameApp.dataManager.userData.winNum++\r\n            GameApp.dataManager.addActivityNum(2, 1)\r\n        } else {\r\n            this.loseTitle.active = true\r\n            GameApp.dataManager.userData.alDieNum++\r\n        }\r\n        if (rank <= 5) {\r\n            GameApp.dataManager.userData.top5Num++\r\n        }\r\n\r\n        this.nameUI.string = GameApp.dataManager.userData.playerName\r\n        this.rankUI.string = rank\r\n        var killNum = GameApp.dataManager.globalData.inGameKillNum[0]._killNum\r\n\r\n        GameApp.dataManager.userData.allKillNum += killNum\r\n\r\n        this.killUI.string = killNum\r\n        var rankCoin = (30 - rank) * 50\r\n        var killCoin = 100 * killNum\r\n        var allCoin = rankCoin + killCoin\r\n        this.allRewardUI.string = allCoin\r\n        this.rankRewardUI.string = rankCoin\r\n        this.killRewardUI.string = killCoin\r\n\r\n        GameApp.dataManager.userData.allPlayNum++\r\n        GameApp.dataManager.userData.winRate = (GameApp.dataManager.userData.winNum / GameApp.dataManager.userData.allPlayNum).toFixed(2)\r\n        GameApp.dataManager.userData.kd = (GameApp.dataManager.userData.allKillNum / (GameApp.dataManager.userData.alDieNum == 0 ? 1 : GameApp.dataManager.userData.alDieNum)).toFixed(2)\r\n        GameApp.dataManager.userData.avgRank = parseInt((GameApp.dataManager.userData.avgRank + rank) / GameApp.dataManager.userData.allPlayNum)\r\n        GameApp.dataManager.userData.mostKill = killNum > GameApp.dataManager.userData.mostKill ? killNum : GameApp.dataManager.userData.mostKill\r\n        GameApp.dataManager.userData.avgLifeTime = parseInt((GameApp.dataManager.userData.avgLifeTime + GameApp.dataManager.globalData.lifeTime) / GameApp.dataManager.userData.allPlayNum)\r\n        GameApp.dataManager.addCoin(allCoin)\r\n    },\r\n    homeBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.showUI(\"LoginUI\")\r\n    },\r\n    rewardBtnClick() {\r\n        if (window.wx) {\r\n            GameApp.uiManager.showToast(\"暂未开放！\")\r\n            return\r\n        }\r\n        if (!this.onceClick) return;\r\n        this.onceClick = false\r\n        GameApp.audioManager.playEffect('click')\r\n        var self = this\r\n        if (window.tt) {\r\n            Utils.addVideo(\"addVideo\", function () { //看完了\r\n                self.onceClick = true\r\n                GameApp.dataManager.addPlayedVideoNum()\r\n                GameApp.uiManager.showPopup('OpenBoxPopup', (node) => {\r\n                    var getNum = Tools.randomNum(100, 1000)\r\n                    GameApp.dataManager.addCoin(getNum)\r\n                    node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[1], 1, getNum)\r\n                    self.onceClick = true\r\n                    self.rewardBtnNode.interactable = false\r\n                }, false)\r\n            }, function (_info) { //没看完\r\n                self.onceClick = true\r\n                _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast(\"未看完视频！\")\r\n            })\r\n        } else {\r\n            self.onceClick = true\r\n            GameApp.dataManager.addPlayedVideoNum()\r\n            GameApp.uiManager.showPopup('OpenBoxPopup', (node) => {\r\n                var getNum = Tools.randomNum(100, 1000)\r\n                GameApp.dataManager.addCoin(getNum)\r\n                node.getComponent('OpenBoxPopup').init(GameApp.uiManager.boxSkinDataGroup[1], 1, getNum)\r\n                self.onceClick = true\r\n                self.rewardBtnNode.interactable = false\r\n            }, false)\r\n        }\r\n    },\r\n    recordBtnClick() {\r\n        if (!this.onceClick) return\r\n        this.onceClick = false\r\n        var self = this\r\n        GameApp.audioManager.playEffect('click')\r\n        if (this.clickedShare) {\r\n            Utils.shareRecord(GameApp.dataManager.globalData.recordPath, function () {\r\n                // GameApp.dataManager.changeRecordState(RecordState.RECORD)\r\n                self.onceClick = true\r\n                console.log(\"分享完成了\")\r\n            }, function () {\r\n                self.onceClick = true\r\n                console.log(\"分享失败了\")\r\n            })\r\n            GameApp.dataManager.changeRecordState(RecordState.READY)\r\n            return;\r\n        }\r\n        if (GameApp.dataManager.globalData.recordTimer < 3) {\r\n            self.onceClick = true\r\n            GameApp.uiManager.showToast(\"录屏时间小于3秒!\")\r\n            // console.log(\"请过一会儿再分享\")\r\n            return;\r\n        } else {\r\n            console.log(\"结束了\")\r\n            var self = this\r\n            Utils.stopRecord(function (res) {\r\n                if (res != null) {\r\n                    GameApp.dataManager.globalData.recordPath = res.videoPath\r\n                }\r\n                self.clickedShare = true\r\n                GameApp.dataManager.changeRecordState(RecordState.READY)\r\n                Utils.shareRecord(GameApp.dataManager.globalData.recordPath, function () {\r\n                    // GameApp.dataManager.changeRecordState(RecordState.RECORD)\r\n                    self.onceClick = true\r\n                    console.log(\"分享完成了\")\r\n                }, function () {\r\n                    self.onceClick = true\r\n                    console.log(\"分享失败了\")\r\n                })\r\n\r\n            })\r\n\r\n        }\r\n    },\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        _borderGroup: []\r\n    },\r\n\r\n    init(_bg) {\r\n        this._borderGroup = _bg\r\n    },\r\n    update() {\r\n        let newPos = this.node.position\r\n        if (newPos.x < this._borderGroup[0].x) {\r\n            newPos.x = this._borderGroup[0].x\r\n        }\r\n        if (newPos.x > this._borderGroup[1].x) {\r\n            newPos.x = this._borderGroup[1].x\r\n        }\r\n        if (newPos.y > this._borderGroup[0].y) {\r\n            newPos.y = this._borderGroup[0].y\r\n        }\r\n        if (newPos.y < this._borderGroup[2].y) {\r\n            newPos.y = this._borderGroup[2].y\r\n        }\r\n        this.node.setPosition(newPos);\r\n    },\r\n});\r\n","import { SpeedType } from 'JoystickCommon'\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n\r\n        // from joystick\r\n        moveDir: {\r\n            default: cc.v2(1, 0),\r\n            displayName: 'Move Dir',\r\n            tooltip: '移动方向',\r\n        },\r\n        _speedType: {\r\n            default: SpeedType.STOP,\r\n            displayName: 'Speed Type',\r\n            type: SpeedType,\r\n            tooltip: '速度级别'\r\n        },\r\n\r\n        // from self\r\n        _moveSpeed: {\r\n            default: 0,\r\n            displayName: 'Move Speed',\r\n            tooltip: '移动速度'\r\n        },\r\n\r\n        stopSpeed: {\r\n            default: 0,\r\n            type: cc.Integer,\r\n            tooltip: '停止时速度'\r\n        },\r\n        fastSpeed: {\r\n            default: 100,\r\n            type: cc.Integer,\r\n            tooltip: '最快速度'\r\n        },\r\n        _borderGroup: []\r\n    },\r\n    onLoad() {\r\n    },\r\n    onEnable() {\r\n\r\n    },\r\n    onDisable() {\r\n\r\n    },\r\n    onDestroy() {\r\n\r\n    },\r\n    init(_bg) {\r\n        this._borderGroup = _bg\r\n    },\r\n    // methods\r\n    move() {\r\n        let newPos = this.node.position.add(this.moveDir.mul(this._moveSpeed / 60));\r\n        if (newPos.x < this._borderGroup[0].x) {\r\n            newPos.x = this._borderGroup[0].x\r\n        }\r\n        if (newPos.x > this._borderGroup[1].x) {\r\n            newPos.x = this._borderGroup[1].x\r\n        }\r\n        if (newPos.y > this._borderGroup[0].y) {\r\n            newPos.y = this._borderGroup[0].y\r\n        }\r\n        if (newPos.y < this._borderGroup[2].y) {\r\n            newPos.y = this._borderGroup[2].y\r\n        }\r\n        this.node.setPosition(newPos);\r\n    },\r\n    setSpeedType(_type) {\r\n        if (this._isDie) return;\r\n        if (this._speedType != _type) {\r\n            this._speedType = _type\r\n        }\r\n    },\r\n    setDir(_dir) {\r\n        this.moveDir = _dir\r\n    },\r\n    update(dt) {\r\n        switch (this._speedType) {\r\n            case SpeedType.STOP:\r\n                this._moveSpeed = this.stopSpeed;\r\n                break;\r\n            case SpeedType.NORMAL:\r\n                this._moveSpeed = this.fastSpeed\r\n                break;\r\n            case SpeedType.FAST:\r\n                this._moveSpeed = this.fastSpeed\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.move();\r\n\r\n    },\r\n    lateUpdate(dt) {\r\n        // this.mainC.node.setPosition(this.player.position)\r\n        // this.testC.node.setPosition(this.player.position)\r\n        GameApp.uiManager.mapCamera.node.setPosition(this.node.position)\r\n        // this.mipmapCamera.node.setPosition(this.node.position)\r\n    },\r\n\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        planeNode: cc.Node,\r\n        mapNode: cc.Node,\r\n        _chooseType: 0, //0是左对角,1是右对角\r\n        _speedUp: false,\r\n    },\r\n\r\n    onLoad() {\r\n\r\n    },\r\n    init(_speedUp) {\r\n        this._speedUp = _speedUp\r\n        var angleArr = [-135, 135, 45, -45]\r\n        var posIndex = Tools.randomNum(0, 3)\r\n        this._chooseType = posIndex % 2\r\n        this.planeNode.setPosition(this.node.children[0].convertToNodeSpaceAR(this.mapNode.children[posIndex].convertToWorldSpaceAR(cc.v2(0, 0))))\r\n        this.planeNode.angle = angleArr[posIndex]\r\n        switch (posIndex) {\r\n            case 0: this.planeNode.runAction(cc.moveTo(5, this.mapNode.children[2].position)); break;\r\n            case 1: this.planeNode.runAction(cc.moveTo(5, this.mapNode.children[3].position)); break;\r\n            case 2: this.planeNode.runAction(cc.moveTo(5, this.mapNode.children[0].position)); break;\r\n            case 3: this.planeNode.runAction(cc.moveTo(5, this.mapNode.children[1].position)); break;\r\n        }\r\n        GameApp.audioManager.playEffect('plane', 1, 2)\r\n    },\r\n    // update (dt) {},\r\n    jumpBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        this.planeNode.stopAllActions()\r\n        GameApp.uiManager.showUI('GameUI', (node) => {\r\n            var allL = 0\r\n            var curL = 0\r\n            // var tempChooseType = this._chooseType % 2\r\n            if (this._chooseType == 0) {\r\n                allL = cc.v2(this.mapNode.children[0].position).sub(this.mapNode.children[2].position).mag()\r\n                curL = cc.v2(this.planeNode.position).sub(this.mapNode.children[0].position).mag()\r\n            } else {\r\n                allL = cc.v2(this.mapNode.children[1].position).sub(this.mapNode.children[3].position).mag()\r\n                curL = cc.v2(this.planeNode.position).sub(this.mapNode.children[3].position).mag()\r\n            }\r\n            var bili = curL / allL\r\n            node.getComponent(\"GameUI\").init(this._chooseType, bili, this._speedUp)\r\n        })\r\n    },\r\n\r\n});\r\n","import { SpeedType } from 'JoystickCommon'\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n\r\n        // from joystick\r\n        moveDir: {\r\n            default: cc.v2(1, 0),\r\n            displayName: 'Move Dir',\r\n            tooltip: '移动方向',\r\n        },\r\n        _speedType: {\r\n            default: SpeedType.STOP,\r\n            displayName: 'Speed Type',\r\n            type: SpeedType,\r\n            tooltip: '速度级别'\r\n        },\r\n\r\n        // from self\r\n        _moveSpeed: {\r\n            default: 0,\r\n            displayName: 'Move Speed',\r\n            tooltip: '移动速度'\r\n        },\r\n\r\n        stopSpeed: {\r\n            default: 0,\r\n            type: cc.Integer,\r\n            tooltip: '停止时速度'\r\n        },\r\n        // normalSpeed: {//暂时不用\r\n        //     default: 100,\r\n        //     type: cc.Integer,\r\n        //     tooltip: '正常速度'\r\n        // },\r\n        // fastSpeed: {//暂时不用\r\n        //     default: 200,\r\n        //     type: cc.Integer,\r\n        //     tooltip: '最快速度'\r\n        // },\r\n\r\n        roleAnim: {\r\n            default: null,\r\n            type: sp.Skeleton,\r\n            tooltip: '角色的Spine动画组件',\r\n        },\r\n        _gunDir: {\r\n            default: cc.v2(1, 0),\r\n        },\r\n        gunAnim: {\r\n            default: null,\r\n            type: sp.Skeleton,\r\n            tooltip: '枪的Spine动画组件',\r\n        },\r\n        gunNode: {\r\n            default: null,\r\n            type: cc.Node,\r\n            tooltip: '枪节点',\r\n        },\r\n        _haveGun: false,\r\n        gunData: {\r\n            default: {}\r\n        },\r\n        skinData: {\r\n            default: {}\r\n        },\r\n        _pbc: cc.PhysicsBoxCollider,\r\n        nameUI: cc.Label,\r\n        bulletPrefab: cc.Prefab,\r\n\r\n        tempGroundWeapon: null,\r\n\r\n        hpBar: cc.ProgressBar,\r\n        amoBar: cc.ProgressBar,\r\n\r\n        starNode: cc.Node,\r\n        lastHitBullet: null, //避免被火箭筒的爆炸范围或导弹头重复计算伤害\r\n        _isAim: false,//瞄准状态，此状态下枪不可自主转向，避免鬼畜\r\n        _aimTimer: 0,\r\n        _aimInterval: 0.05,\r\n        _stepTimer: 0,\r\n        _stepInterval: 0.3,\r\n        _isDie: false,\r\n        arrowNode: cc.Node,\r\n        _mapNoGun: false,\r\n        _isProtect: false,\r\n        _isGas: false,\r\n        _inGasTimer: 0,\r\n        _inGasInterval: 0.5,\r\n    },\r\n    onLoad() {\r\n        GameApp.eventManager.on(EventNames.EVENT_PLAYER_SHOOT, this.shoot.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_PLAYER_RELOAD, this.reload.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_PICKUP_WEAPON, this.pickUpWeapon.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_UPDATE_TOPBAR_SHOW, this.updatePlayerTopBarShow.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_AIM, this.aimState.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_THEGAMESTART, this.theGameStart.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_FLASH, this.doFlash.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_RESUME_HEALTH, this.doResumeHealth.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_UPDATE_STAR_SHOW, this.updateStarShow.bind(this))\r\n        this._pbc = this.getComponent(cc.PhysicsBoxCollider)\r\n        // console.log(this._pbc)\r\n        this._pbc.tag = Tags.player\r\n    },\r\n    onEnable() {\r\n\r\n    },\r\n    onDisable() {\r\n\r\n    },\r\n    onDestroy() {\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_PLAYER_SHOOT)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_PLAYER_RELOAD)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_PICKUP_WEAPON)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_TOPBAR_SHOW)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_AIM)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_THEGAMESTART)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_FLASH)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_RESUME_HEALTH)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_STAR_SHOW)\r\n\r\n    },\r\n    init() {\r\n        // this.schedule(() => {\r\n        //     console.log(GameApp.dataManager.userData.choosedSkinId)\r\n        //     GameApp.dataManager.setSkinId(GameApp.dataManager.userData.choosedSkinId += 1)\r\n        // }, 2);\r\n        if (GameApp.dataManager.globalData.isInGame) {\r\n            this.roleProtect()\r\n        }\r\n        this.skinData = GameApp.dataManager.jsonData.SkinsData[GameApp.dataManager.userData.choosedSkinId - 1]\r\n        this.initNameShow()\r\n        this.initSkinShow()\r\n\r\n    },\r\n    roleProtect() {\r\n        GameApp.audioManager.playEffect('noticeFindGun', 0.5)\r\n        if (!this._haveGun) {\r\n            this._isProtect = true\r\n            this.arrowNode.active = true\r\n        }\r\n        this.node.opacity = 100\r\n    },\r\n    theGameStart() {\r\n        this._isProtect = false\r\n        this.node.opacity = 255\r\n    },\r\n    doFlash() {\r\n        if (this._isDie) return;\r\n        this.move(null, true)\r\n    },\r\n    doResumeHealth() {\r\n        if (this._isDie) return;\r\n        this.resumeHealth(GameApp.dataManager.getResumeHealthNum())\r\n    },\r\n    resumeHealth(_num) {\r\n        this.node.runAction(cc.sequence(cc.callFunc(() => {\r\n            GameApp.uiManager.showGameObject(\"InfoLabel\", (node) => {\r\n                node.getComponent(cc.RichText).string = \"<b><color=green>+\" + _num + \"</color></b>\"\r\n                let init = cc.callFunc(() => {\r\n                    GameApp.dataManager.addHp(_num)\r\n                    node.setPosition(0, 110)\r\n                })\r\n                let seq = cc.sequence(init, cc.spawn(cc.fadeIn(0.2), cc.scaleTo(0, 1.5), cc.moveTo(0.3, cc.v2(0, 190))), cc.fadeOut(0.3), cc.callFunc(() => {\r\n                    node.destroy()\r\n                }))\r\n                node.runAction(seq)\r\n            }, this.node)\r\n        }), cc.delayTime(0.3)).repeat(4))\r\n    },\r\n    updateStarShow() {\r\n        var _sum = 0\r\n        for (var i = 0; i < 4; i++) {\r\n            _sum += GameApp.dataManager.globalData.getItemAttrArr[i].rank\r\n        }\r\n        if (_sum == 0) {\r\n            // console.log(\"没有星\")\r\n            this.starNode.active = false\r\n        } else {\r\n            var level = parseInt((_sum - 1) / 3)\r\n            var starNum = _sum - level * 3\r\n            // console.log(level)\r\n            // console.log(starNum)\r\n            this.starNode.children[0].getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame(\"level_bg_\" + (level + 1))\r\n            this.starNode.children[1].getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame(\"level_star_\" + (level + 1) + \"_\" + starNum)\r\n            this.starNode.active = true\r\n            // console.log(this.starNode)\r\n        }\r\n    },\r\n    initNameShow() {\r\n        this.nameUI.string = GameApp.dataManager.userData.playerName\r\n        // var colorIndex = Math.floor((this.skinData.skinid - 1) / 5)\r\n        // this.nameUI.node.color = new cc.Color().fromHEX(NameColor[colorIndex]);\r\n    },\r\n    initSkinShow() {\r\n        if (GameApp.dataManager.userData.choosedSkinId < 21) {\r\n            this.roleAnim.skeletonData = GameApp.uiManager.normalSkinData\r\n            this.roleAnim.setSkin(this.skinData.skinname)\r\n        } else {\r\n            this.roleAnim.skeletonData = GameApp.uiManager.advanceSkinDataGroup[GameApp.dataManager.userData.choosedSkinId - 21]\r\n        }\r\n        var arr = GameApp.dataManager.userData.choosedSkinId < 21 ? ['await'] : ['await_fight_1']\r\n        this.roleAnim.setAnimation(0, arr[0], true)\r\n    },\r\n    updatePlayerTopBarShow() {\r\n        this.hpBar.progress = GameApp.dataManager.globalData.curHp / GameApp.dataManager.globalData.maxHp\r\n        this.amoBar.progress = GameApp.dataManager.globalData.curAmoNum / GameApp.dataManager.globalData.maxAmoNum\r\n    },\r\n    // methods\r\n    move(dt, _flash) {\r\n        if (_flash) {\r\n            var _borderGroup = GameApp.uiManager.getGame(\"GameMap\").getComponent(\"GameMap\").enemySpawnPosGroupNode.children\r\n            // console.log(_borderGroup)\r\n            let newPos1 = this.node.position.add(this.moveDir.mul(1000));\r\n            if (newPos1.x < _borderGroup[0].x) {\r\n                newPos1.x = _borderGroup[0].x\r\n            }\r\n            if (newPos1.x > _borderGroup[1].x) {\r\n                newPos1.x = _borderGroup[1].x\r\n            }\r\n            if (newPos1.y > _borderGroup[0].y) {\r\n                newPos1.y = _borderGroup[0].y\r\n            }\r\n            if (newPos1.y < _borderGroup[2].y) {\r\n                newPos1.y = _borderGroup[2].y\r\n            }\r\n            this.node.setPosition(newPos1);\r\n            GameApp.audioManager.playEffect('flash')\r\n            return;\r\n        }\r\n        if (this._moveSpeed != 0) {\r\n            this._stepTimer -= dt;\r\n            if (this._stepTimer < 0) {\r\n                this._stepTimer = this._stepInterval\r\n                GameApp.audioManager.playEffect('run', 0.3)\r\n            }\r\n        }\r\n        var theAngle = 90 - cc.misc.radiansToDegrees(Math.atan2(this.moveDir.y, this.moveDir.x))\r\n        if (theAngle > 180 || theAngle < 0) {\r\n            this.roleAnim.node.scaleX = -1\r\n        } else {\r\n            this.roleAnim.node.scaleX = 1\r\n        }\r\n        let newPos = this.node.position.add(this.moveDir.mul(this._moveSpeed * dt));\r\n        this.node.setPosition(newPos);\r\n        GameApp.eventManager.emit(EventNames.EVENT_UPDATE_MIPMAP_PLAYER, cc.v2(this.node.x / 50, this.node.y / 50))\r\n        // this.roleAnim.node.setPosition(0, 0)\r\n    },\r\n    setSpeedType(_type) {\r\n        if (this._isDie) return;\r\n        if (this._speedType != _type) {\r\n            this._speedType = _type\r\n\r\n            var arr = GameApp.dataManager.userData.choosedSkinId < 21 ? ['await', 'run2', 'run2'] : ['await_fight_1', 'run', 'run']\r\n            this.roleAnim && this.roleAnim.setAnimation(0, arr[_type], true)\r\n        }\r\n    },\r\n    setDir(_dir) {\r\n        if (this._isDie) return;\r\n        this.moveDir = _dir\r\n        if (this._isAim) return;\r\n        this.setGunDir(_dir)\r\n    },\r\n    setGunDir(_dir) {\r\n        if (!this._haveGun) return\r\n        if (!this.gunNode) return\r\n        if (_dir == null) {\r\n            _dir = this.moveDir\r\n        }\r\n        this._gunDir = _dir\r\n        this.gunNode.rotation = -cc.misc.radiansToDegrees(\r\n            Math.atan2(_dir.y, _dir.x)\r\n        );\r\n        let theAngle = 90 - this.gunNode.rotation\r\n\r\n        if (theAngle > 180 || theAngle < 0) {\r\n            this.gunNode.scaleY = -1\r\n        } else {\r\n            this.gunNode.scaleY = 1\r\n        }\r\n    },\r\n    setArrowDir(_dir) {\r\n        this.arrowNode.setPosition(cc.v2(this.arrowNode.parent.position).add(_dir.mul(100)))\r\n        this.arrowNode.children[0].children[0].setPosition(cc.v2(this.arrowNode.children[0].position).add(_dir.mul(30)))\r\n        this.arrowNode.children[0].children[0].rotation = -cc.misc.radiansToDegrees(\r\n            Math.atan2(_dir.y, _dir.x)\r\n        );\r\n    },\r\n    update(dt) {\r\n        if (this._isDie) return;\r\n        if (GameApp.dataManager.globalData.isInGame) {\r\n            GameApp.dataManager.globalData.lifeTime += dt\r\n        }\r\n        switch (this._speedType) {\r\n            case SpeedType.STOP:\r\n                this._moveSpeed = this.stopSpeed;\r\n                break;\r\n            case SpeedType.NORMAL:\r\n                this._moveSpeed = GameApp.dataManager.globalData.curSpeed;\r\n                // this._moveSpeed = this.fastSpeed;\r\n                break;\r\n            case SpeedType.FAST:\r\n                this._moveSpeed = GameApp.dataManager.globalData.curSpeed + Math.floor(GameApp.dataManager.globalData.curSpeed * GameApp.dataManager.getEquipItemAttr(EquipType.speed));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.move(dt);\r\n        this.checkGas(dt)\r\n        if (!this._haveGun && !this._mapNoGun) {\r\n            this._aimTimer -= dt\r\n            if (this._aimTimer < 0) {\r\n                this._aimTimer = this._aimInterval\r\n                this.arrowToNearestGun()\r\n            }\r\n        }\r\n\r\n        if (this._isProtect) return\r\n\r\n        if (this._isAim) {\r\n            this._aimTimer -= dt\r\n            if (this._aimTimer < 0) {\r\n                this._aimTimer = this._aimInterval\r\n                this.aimToNearest()\r\n            }\r\n        } else {\r\n            this._aimTimer = 0\r\n        }\r\n    },\r\n    lateUpdate(dt) {\r\n        // this.mainC.node.setPosition(this.player.position)\r\n        // this.testC.node.setPosition(this.player.position)\r\n        GameApp.uiManager.mapCamera.node.setPosition(this.node.position)\r\n        // this.mipmapCamera.node.setPosition(this.node.position)\r\n    },\r\n    checkGas(dt) {\r\n        if (GameApp.dataManager.globalData.gasConfig != null) {\r\n            let distance = cc.v2(GameApp.dataManager.globalData.gasConfig.safePosition).sub(cc.v2(this.node.position)).mag()\r\n            if (distance > GameApp.dataManager.globalData.gasConfig.gasCircle / 2) {\r\n                this._inGasTimer -= dt\r\n                if (this._inGasTimer < 0) {\r\n                    this._inGasTimer = this._inGasInterval\r\n                    this.beDamage(5, -1)\r\n                }\r\n                this._isGas = true\r\n            } else {\r\n                this._isGas = false\r\n            }\r\n        } else {\r\n            this._isGas = false\r\n        }\r\n    },\r\n    aimState(event) {\r\n        if (this._isDie) return;\r\n        if (!this._haveGun) return\r\n        this._isAim = event\r\n        if (this._isAim) {\r\n            this.aimToNearest()\r\n        }\r\n    },\r\n    aimToNearest() {\r\n        var allRoleArr = GameApp.dataManager.globalData.allRoleArr.concat()\r\n        // for (let i = 0; i < allRoleArr.length; i++) {\r\n        //     if (allRoleArr[i].skinData.skinid == this.skinData.skinid) {\r\n        //         allRoleArr.splice(i, 1)\r\n        //         break\r\n        //     }\r\n        // }\r\n        Tools.removeArray(allRoleArr, this.getComponent(\"Player\"))\r\n        var minDis = 1000000;\r\n        var index = -1;\r\n        for (let i = 0; i < allRoleArr.length; i++) {\r\n            // if (GameApp.uiManager.isInMapSight(allRoleArr[i].node)) {\r\n            var distance = cc.v2(allRoleArr[i].node.position).sub(cc.v2(this.node.position)).mag()\r\n            if (distance < minDis && distance < this.gunData.range * 1.4) {\r\n                minDis = distance\r\n                index = i\r\n            }\r\n            // }\r\n        }\r\n        var dir = null\r\n        if (index == -1) {\r\n            this._isAim = false\r\n        } else {\r\n            this._isAim = true\r\n            var aimEnemy = allRoleArr[index].node\r\n            dir = cc.v2(aimEnemy.position).sub(cc.v2(this.node.position)).normalize()\r\n        }\r\n        this.setGunDir(dir)\r\n    },\r\n    arrowToNearestGun() {\r\n        var allGunArr = GameApp.dataManager.globalData.allGunArr.concat()\r\n        var minDis = 1000000;\r\n        var index = -1;\r\n        for (let i = 0; i < allGunArr.length; i++) {\r\n            var distance = cc.v2(allGunArr[i].position).sub(cc.v2(this.node.position)).mag()\r\n            if (distance < minDis) {\r\n                minDis = distance\r\n                index = i\r\n            }\r\n        }\r\n        var dir = null\r\n        if (index == -1) {\r\n            this._mapNoGun = true\r\n            this.arrowNode.active = false\r\n        } else {\r\n            var aimGun = allGunArr[index]\r\n            dir = cc.v2(aimGun.position).sub(cc.v2(this.node.position)).normalize()\r\n            this.setArrowDir(dir)\r\n        }\r\n    },\r\n    shoot() {\r\n        if (this._isDie) return;\r\n        if (!this._haveGun) return\r\n        if (GameApp.dataManager.reduceAmo()) {\r\n\r\n            this.gunAnim.setAnimation(0, 'attack_' + this.gunData.skinname, false)\r\n            var power = Math.ceil(this.gunData.power * (GameApp.dataManager.globalData.curDamage + GameApp.dataManager.getEquipItemAttr(EquipType.damage)))\r\n            var isCrit = false\r\n            if (Tools.isCrit(GameApp.dataManager.globalData.curCrit + GameApp.dataManager.getEquipItemAttr(EquipType.crit))) {\r\n                power *= 2\r\n                isCrit = true\r\n            }\r\n            if (this.gunData.weaponid == 1002) {\r\n                GameApp.audioManager.playEffect('shot_shoot', 0.6)\r\n                var bullet1 = cc.instantiate(this.bulletPrefab)\r\n                var bullet2 = cc.instantiate(this.bulletPrefab)\r\n                var bullet3 = cc.instantiate(this.bulletPrefab)\r\n                let bulletPos = this.node.parent.parent.convertToNodeSpaceAR(this.gunNode.children[0].convertToWorldSpaceAR(cc.v2(0, 0)))\r\n                bullet1.parent = bullet2.parent = bullet3.parent = this.node.parent.parent\r\n                bullet1.setPosition(bulletPos)\r\n                bullet2.setPosition(bulletPos)\r\n                bullet3.setPosition(bulletPos)\r\n                bullet1.rotation = this.gunNode.rotation\r\n                bullet2.rotation = this.gunNode.rotation + 30\r\n                bullet3.rotation = this.gunNode.rotation - 30\r\n                var cloneGunDir = cc.v2(this._gunDir)\r\n                var bulletC1 = bullet1.getComponent('Bullet')\r\n                bulletC1._belongTag = this._pbc.tag\r\n                bulletC1._belongName = GameApp.dataManager.userData.playerName\r\n                bulletC1._flyDir = cloneGunDir\r\n                bulletC1.init(this.gunData, power, isCrit)\r\n                var bulletC2 = bullet2.getComponent('Bullet')\r\n                bulletC2._belongTag = this._pbc.tag\r\n                bulletC2._belongName = GameApp.dataManager.userData.playerName\r\n                bulletC2._flyDir = cloneGunDir.rotate(-cc.misc.degreesToRadians(30))\r\n                bulletC2.init(this.gunData, power, isCrit)\r\n                var bulletC3 = bullet3.getComponent('Bullet')\r\n                bulletC3._belongTag = this._pbc.tag\r\n                bulletC3._belongName = GameApp.dataManager.userData.playerName\r\n                bulletC3._flyDir = cloneGunDir.rotate(-cc.misc.degreesToRadians(-30))\r\n                bulletC3.init(this.gunData, power, isCrit)\r\n            } else {\r\n                if (this.gunData.weaponid == 1003 || this.gunData.weaponid == 1103) {\r\n                    GameApp.audioManager.playEffect('charge_shoot', 0.6)\r\n                } else if (this.gunData.weaponid == 1005 || this.gunData.weaponid == 1105) {\r\n                    GameApp.audioManager.playEffect('missile_shoot', 0.6)\r\n                } else if (this.gunData.weaponid == 1102) {\r\n                    GameApp.audioManager.playEffect('shot_shoot', 0.6)\r\n                }\r\n                var bullet = cc.instantiate(this.bulletPrefab)\r\n                let bulletPos = this.node.parent.parent.convertToNodeSpaceAR(this.gunNode.children[0].convertToWorldSpaceAR(cc.v2(0, 0)))\r\n                bullet.parent = this.node.parent.parent\r\n                bullet.setPosition(bulletPos)\r\n                bullet.rotation = this.gunNode.rotation\r\n                var bulletC = bullet.getComponent('Bullet')\r\n                bulletC._belongTag = this._pbc.tag\r\n                bulletC._belongName = GameApp.dataManager.userData.playerName\r\n                bulletC._flyDir = this._gunDir\r\n                bulletC.init(this.gunData, power, isCrit)\r\n            }\r\n            this.updatePlayerTopBarShow()\r\n        } else {\r\n            GameApp.uiManager.getUI(GameApp.uiManager.uiRoot.children[0].name).getComponent(GameApp.uiManager.uiRoot.children[0].name).reloadBtnClick()\r\n        }\r\n        if (GameApp.dataManager.globalData.curAmoNum == 0) {\r\n            GameApp.uiManager.getUI(GameApp.uiManager.uiRoot.children[0].name).getComponent(GameApp.uiManager.uiRoot.children[0].name).reloadBtnClick()\r\n        }\r\n    },\r\n    reload() {\r\n        if (this._isDie) return;\r\n        if (!this._haveGun) return\r\n        GameApp.audioManager.playEffect('reload', 0.6)\r\n        this.gunAnim.setAnimation(0, 'reload_' + this.gunData.skinname, false)\r\n    },\r\n    equipWeapon(_kind) {\r\n        GameApp.audioManager.playEffect('pick_item', 0.6)\r\n        this.gunData = GameApp.dataManager.jsonData.WeaponData[_kind]\r\n        this._haveGun = true\r\n        this.arrowNode.active = false\r\n        GameApp.eventManager.emit(EventNames.EVENT_SHOW_RELOAD_UI, true)\r\n        GameApp.dataManager.globalData.shootInterval = this.gunData.shootdelay\r\n        GameApp.dataManager.globalData.reloadInterval = this.gunData.reloaddelay\r\n        GameApp.dataManager.globalData.maxAmoNum = this.gunData.clipnum\r\n        GameApp.dataManager.reloadAmo()\r\n        this.gunNode.active = true\r\n        if (_kind < 3) {\r\n            this.gunAnim.skeletonData = GameApp.uiManager.gunSkinDataGroup[0]\r\n        } else {\r\n            this.gunAnim.skeletonData = GameApp.uiManager.gunSkinDataGroup[1]\r\n        }\r\n        this.gunAnim.setSkin(this.gunData.skinname)\r\n        this.setGunDir(this.moveDir)\r\n\r\n        // this.gunAnim.setAnimation(0, 'attack_' + this.gunData.skinname, false)\r\n    },\r\n    getItem() {\r\n\r\n    },\r\n    onBeginContact(contact, self, other) {\r\n        if (self.tag == Tags.empty) return;\r\n        if (other.tag == Tags.item) {\r\n            var groundItem = other.node.getComponent('GroundItem')\r\n            if (groundItem.itemType._type == ItemType.weapon) {\r\n                this.tempGroundWeapon = groundItem\r\n                if (!this._haveGun) {\r\n                    Tools.removeArray(GameApp.dataManager.globalData.allGunArr, other.node)\r\n                    this.pickUpWeapon()\r\n                } else {\r\n                    GameApp.eventManager.emit(EventNames.EVENT_SHOW_GUN_UI, true, GameApp.dataManager.jsonData.WeaponData[groundItem.itemType._kind])\r\n                }\r\n                // var _kind = groundItem.itemType._kind\r\n                // if (!this._haveGun) {\r\n                //     other.node.destroy()\r\n                // } else {\r\n                //     let _param = {\r\n                //         _type: ItemType.weapon,\r\n                //         _kind: GameApp.dataManager.jsonData.WeaponData.indexOf(this.gunData)\r\n                //     }\r\n                //     groundItem.init(_param)\r\n                // }\r\n                // this.equipWeapon(_kind)\r\n            } else if (groundItem.itemType._type == ItemType.item) {\r\n                this.getItem()\r\n            }\r\n        } else if (other.tag == Tags.bullet) {\r\n            if (!GameApp.dataManager.globalData.isInGame) return;\r\n            if (this._isDie) return\r\n            var bC = other.node.getComponent('Bullet')\r\n            if (bC._belongTag == self.tag) return\r\n            if (other.node == this.lastHitBullet) return;\r\n            this.lastHitBullet = other.node\r\n            this.beDamage(bC._power, bC._belongTag, bC._belongName, bC._isCrit)\r\n        } else if (other.tag == Tags.boom) {\r\n            if (this._isDie) return\r\n            this.beDamage(999, -2)\r\n        }\r\n    },\r\n    onEndContact(contact, self, other) {\r\n        if (self.tag == Tags.empty) return;\r\n        if (other.tag == Tags.item) {\r\n            var groundItem = other.node.getComponent('GroundItem')\r\n            if (groundItem.itemType._type == ItemType.weapon) {\r\n                // console.log(\"初始化\")\r\n                this.tempGroundWeapon = null\r\n                GameApp.eventManager.emit(EventNames.EVENT_SHOW_GUN_UI, false)\r\n            } else if (groundItem.itemType._type == ItemType.item) {\r\n\r\n            }\r\n        }\r\n    },\r\n\r\n    pickUpWeapon() {\r\n        var _kind = this.tempGroundWeapon.itemType._kind\r\n        if (!this._haveGun) {\r\n            this.tempGroundWeapon.node.destroy()\r\n        }\r\n        else {\r\n            let _param = {\r\n                _type: ItemType.weapon,\r\n                _kind: GameApp.dataManager.jsonData.WeaponData.indexOf(this.gunData)\r\n            }\r\n            this.tempGroundWeapon.init(_param)\r\n            GameApp.eventManager.emit(EventNames.EVENT_SHOW_GUN_UI, true, this.gunData)\r\n        }\r\n        this.equipWeapon(_kind)\r\n    },\r\n    beDamage(_power, _belongIndex, _belongName, _isCrit) {\r\n        GameApp.uiManager.showGameObject(\"InfoLabel\", (node) => {\r\n            var originPos = node.parent.convertToNodeSpaceAR(this.node.convertToWorldSpaceAR(cc.v2(0.5, 0.5)))\r\n            node.setPosition(originPos)\r\n            //皮肤减伤+装备减伤\r\n            var _isDef = Math.ceil(_power * GameApp.dataManager.globalData.curDef) + Math.ceil(_power * GameApp.dataManager.getEquipItemAttr(EquipType.def))\r\n            _power -= _isDef\r\n            var str = \"<color=red>-\" + _power + \"</color>\"\r\n            if (_isCrit) {\r\n                str = \"<color=red>暴击-\" + _power + \"</color>\"\r\n            }\r\n            if (_isDef) {\r\n                str += \"<color=#0fffff>减伤\" + _isDef + \"</color>\"\r\n            }\r\n            node.getComponent(cc.RichText).string = \"<b>\" + str + \"</b>\"\r\n            let desPos = cc.v2(Tools.randomNum(60, 100), Tools.randomNum(60, 100))\r\n            let bezier = [originPos, cc.v2(originPos.x + desPos.x - 20, originPos.y + desPos.y + 20), originPos.add(desPos)];\r\n            let seq = cc.sequence(cc.spawn(cc.fadeIn(0.2), cc.scaleTo(0.3, 1.5), cc.bezierTo(0.3, bezier)), cc.delayTime(0.5), cc.fadeOut(0.3), cc.callFunc(() => {\r\n                node.destroy()\r\n            }))\r\n            node.runAction(seq)\r\n        }, this.node.parent.parent)\r\n        if (GameApp.dataManager.reduceHp(_power)) {\r\n            // console.log('收到子弹攻击')\r\n        } else {\r\n            // console.log('死掉了!!!!!!')\r\n            GameApp.audioManager.playEffect('maleDeath', 0.5)\r\n            this.node.parent = GameApp.uiManager.getGame(\"GameMap\").getChildByName(\"DeadObjectNode\")\r\n            this._pbc.enabled = false\r\n            this._isDie = true\r\n            if (_belongIndex == -1) {\r\n                GameApp.uiManager.showToast(GameApp.dataManager.userData.playerName + \" 被毒出局\")\r\n            } else if (_belongIndex == -2) {\r\n                GameApp.uiManager.showToast(GameApp.dataManager.userData.playerName + \" 被轰炸出局\")\r\n            } else {\r\n                var killNum = GameApp.dataManager.addKillNum(_belongIndex, _belongName)\r\n                if (killNum > 1) {\r\n                    var soundIndex = killNum > 5 ? 5 : killNum\r\n                    GameApp.audioManager.playEffect('kill' + soundIndex, 0.5)\r\n                    GameApp.uiManager.showToast(_belongName, null, killNum)\r\n                } else {\r\n                    GameApp.uiManager.showToast(_belongName + \" 击杀了 \" + GameApp.dataManager.userData.playerName)\r\n                }\r\n            }\r\n\r\n            // for (var i in GameApp.dataManager.globalData.allRoleArr) {\r\n            //     if (GameApp.dataManager.globalData.allRoleArr[i].skinData.skinid == this.skinData.skinid) {\r\n            //         GameApp.dataManager.globalData.allRoleArr.splice(i, 1)\r\n            //         break\r\n            //     }\r\n            // }\r\n            if (this._haveGun) {\r\n                var theParentC = GameApp.uiManager.gameRoot.children[0].getComponent(\"GameMap\")\r\n                GameApp.uiManager.showGameObject(\"GroundItem\", (node) => {\r\n                    let ddd = theParentC.allGunNode.convertToNodeSpaceAR(this.node.convertToWorldSpaceAR(cc.v2(0, 0)))\r\n                    node.parent = theParentC.allGunNode\r\n                    node.setPosition(ddd)\r\n                    let _param = {\r\n                        _type: ItemType.weapon,\r\n                        _kind: Tools.getIndex(GameApp.dataManager.jsonData.WeaponData, this.gunData)\r\n                    }\r\n                    // console.log(_param._kind)\r\n                    node.getComponent('GroundItem').init(_param)\r\n                    GameApp.dataManager.globalData.allGunArr.push(node)\r\n                })\r\n            }\r\n            var arr = GameApp.dataManager.userData.choosedSkinId < 21 ? ['dead'] : ['dead2']\r\n            this.roleAnim.setAnimation(0, arr[0], false)\r\n            this.gunNode.active = false\r\n            Tools.removeArray(GameApp.dataManager.globalData.allRoleArr, this.node.getComponent('Player'))\r\n            var theRank = GameApp.dataManager.globalData.allRoleArr.length\r\n            GameApp.uiManager.getPopup(\"OverPopup\") == null && GameApp.uiManager.showPopup(\"OverPopup\", (node) => {\r\n                node.getComponent(\"OverPopup\").init(false, theRank + 1)\r\n            })\r\n            GameApp.eventManager.emit(EventNames.EVENT_SHOW_ALLROLENUM_UI)\r\n\r\n        }\r\n    }\r\n});\r\n","var PREFAB_PATH = {\r\n    ToastUI: 'uiPrefab/ToastUI',\r\n    SplashUI: 'uiPrefab/SplashUI',\r\n    LoginUI: 'uiPrefab/LoginUI',\r\n    SkinUI: 'uiPrefab/SkinUI',\r\n    SkinInfoPopup: 'uiPrefab/SkinInfoPopup',\r\n    BoxUI: 'uiPrefab/BoxUI',\r\n    GunUI: 'uiPrefab/GunUI',\r\n    RankUI: 'uiPrefab/RankUI',\r\n    GiftPopup: 'uiPrefab/GiftPopup',\r\n    OpenBoxPopup: 'uiPrefab/OpenBoxPopup',\r\n    PrepareUI: 'uiPrefab/PrepareUI',\r\n    PrepareMap: 'uiPrefab/PrepareMap',\r\n    Player: 'game/Player',\r\n    Enemy: 'game/Enemy',\r\n    GroundItem: 'game/GroundItem',\r\n    PlaneUI: 'uiPrefab/PlaneUI',\r\n    GameUI: 'uiPrefab/GameUI',\r\n    GameMap: 'uiPrefab/GameMap',\r\n    ParatrooperPlayer: 'game/ParatrooperPlayer',\r\n    ParatrooperEnemy: 'game/ParatrooperEnemy',\r\n    InfoLabel: 'game/InfoLabel',\r\n    DropBox: 'game/DropBox',\r\n    MipBox: 'game/MipBox',\r\n    Boom: 'game/Boom',\r\n    OverPopup: 'uiPrefab/OverPopup',\r\n    DailyPopup: 'uiPrefab/DailyPopup',\r\n    ActivityPopup: 'uiPrefab/ActivityPopup'\r\n    // BoxLayer: 'uiPrefab/BoxLayer',\r\n    // CoinNode: 'uiPrefab/CoinNode',\r\n    // GameLayer: 'uiPrefab/GameLayer',\r\n    // GameUI: 'uiPrefab/GameUI',\r\n    // GiftLayer: 'uiPrefab/GiftLayer',\r\n    // ItemNode: 'uiPrefab/ItemNode',\r\n    // LoadLayer: 'uiPrefab/LoadLayer',\r\n    // MainLayer: 'uiPrefab/MainLayer',\r\n    // Skins: 'data/skins.json'\r\n};\r\n\r\nmodule.exports = PREFAB_PATH;\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        tiledMap: cc.TiledMap,\r\n        objectPrefab: cc.Prefab,\r\n        colliderPrefab: cc.Prefab,\r\n        groundItemPrefab: cc.Prefab,\r\n\r\n        waitLabel: cc.Node,\r\n        allObjectNode: cc.Node,\r\n        allColliderNode: cc.Node,\r\n        allGunNode: cc.Node,\r\n        enemySpawnPosGroupNode: cc.Node,\r\n\r\n        mapAtlas: cc.SpriteAtlas,\r\n\r\n        _timer0: 0.1,\r\n        _timer: 0.1,\r\n        readyToSort: false\r\n    },\r\n\r\n\r\n    onLoad() {\r\n        this.initMapShow()\r\n        this.showPlayer()\r\n        this.showEnemy()\r\n    },\r\n    update(dt) {\r\n        if (!this.readyToSort) return;\r\n        this._timer -= dt\r\n        if (this._timer < 0) {\r\n            this._timer = this._timer0\r\n            this.sortAll()\r\n        }\r\n\r\n    },\r\n    initMapShow() {\r\n        GameApp.dataManager.globalData.allRoleArr = []\r\n        GameApp.dataManager.globalData.allGunArr = []\r\n        // this.node.children[2].active = true\r\n        let wallLayer = this.tiledMap.getLayer(\"wall\")\r\n        this.tiledMap.getObjectGroup(\"dynamic\")._objects.forEach(element => {\r\n            let obj = cc.instantiate(this.objectPrefab)\r\n            obj.getComponent(cc.Sprite).spriteFrame = this.mapAtlas.getSpriteFrame(element.name.split('.')[0])\r\n            obj.parent = this.allColliderNode\r\n            let desPos = wallLayer.getPositionAt(this.getTilePos(cc.v2(element.x, element.y)))\r\n            obj.setPosition(desPos)\r\n            let ddd = this.allObjectNode.convertToNodeSpaceAR(obj.convertToWorldSpaceAR(cc.v2(0, 0)))\r\n            obj.parent = this.allObjectNode\r\n            obj.setPosition(ddd)\r\n        });\r\n        this.tiledMap.getObjectGroup(\"collision\")._objects.forEach(element => {\r\n            let obj = cc.instantiate(this.colliderPrefab)\r\n            let coli = obj.getComponent(cc.PhysicsBoxCollider)\r\n            coli.size = cc.size(element.width, element.height)\r\n            coli.offset = cc.v2(element.width / 2, -element.height / 2)\r\n            coli.apply()\r\n            this.allColliderNode.addChild(obj)\r\n            obj.setPosition(cc.v2(element.x, element.y))\r\n            coli.tag = Tags.collider\r\n        });\r\n        this.tiledMap.getObjectGroup(\"gun\")._objects.forEach(element => {\r\n            // var element = this.tiledMap.getObjectGroup(\"gun\")._objects[0]\r\n            let obj = cc.instantiate(this.groundItemPrefab)\r\n            obj.parent = this.allColliderNode\r\n            let desPos = wallLayer.getPositionAt(this.getTilePos(cc.v2(element.x, element.y)))\r\n            obj.setPosition(desPos)\r\n            let ddd = this.allGunNode.convertToNodeSpaceAR(obj.convertToWorldSpaceAR(cc.v2(0, 0)))\r\n            obj.parent = this.allGunNode\r\n            obj.setPosition(ddd)\r\n            let _param = {\r\n                _type: ItemType.weapon,\r\n                _kind: Tools.randomNum(0, 5)\r\n            }\r\n            obj.getComponent('GroundItem').init(_param)\r\n            GameApp.dataManager.globalData.allGunArr.push(obj)\r\n        });\r\n\r\n    },\r\n    //将像素坐标转化为瓦片坐标，posInPixel：目标节点的position\r\n    getTilePos(posInPixel) {\r\n        var mapSize = this.tiledMap.node.getContentSize();\r\n        var tileSize = this.tiledMap.getTileSize();\r\n        var x = Math.floor(posInPixel.x / tileSize.width);\r\n        var y = Math.floor((mapSize.height - posInPixel.y) / tileSize.height);\r\n        return cc.v2(x, y);\r\n    },\r\n    showPlayer() {\r\n        GameApp.uiManager.showGameObject('Player', (node) => {\r\n            // GameApp.dataManager.globalData.allRoleArr.push(node)\r\n            // node.setPosition(0, 0)\r\n            var c = node.getComponent(\"Player\")\r\n            GameApp.uiManager.getUI(\"PrepareUI\").getComponent(\"PrepareUI\").joystick.getComponent(\"Joystick\").player = c\r\n            c.init()\r\n            GameApp.dataManager.globalData.allRoleArr.push(c)\r\n            this.readyToSort = true\r\n        }, this.allObjectNode)\r\n    },\r\n    showEnemy() {\r\n        var tempPosArr = []\r\n        var standardArr = this.enemySpawnPosGroupNode.children\r\n        // var xRangeArr = []\r\n        // var eachSpaceX = (standardArr[1].x - standardArr[0].x) / 6\r\n        // for (let i = 0; i < 7; i++) {\r\n        //     xRangeArr.push(standardArr[0].x + eachSpaceX * i)\r\n        // }\r\n        // var yRangeArr = []\r\n        // var eachSpaceY = (standardArr[2].y - standardArr[0].y) / 5\r\n        // for (let i = 0; i < 6; i++) {\r\n        //     yRangeArr.push(standardArr[0].y + eachSpaceY * i)\r\n        // }\r\n        // for (let i = 0; i < xRangeArr.length; i++) {\r\n        //     for (let j = 0; j < yRangeArr.length; j++) {\r\n        //         tempPosArr.push(cc.v2(xRangeArr[i], yRangeArr[j]))\r\n        //     }\r\n        // }\r\n\r\n        // tempPosArr = Tools.getRandomAmountElementUnRepeat(tempPosArr, 30)\r\n        var tagNum = Tags.enemy\r\n        for (var i = 0; i < 5; i++) {\r\n            if (i + 1 == GameApp.dataManager.userData.choosedSkinId) {\r\n                continue;\r\n            }\r\n            GameApp.uiManager.showGameObject('Enemy', (node) => {\r\n                // GameApp.dataManager.globalData.allRoleArr.push(node)\r\n                node.getComponent(cc.PhysicsBoxCollider).tag = tagNum++\r\n                node.setPosition(cc.v2(Tools.randomNum(standardArr[0].x, standardArr[1].x), Tools.randomNum(standardArr[2].y, standardArr[0].y)))\r\n                var c = node.getComponent(\"Enemy\")\r\n                c.init(i + 1, GameApp.dataManager.jsonData.RobotName[i])\r\n                GameApp.dataManager.globalData.allRoleArr.push(c)\r\n            }, this.allObjectNode)\r\n        }\r\n        // var index = 0\r\n        var func = function () {\r\n            if (i == 30) return\r\n            if (i + 1 == GameApp.dataManager.userData.choosedSkinId) {\r\n\r\n            } else {\r\n                GameApp.uiManager.showGameObject('Enemy', (node) => {\r\n                    // GameApp.dataManager.globalData.allRoleArr.push(node)\r\n                    node.getComponent(cc.PhysicsBoxCollider).tag = tagNum++\r\n                    node.setPosition(cc.v2(Tools.randomNum(standardArr[0].x, standardArr[1].x), Tools.randomNum(standardArr[2].y, standardArr[0].y)))\r\n                    var c = node.getComponent(\"Enemy\")\r\n                    c.init(i + 1, GameApp.dataManager.jsonData.RobotName[i])\r\n                    GameApp.dataManager.globalData.allRoleArr.push(c)\r\n                    GameApp.eventManager.emit(EventNames.EVENT_SHOW_ALLROLENUM_UI)\r\n                }, this.allObjectNode)\r\n            }\r\n            i++\r\n        }.bind(this)\r\n        this.schedule(func, 0.5, 25, 0) // 0.5\r\n    },\r\n    sortAll() {\r\n        var cloneObjArr = this.allObjectNode.children.concat()\r\n        var tempDict = []\r\n        var tempIndex = []\r\n        for (let i in cloneObjArr) {\r\n            if (GameApp.uiManager.isInMapSight(cloneObjArr[i])) {\r\n                tempDict.push({\r\n                    y: cloneObjArr[i].y,\r\n                    index: i\r\n                })\r\n                tempIndex.push(i)\r\n            }\r\n        }\r\n        // console.log(tempDict)\r\n        tempDict.sort((a, b) => b.y - a.y)\r\n        for (let i in tempDict) {\r\n            cloneObjArr[tempDict[i].index].setSiblingIndex(tempIndex[i])\r\n        }\r\n        // console.log(tempDict)\r\n        // console.log(this.allObjectNode.children)\r\n    }\r\n});\r\n\r\n\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        joystick: {\r\n            default: null,\r\n            type: cc.Node,\r\n            tooltip: '摇杆的脚本'\r\n        },\r\n        soundNode: cc.Node,\r\n        shootBtn: cc.Node,\r\n        reloadBtnNode: cc.Node,\r\n        amoUI: cc.Label,\r\n        allRoleNumUI: cc.Label,\r\n        weaponBtnNode: cc.Node,\r\n        prepareTopNode: cc.Node,\r\n        countDownSpGroup: [cc.SpriteFrame],\r\n\r\n        _shootFlag: false,\r\n        _shootTimer: 0,\r\n        _reloadFlag: false,\r\n        _reloadTimer: 0,\r\n\r\n        _timeCountDown: 20,\r\n        _onceCountDownAnim: false,\r\n        _onceExecute: true,\r\n    },\r\n\r\n    onLoad() {\r\n        GameApp.dataManager.globalData.isInGame = false\r\n        GameApp.eventManager.on(EventNames.EVENT_UPDATE_AMO_SHOW, this.updateAmoShow.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_SHOW_GUN_UI, this.updateGunUIShow.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_SHOW_RELOAD_UI, this.updateReloadUIShow.bind(this))\r\n        GameApp.eventManager.on(EventNames.EVENT_SHOW_ALLROLENUM_UI, this.updateAllRoleNumUIShow.bind(this))\r\n        this.shootBtn.on(cc.Node.EventType.TOUCH_START, this.onTouchBegin, this);\r\n        this.shootBtn.on(cc.Node.EventType.TOUCH_END, this.onTouchLeave, this);\r\n        this.shootBtn.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchLeave, this);\r\n        GameApp.uiManager.showGame('PrepareMap')\r\n        this.weaponBtnNode.children[0].runAction(cc.rotateBy(0.2, 90).repeatForever())\r\n        this.prepareTopNode.children[0].runAction(cc.sequence(cc.callFunc(() => {\r\n            this.prepareTopNode.children[0].children[0].active = true\r\n        }), cc.delayTime(0.4), cc.callFunc(() => {\r\n            this.prepareTopNode.children[0].children[1].active = true\r\n        }), cc.delayTime(0.4), cc.callFunc(() => {\r\n            this.prepareTopNode.children[0].children[2].active = true\r\n        }), cc.delayTime(0.4), cc.callFunc(() => {\r\n            this.prepareTopNode.children[0].children[0].active = false\r\n            this.prepareTopNode.children[0].children[1].active = false\r\n            this.prepareTopNode.children[0].children[2].active = false\r\n        }), cc.delayTime(0.4)).repeatForever())\r\n        this._timeCountDown = 20\r\n\r\n        GameApp.dataManager.globalData.inGameKillNum.push({\r\n            _killNum: 0,\r\n            _belongName: GameApp.dataManager.userData.playerName\r\n        })\r\n        this.updateSoundBtnShow()\r\n    },\r\n    onDestroy() {\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_AMO_SHOW)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_GUN_UI)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_RELOAD_UI)\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_SHOW_ALLROLENUM_UI)\r\n\r\n    },\r\n    update(dt) {\r\n        this._shootTimer -= dt\r\n        if (this._shootFlag && this._shootTimer < 0 && !this._reloadFlag) {\r\n            this._shootTimer = GameApp.dataManager.globalData.shootInterval\r\n            this.shoot()\r\n        }\r\n        if (this._reloadFlag) {\r\n            this._reloadTimer -= dt\r\n            if (this._reloadFlag && this._reloadTimer < 0) {\r\n                this._reloadFlag = false\r\n                GameApp.dataManager.reloadAmo()\r\n            }\r\n        }\r\n\r\n        this._timeCountDown -= dt\r\n        if (this._timeCountDown < 6) {\r\n            this.prepareTopNode.children[0].active = false\r\n            this.prepareTopNode.children[1].active = true\r\n            this.prepareTopNode.children[2].active = true\r\n            this.countDownAnim()\r\n            this.prepareTopNode.children[2].getComponent(cc.Sprite).spriteFrame = this.countDownSpGroup[Math.floor(this._timeCountDown - 1)]\r\n        }\r\n        if (Math.floor(this._timeCountDown) <= 0) {\r\n            if (!this._onceExecute) return\r\n            this._onceExecute = false\r\n            GameApp.uiManager.showPopup('GiftPopup', (node) => {\r\n                node.getComponent(\"GiftPopup\").init(\"GameUI\", 2)\r\n            })\r\n\r\n        }\r\n    },\r\n    showPlaneUI(_speedUp) {\r\n        GameApp.uiManager.showUI('PlaneUI', (node) => {\r\n            node.getComponent('PlaneUI').init(_speedUp)\r\n        })\r\n    },\r\n    countDownAnim() {\r\n        if (this._onceCountDownAnim) return\r\n        this._onceCountDownAnim = true\r\n        cc.log(\"播放了\")\r\n        GameApp.audioManager.playEffect('waitSceneCutDown')\r\n        var seq = cc.sequence(cc.scaleTo(0.2, 1.5), cc.scaleTo(0.3, 1), cc.delayTime(0.5), cc.callFunc(() => {\r\n            this._onceCountDownAnim = false\r\n        }))\r\n        this.prepareTopNode.children[2].runAction(seq)\r\n    },\r\n    onTouchBegin(event) {\r\n        this._shootFlag = true\r\n\r\n    },\r\n    onTouchLeave(event) {\r\n        this._shootFlag = false\r\n        GameApp.eventManager.emit(EventNames.EVENT_AIM, false)\r\n    },\r\n    shoot() {\r\n        GameApp.eventManager.emit(EventNames.EVENT_AIM, true)\r\n        GameApp.eventManager.emit(EventNames.EVENT_PLAYER_SHOOT)\r\n    },\r\n    updateAmoShow() {\r\n        this.amoUI.string = GameApp.dataManager.globalData.curAmoNum\r\n        GameApp.eventManager.emit(EventNames.EVENT_UPDATE_TOPBAR_SHOW)\r\n    },\r\n    updateGunUIShow(event, _gunData) {\r\n        if (_gunData) {\r\n            console.log(_gunData)\r\n            this.weaponBtnNode.getComponent(cc.Sprite).spriteFrame = GameApp.uiManager.commonAtlas.getSpriteFrame(\"ui_weapon_\" + _gunData.weaponid)\r\n            this.weaponBtnNode.children[1].children[0].getComponent(cc.Label).string = _gunData.name\r\n        }\r\n        this.weaponBtnNode.active = event\r\n        if (event) {\r\n            this.weaponBtnNode.scaleX = 0\r\n            this.weaponBtnNode.scaleY = 0\r\n            this.weaponBtnNode.runAction(cc.scaleTo(0.3, 1).easing(cc.easeBackOut()))\r\n        }\r\n    },\r\n    updateReloadUIShow(event) {\r\n        this.reloadBtnNode.active = event\r\n    },\r\n    updateAllRoleNumUIShow() {\r\n        this.allRoleNumUI.string = GameApp.dataManager.globalData.allRoleArr.length\r\n    },\r\n    reloadBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        if (this._reloadFlag) return;\r\n        this._reloadTimer = GameApp.dataManager.globalData.reloadInterval\r\n        this._reloadFlag = true\r\n        GameApp.eventManager.emit(EventNames.EVENT_PLAYER_RELOAD)\r\n    },\r\n    weaponBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.eventManager.emit(EventNames.EVENT_PICKUP_WEAPON)\r\n    },\r\n    backBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.showUI('LoginUI')\r\n    },\r\n    soundBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        var onoff = !GameApp.audioManager._effectOn\r\n        GameApp.audioManager.setEffect(onoff)\r\n        // GameApp.audioManager.setEffect(onoff)\r\n        this.updateSoundBtnShow()\r\n    },\r\n    updateSoundBtnShow() {\r\n        this.soundNode.children[0].active = GameApp.audioManager._effectOn\r\n        this.soundNode.children[1].active = !GameApp.audioManager._effectOn\r\n    },\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\r\n    statics: {\r\n\r\n        // 初始化需要监听的协议\r\n        Initialize() {\r\n\r\n\r\n        },\r\n\r\n    }\r\n});","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        allPlayNumUI: cc.Label,\r\n        winNumUI: cc.Label,\r\n        top5NumUI: cc.Label,\r\n        winRateUI: cc.Label,\r\n        kdUI: cc.Label,\r\n        avgRankUI: cc.Label,\r\n        mostKillUI: cc.Label,\r\n        avgLifeTimeUI: cc.Label\r\n    },\r\n\r\n\r\n    onLoad() {\r\n        this.allPlayNumUI.string = GameApp.dataManager.userData.allPlayNum\r\n        this.winNumUI.string = GameApp.dataManager.userData.winNum\r\n        this.top5NumUI.string = GameApp.dataManager.userData.top5Num\r\n        this.winRateUI.string = GameApp.dataManager.userData.winRate * 100 + \"%\"\r\n        this.kdUI.string = GameApp.dataManager.userData.kd\r\n        this.avgRankUI.string = GameApp.dataManager.userData.avgRank\r\n        this.mostKillUI.string = GameApp.dataManager.userData.mostKill\r\n        this.avgLifeTimeUI.string = Tools.toTimeString(GameApp.dataManager.userData.avgLifeTime)\r\n    },\r\n    backBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.showUI('LoginUI')\r\n    },\r\n\r\n});\r\n","var RouletteData = {\r\n    ALLROATE: 360,//360度\r\n    num: 8, // 转盘格子数\r\n    deviation: 5, // 偏移量(防止转盘指针正好指向两个格子中间)\r\n    offset: 22.5, // 角度的偏移量\r\n    //转盘角度数据\r\n    zhuanpanData: {\r\n        default: {}\r\n    },\r\n\r\n    duration: 3, //转动持续时间\r\n    rotateNum: 3, //转动圈数(n - 1)\r\n\r\n    load: function () {\r\n        for (let i = 1; i < 9; i++) {\r\n            this.zhuanpanData[i] = {\r\n                start: (this.num - (9 - i)) * this.ALLROATE / this.num - this.offset + this.deviation, end: (this.num - (8 - i)) * this.ALLROATE / this.num - this.offset - this.deviation\r\n            }\r\n        }\r\n    }\r\n};\r\nRouletteData.load();\r\n\r\nmodule.exports = RouletteData;\r\n","const Utils = require(\"Utils\")\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        actorAnim: sp.Skeleton,\r\n        nameUI: cc.Label,\r\n        descUI: cc.Label,\r\n        skinData: {\r\n            default: {}\r\n        },\r\n        methodUIGroup: [cc.Node],\r\n        methodBtnGroup: [cc.Node],\r\n        onceClick: {\r\n            default: true,\r\n            visible: false\r\n        }\r\n    },\r\n\r\n    onLoad() {\r\n        GameApp.eventManager.on(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, this.updateUnLockShow)\r\n    },\r\n    onDestroy() {\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, this.updateUnLockShow)\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    init(_skinData) {\r\n        this.skinData = _skinData\r\n        this.initNameShow()\r\n        this.initSkinShow()\r\n        this.updateMethodShow()\r\n    },\r\n    initNameShow() {\r\n        this.nameUI.string = this.skinData.name\r\n        var colorIndex = Math.floor((this.skinData.skinid - 1) / 5)\r\n        this.nameUI.node.color = new cc.Color().fromHEX(NameColor[colorIndex]);\r\n\r\n        this.descUI.string = this.skinData.des\r\n    },\r\n    initSkinShow() {\r\n        if (this.skinData.skinid < 21) {\r\n            this.actorAnim.skeletonData = GameApp.uiManager.normalSkinData\r\n            this.actorAnim.setSkin(this.skinData.skinname)\r\n        } else {\r\n            this.actorAnim.skeletonData = GameApp.uiManager.advanceSkinDataGroup[this.skinData.skinid - 21]\r\n        }\r\n        if (this.skinData.skinid < 21) {\r\n            this.actorAnim.setAnimation(0, 'await', true)\r\n        } else {\r\n            this.actorAnim.setAnimation(0, 'await_main_1', false)\r\n            this.actorAnim.setCompleteListener(() => {\r\n                this.actorAnim.setAnimation(0, 'await_main_' + Tools.randomNum(1, 3), false)\r\n            })\r\n        }\r\n    },\r\n    updateMethodShow() {\r\n\r\n        if (this.skinData.skinid > 25) {\r\n            this.methodUIGroup[2].children[0].getComponent(cc.Label).string = GameApp.dataManager.userData.havePieceNum[this.skinData.skinid] + '/' + this.skinData.needpiece\r\n            this.setpieceIcon(this.skinData.skinid)\r\n        }\r\n\r\n        this.updateUnLockShow(this)\r\n    },\r\n    updateUnLockShow(self) {\r\n        self.methodUIGroup[0].active = self.methodBtnGroup[0].active = self.skinData.needcoin\r\n        self.methodUIGroup[1].active = self.methodBtnGroup[1].active = self.skinData.needgem\r\n        self.methodUIGroup[2].active = self.methodBtnGroup[2].active = self.skinData.needpiece\r\n        self.methodBtnGroup[3].active = false\r\n        self.methodUIGroup[0].children[0].getComponent(cc.Label).string = self.skinData.needcoin\r\n        self.methodUIGroup[1].children[0].getComponent(cc.Label).string = GameApp.dataManager.userData.playedVideoNum + '/' + self.skinData.needgem\r\n\r\n        var unlockarr = GameApp.dataManager.userData.unLockedSkinIdArr.concat()\r\n        unlockarr.sort((a, b) => a - b);\r\n        unlockarr.forEach(element => {\r\n            if (element == self.skinData.skinid) {\r\n                self.methodBtnGroup[0].active = false;\r\n                self.methodBtnGroup[1].active = false;\r\n                self.methodBtnGroup[2].active = false;\r\n                self.methodBtnGroup[3].active = true;\r\n                return;\r\n            }\r\n        });\r\n        self.updateChoosedShow2(self)\r\n    },\r\n    updateChoosedShow2: function (self) {\r\n        if (GameApp.dataManager.getChoosedSkinId() == self.skinData.skinid) {\r\n            self.methodBtnGroup[3].children[0].active = false\r\n            self.methodBtnGroup[3].children[1].active = true\r\n        } else {\r\n            self.methodBtnGroup[3].children[0].active = true\r\n            self.methodBtnGroup[3].children[1].active = false\r\n        }\r\n    },\r\n    setpieceIcon(id) {\r\n        var self = this\r\n        cc.loader.loadRes(\"texture/skin_piece/card_p_\" + id, cc.SpriteFrame, function (err, spriteFrame) {\r\n            self.methodUIGroup[2].getComponent(cc.Sprite).spriteFrame = spriteFrame\r\n        });\r\n    },\r\n    selelctBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.dataManager.setChoosedSkinId(this.skinData.skinid)\r\n        GameApp.eventManager.emit(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, this)\r\n    },\r\n    coinBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        if (GameApp.dataManager.reduceCoin(this.skinData.needcoin)) {\r\n            GameApp.uiManager.showToast(\"解锁成功\")\r\n            GameApp.dataManager.unLockSkin(this.skinData.skinid)\r\n            GameApp.eventManager.emit(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, this)\r\n        } else {\r\n            GameApp.uiManager.showToast(\"金币不足！\")\r\n        }\r\n    },\r\n    videoBtnClick() {\r\n        if (window.wx) {\r\n            GameApp.uiManager.showToast(\"暂未开放！\")\r\n            return\r\n        }\r\n        if (!this.onceClick) return;\r\n        this.onceClick = false\r\n        GameApp.audioManager.playEffect('click')\r\n        var self = this\r\n\r\n        if (window.tt) {\r\n            Utils.addVideo(\"addVideo\", function () { //看完了\r\n                self.onceClick = true\r\n                GameApp.dataManager.addPlayedVideoNum()\r\n                GameApp.eventManager.emit(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, self)\r\n            }, function (_info) { //没看完\r\n                self.onceClick = true\r\n                _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast(\"未看完视频！\")\r\n            })\r\n        } else {\r\n            self.onceClick = true\r\n            GameApp.dataManager.addPlayedVideoNum()\r\n            GameApp.eventManager.emit(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, self)\r\n        }\r\n\r\n\r\n    },\r\n    pieceBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.showToast(\"碎片不足,请从\" + \"<color=#faf80d>黄金宝箱</color>\" + \"获取！\")\r\n    },\r\n\r\n    onCloseBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.closePopup(\"SkinInfoPopup\")\r\n    },\r\n\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        actorAnim: sp.Skeleton,\r\n        nameUI: cc.Label,\r\n        skinData: {\r\n            default: {}\r\n        },\r\n        methodBtnGroup: [cc.Node]\r\n    },\r\n\r\n    onLoad() {\r\n        GameApp.eventManager.on(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW, this.updateUnLockShow.bind(this))\r\n    },\r\n    onDestroy() {\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW)\r\n    },\r\n    // update (dt) {},\r\n    init(_skinData) {\r\n        this.skinData = _skinData\r\n        this.initNameShow()\r\n        this.initSkinShow()\r\n        this.updateMethodShow()\r\n    },\r\n    initNameShow() {\r\n        this.nameUI.string = this.skinData.name\r\n        var colorIndex = Math.floor((this.skinData.skinid - 1) / 5)\r\n        this.nameUI.node.color = new cc.Color().fromHEX(NameColor[colorIndex]);\r\n    },\r\n    initSkinShow() {\r\n        if (this.skinData.skinid < 21) {\r\n            this.actorAnim.skeletonData = GameApp.uiManager.normalSkinData\r\n            this.actorAnim.setSkin(this.skinData.skinname)\r\n        } else {\r\n            this.actorAnim.skeletonData = GameApp.uiManager.advanceSkinDataGroup[this.skinData.skinid - 21]\r\n        }\r\n        if (this.skinData.skinid < 21) {\r\n            this.actorAnim.setAnimation(0, 'await', true)\r\n        } else {\r\n            this.actorAnim.setAnimation(0, 'await_main_1', false)\r\n            this.actorAnim.setCompleteListener(() => {\r\n                this.actorAnim.setAnimation(0, 'await_main_' + Tools.randomNum(1, 3), false)\r\n            })\r\n        }\r\n    },\r\n    updateMethodShow() {\r\n\r\n        if (this.skinData.skinid > 25) {\r\n            this.methodBtnGroup[2].children[1].getComponent(cc.Label).string = GameApp.dataManager.userData.havePieceNum[this.skinData.skinid] + '/' + this.skinData.needpiece\r\n            this.setpieceIcon(this.skinData.skinid)\r\n        }\r\n        this.updateUnLockShow()\r\n    },\r\n    updateUnLockShow() {\r\n        this.methodBtnGroup[0].active = this.skinData.needcoin\r\n        this.methodBtnGroup[1].active = this.skinData.needgem\r\n        this.methodBtnGroup[2].active = this.skinData.needpiece\r\n        this.methodBtnGroup[3].active = false\r\n        this.methodBtnGroup[0].children[1].getComponent(cc.Label).string = this.skinData.needcoin\r\n        this.methodBtnGroup[1].children[1].getComponent(cc.Label).string = GameApp.dataManager.userData.playedVideoNum + '/' + this.skinData.needgem\r\n\r\n        var unlockarr = GameApp.dataManager.userData.unLockedSkinIdArr.concat()\r\n        unlockarr.sort((a, b) => a - b);\r\n        unlockarr.forEach(element => {\r\n            if (element == this.skinData.skinid) {\r\n                this.methodBtnGroup[0].active = false;\r\n                this.methodBtnGroup[1].active = false;\r\n                this.methodBtnGroup[2].active = false;\r\n                this.methodBtnGroup[3].active = true;\r\n                return;\r\n            }\r\n        });\r\n        this.updateChoosedShow()\r\n    },\r\n    updateChoosedShow() {\r\n        if (GameApp.dataManager.getChoosedSkinId() == this.skinData.skinid) {\r\n            this.methodBtnGroup[3].children[0].active = false\r\n            this.methodBtnGroup[3].children[1].active = true\r\n        } else {\r\n            this.methodBtnGroup[3].children[0].active = true\r\n            this.methodBtnGroup[3].children[1].active = false\r\n        }\r\n    },\r\n    setpieceIcon(id) {\r\n        var self = this\r\n        cc.loader.loadRes(\"texture/skin_piece/card_p_\" + id, cc.SpriteFrame, function (err, spriteFrame) {\r\n            self.methodBtnGroup[2].children[0].getComponent(cc.Sprite).spriteFrame = spriteFrame\r\n        });\r\n    },\r\n    frameBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.showPopup(\"SkinInfoPopup\", (node) => {\r\n            node.getComponent(\"SkinInfoPopup\").init(this.skinData)\r\n        }, false)\r\n    },\r\n    selelctBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.dataManager.setChoosedSkinId(this.skinData.skinid)\r\n        GameApp.eventManager.emit(EventNames.EVENT_UPDATE_SHOP_CHOOSED_SHOW)\r\n    },\r\n});\r\n","const Utils = require(\"Utils\")\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        scrollView: cc.ScrollView,\r\n        itemPrefab: cc.Prefab,\r\n        coinUI: cc.Label,\r\n        onceClick: {\r\n            default: true,\r\n            visible: false\r\n        }\r\n    },\r\n\r\n\r\n    onLoad() {\r\n        GameApp.eventManager.on(EventNames.EVENT_UPDATE_COIN_SHOW, this.updateCoinShow.bind(this))\r\n        this.initData()\r\n        this.updateCoinShow()\r\n\r\n    },\r\n    onDestroy() {\r\n        GameApp.eventManager.removeListener(EventNames.EVENT_UPDATE_COIN_SHOW)\r\n    },\r\n    initData() {\r\n        this.scrollView.content.removeAllChildren()\r\n        var i = 0\r\n        GameApp.dataManager.jsonData.SkinsData.forEach(skinData => {\r\n            this.scheduleOnce(() => {\r\n                var item = cc.instantiate(this.itemPrefab)\r\n                this.scrollView.content.addChild(item)\r\n                item.getComponent(\"SkinItem\").init(skinData)\r\n            }, i += 0.05)\r\n        });\r\n    },\r\n    updateCoinShow() {\r\n        this.coinUI.string = GameApp.dataManager.userData.coinNum\r\n    },\r\n    coinBtnClick() {\r\n        if (window.wx) {\r\n            GameApp.uiManager.showToast(\"暂未开放！\")\r\n            return\r\n        }\r\n        if (!this.onceClick) return;\r\n        this.onceClick = false\r\n        GameApp.audioManager.playEffect('click')\r\n        var self = this\r\n\r\n        if (window.tt) {\r\n            Utils.addVideo(\"addVideo\", function () { //看完了\r\n                self.onceClick = true\r\n                GameApp.uiManager.showToast(\"获得500金币\")\r\n                GameApp.dataManager.addCoin(500)\r\n                self.updateCoinShow()\r\n            }, function (_info) { //没看完\r\n                self.onceClick = true\r\n                _info ? GameApp.uiManager.showToast(_info) : GameApp.uiManager.showToast(\"未看完视频！\")\r\n            })\r\n        } else {\r\n            self.onceClick = true\r\n            GameApp.uiManager.showToast(\"非真机,获得500金币\")\r\n            GameApp.dataManager.addCoin(500)\r\n            self.updateCoinShow()\r\n        }\r\n\r\n    },\r\n    backBtnClick() {\r\n        GameApp.audioManager.playEffect('click')\r\n        GameApp.uiManager.showUI('LoginUI')\r\n    },\r\n\r\n});\r\n","\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n\r\n    onLoad() {\r\n        this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(() => {\r\n            GameApp.uiManager.showUI(\"LoginUI\")\r\n        })))\r\n    },\r\n\r\n\r\n});\r\n","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        labTxt: cc.RichText,\r\n        _callback: null,\r\n        //连续击杀的tip\r\n        playerName: cc.RichText,\r\n        killNum: cc.Label,\r\n        killTipNode: cc.Node\r\n    },\r\n\r\n    start() {\r\n        this.node.setScale(0, 0)\r\n    },\r\n\r\n    show(msg, callback, num) {\r\n        this._callback = callback;\r\n\r\n        this.node.stopAllActions();\r\n        if (num) {\r\n            this.playerName.string = msg\r\n            this.killNum.string = num\r\n            this.killTipNode.active = true\r\n        } else {\r\n            this.labTxt.string = msg;\r\n        }\r\n        this.node.runAction(\r\n            cc.sequence(\r\n                cc.scaleTo(0.3, 1).easing(cc.easeBounceOut(2)),\r\n                cc.delayTime(1),\r\n                cc.callFunc(function () {\r\n                    this.dis();\r\n                }.bind(this))\r\n            )\r\n        );\r\n\r\n    },\r\n\r\n    dis() {\r\n        this.node.runAction(\r\n            cc.sequence(\r\n                cc.spawn(\r\n                    cc.fadeOut(1),\r\n                    cc.moveBy(1, cc.v2(0, this.node.height)),\r\n                ),\r\n                cc.callFunc(function () {\r\n                    this.disIme();\r\n                }.bind(this))\r\n            )\r\n        );\r\n    },\r\n\r\n    //立即消失\r\n    disIme() {\r\n        this.node.active = false;\r\n        this.node.removeFromParent();\r\n        this._callback && this._callback()\r\n    },\r\n});\r\n","\r\n\r\nwindow.Tools = {\r\n    addClickEvent: function (node, target, component, handler, customEventData) {\r\n        // console.log(component + \":\" + handler);\r\n        var eventHandler = new cc.Component.EventHandler();\r\n        eventHandler.target = target;\r\n        eventHandler.component = component;\r\n        eventHandler.handler = handler;\r\n        if (customEventData) {\r\n            eventHandler.customEventData = customEventData\r\n        }\r\n\r\n        node.getComponent(cc.Button).clickEvents = [];\r\n        node.getComponent(cc.Button).clickEvents.push(eventHandler);\r\n    },\r\n\r\n    //生成从minNum到maxNum的随机数(包含上限)\r\n    randomNum: function (minNum, maxNum, _float) {\r\n        if (_float) {\r\n            return Math.random() * (maxNum - minNum + 1) + minNum\r\n        }\r\n        return Math.floor(Math.random() * (maxNum - minNum + 1) + minNum);\r\n    },\r\n    //从数组arr内获取随机1个元素(可重复)\r\n    getRandomElement: function (arr) {\r\n        let num = arr.length\r\n        if (num > 0) {\r\n            let i = Math.floor(Math.random() * num)\r\n            if (i == num) i = num - 1\r\n            return arr[i]\r\n        }\r\n        else\r\n            return null\r\n    },\r\n    //获取数组arr内随机amount个元素且不会重复(返回对象新增了所有随机元素的下标数组)\r\n    getRandomAmountElementUnRepeat: function (arr, amount) {\r\n        let arrLength = arr.length\r\n        if (amount >= arrLength) {\r\n            var desArr = {\r\n                nodeArr: arr,\r\n                indexArr: []\r\n            };\r\n            for (var i = 0; i < arr.length; i++) {\r\n                desArr.indexArr.push(i)\r\n            }\r\n            return desArr\r\n        } else if (amount <= 0) {\r\n            return null;\r\n        } else {\r\n            //这里对于此项目做了特化处理\r\n            var desArr = {\r\n                nodeArr: [],\r\n                indexArr: []\r\n            };\r\n            var tempArr = [];\r\n            var temp = null;\r\n            for (var i = 0; i < amount; i++) {\r\n                do {\r\n                    temp = Math.floor(Math.random() * arrLength)\r\n                } while (tempArr.indexOf(temp) > -1)\r\n                tempArr.push(temp)\r\n                desArr.nodeArr.push(arr[temp])\r\n                desArr.indexArr.push(temp)\r\n            }\r\n            return desArr\r\n        }\r\n    },\r\n    isCrit(_num) {\r\n        var arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n        var result = this.getRandomAmountElementUnRepeat(arr, _num)\r\n        if (result == null) {\r\n            return false\r\n        } else {\r\n            if (result.nodeArr.indexOf(7) != -1) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n    },\r\n    getIndex: function (_arr, _obj) {\r\n        var len = _arr.length;\r\n        for (var i = 0; i < len; i++) {\r\n            if (_arr[i] == _obj) {\r\n                return parseInt(i);\r\n            }\r\n        }\r\n        return -1;\r\n    },\r\n    removeArray: function (_arr, _obj) {\r\n        var length = _arr.length;\r\n        for (var i = 0; i < length; i++) {\r\n            if (_arr[i] == _obj) {\r\n                if (i == 0) {\r\n                    _arr.shift(); //删除并返回数组的第一个元素\r\n                    return _arr;\r\n                }\r\n                else if (i == length - 1) {\r\n                    _arr.pop();  //删除并返回数组的最后一个元素\r\n                    return _arr;\r\n                }\r\n                else {\r\n                    _arr.splice(i, 1); //删除下标为i的元素\r\n                    return _arr;\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /// <summary>\r\n    /// 在圆心为point，半径为radius的圆内，产生一个半径为radius_inner的圆的圆心\r\n    /// </summary>\r\n    /// <param name=\"point\">外圆圆心</param>\r\n    /// <param name=\"radius_outer\">外圆半径</param>\r\n    /// <param name=\"radius_inner\">内圆半径</param>\r\n    /// <returns>内圆圆心</returns>\r\n    pointOfRandom(point, radius_outer, radius_inner) {\r\n        var x = Tools.randomNum(Math.floor(point.x - (radius_outer - radius_inner)), Math.floor(point.x + (radius_outer - radius_inner)));\r\n        var y = Tools.randomNum(Math.floor(point.y - (radius_outer - radius_inner)), Math.floor(point.y + (radius_outer - radius_inner)));\r\n\r\n        while (!this.isInRegion(x - point.x, y - point.y, radius_outer - radius_inner)) {\r\n            x = Tools.randomNum(Math.floor(point.x - (radius_outer - radius_inner)), Math.floor(point.x + (radius_outer - radius_inner)));\r\n            y = Tools.randomNum(Math.floor(point.y - (radius_outer - radius_inner)), Math.floor(point.y + (radius_outer - radius_inner)));\r\n        }\r\n\r\n        var p = cc.v2(x, y);\r\n        return p;\r\n    },\r\n    /// <param name=\"x_off\">与大圆圆心的x方向偏移量</param>\r\n    /// <param name=\"y_off\">与大圆圆心的y方向偏移量</param>\r\n    /// <param name=\"distance\">大圆与小圆半径的差</param>\r\n    /// <returns>判断点是否在范围内</returns>\r\n    isInRegion(x_off, y_off, distance) {\r\n        if (x_off * x_off + y_off * y_off <= distance * distance) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    /// <summary>\r\n    /// 判断两个圆是否重合，或者是相内切\r\n    /// </summary>\r\n    /// <param name=\"p_outer\">外圆圆心</param>\r\n    /// <param name=\"r_outer\">外圆半径</param>\r\n    /// <param name=\"p_inner\">内圆圆心</param>\r\n    /// <param name=\"r_inner\">内圆半径</param>\r\n    /// <returns>是否相内切</returns>\r\n    isIntersect(p_outer, r_outer, p_inner, r_inner) {\r\n        //判定条件：两圆心的距离 + r_inner = r_outer\r\n        var distance = parseFloat(Math.sqrt((p_outer.x - p_inner.x) * (p_outer.x - p_inner.x) + (p_outer.y - p_inner.y) * (p_outer.y - p_inner.y)))\r\n        if (distance + r_inner >= r_outer) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    scaleUpAndDowm: function (target, isShining, light) {\r\n        target.runAction(cc.repeatForever(cc.sequence(\r\n            cc.scaleTo(0.3, 1.1).easing(cc.easeIn(2)),\r\n            cc.scaleTo(0.6, 0.9).easing(cc.easeIn(2)),\r\n            cc.scaleTo(0.6, 1.1).easing(cc.easeIn(2)),\r\n            cc.scaleTo(0.6, 0.9).easing(cc.easeIn(2)),\r\n        )));\r\n        if (isShining) {\r\n            light.runAction(cc.repeatForever(cc.sequence(\r\n                cc.fadeIn(0.3).easing(cc.easeIn(2)),\r\n                cc.fadeOut(0.6).easing(cc.easeIn(2)),\r\n                cc.fadeIn(0.6).easing(cc.easeIn(2)),\r\n                cc.fadeOut(0.6).easing(cc.easeIn(2)),\r\n            )))\r\n        }\r\n    },\r\n    shake: function (target) {\r\n        target.runAction(cc.repeatForever(cc.sequence(\r\n            cc.rotateTo(0.1, 5).easing(cc.easeIn(2)),\r\n            cc.rotateTo(0.2, -5).easing(cc.easeIn(2)),\r\n            cc.rotateTo(0.2, 5).easing(cc.easeIn(2)),\r\n            cc.rotateTo(0.1, 0).easing(cc.easeIn(2)),\r\n            cc.delayTime(0.5)\r\n        )));\r\n    },\r\n\r\n\r\n    // 0   , 0.2 , 0.2 , 0.6\r\n    //     0.2, 0.2 , 0.2 , 0.4\r\n    //     0.4, 0.2 , 0.2 , 0.2\r\n    //     0.6, 0.2 , 0.2 , 0\r\n\r\n\r\n    jumpOneByOne: function (target) {\r\n\r\n        var nodeNum = target.childrenCount\r\n        for (var i = 0; i < nodeNum; i++) {\r\n            target.children[i].runAction(cc.sequence(cc.delayTime(i * 0.2), cc.scaleTo(0.2, 1.3).easing(cc.easeBackOut()), cc.scaleTo(0.2, 1), cc.delayTime((nodeNum - 1 - i) * 0.2 + 1)).repeatForever())\r\n        }\r\n    },\r\n    // 本地时间戳->2018/8/8\r\n    toDateFormat: function () {\r\n        let date = new Date();\r\n        date = new Date(date.getTime());\r\n        return {\r\n            year: date.getFullYear(),\r\n            month: (date.getMonth() + 1),\r\n            day: date.getDate()\r\n        }\r\n    },\r\n    // 秒->08:08:08\r\n    toTimeString2: function (s) {\r\n        if (s <= 0) {\r\n            return \"00:00:00\";\r\n        }\r\n        s = Math.floor(s);\r\n        let hour = Math.floor(s / (60 * 60));\r\n        s -= hour * (60 * 60);\r\n        let minute = Math.floor(s / 60);\r\n        s -= minute * 60;\r\n        let ret = '';\r\n        if (hour > 0) {\r\n            ret += hour < 10 ? '0' + hour : hour\r\n        } else {\r\n            ret += '00'\r\n        }\r\n        ret += ':'\r\n        if (minute > 0) {\r\n            ret += minute < 10 ? '0' + minute : minute\r\n        } else {\r\n            ret += '00'\r\n        }\r\n        ret += ':'\r\n        if (s > 0) {\r\n            ret += s < 10 ? '0' + s : s\r\n        } else {\r\n            ret += '00'\r\n        }\r\n        //return ret;\r\n        return {\r\n            hour: hour,\r\n            minute: minute,\r\n            s: s,\r\n        }\r\n    },\r\n\r\n\r\n    // 秒->08:08:08\r\n    toTimeString: function (s) {\r\n        if (s <= 0) {\r\n            return \"00:00\";\r\n        }\r\n        s = Math.floor(s);\r\n        let hour = Math.floor(s / (60 * 60));\r\n        s -= hour * (60 * 60);\r\n        let minute = Math.floor(s / 60);\r\n        s -= minute * 60;\r\n        let ret = '';\r\n        // if (hour > 0) {\r\n        //     ret += hour < 10 ? '0' + hour : hour\r\n        // } else {\r\n        //     ret += '00'\r\n        // }\r\n        // ret += ':'\r\n        if (minute > 0) {\r\n            ret += minute < 10 ? '0' + minute : minute\r\n        } else {\r\n            ret += '00'\r\n        }\r\n        ret += ':'\r\n        if (s > 0) {\r\n            ret += s < 10 ? '0' + s : s\r\n        } else {\r\n            ret += '00'\r\n        }\r\n        return ret;\r\n        // return {\r\n        //     hour: hour,\r\n        //     minute: minute,\r\n        //     s: s,\r\n        // }\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n    addNegativeCaculation: function (isNegative, num, rate, strName) {\r\n        return isNegative ? \"-\" + this.calculation(num, rate, strName) : this.calculation(num, rate, strName);\r\n    },\r\n\r\n    // calculation number\r\n    calculation: function (num, rate, strName) {\r\n        var n1 = Math.floor(num / rate);\r\n        var n2 = Math.floor(num % rate / rate * 10);\r\n        if (n2 === 0) {\r\n            return n1 + strName;\r\n        } else {\r\n            return n1 + \".\" + n2 + strName;\r\n        }\r\n    },\r\n};","const PREFAB_PATH = require('PrefabPath');\r\nconst JSON_PATH = require('JsonPath');\r\nwindow.conMag = window.conMag || require(\"ConfigManager\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        gameRoot: cc.Node,\r\n        uiRoot: cc.Node,\r\n        popupRoot: cc.Node,\r\n        toastRoot: cc.Node,\r\n        toastPrefab: cc.Prefab,\r\n        loadingMask: cc.Node,\r\n        loadingProgress: cc.ProgressBar,\r\n        splashUI: cc.Node,\r\n        _Prefabs: {\r\n            default: {},\r\n        },\r\n        _Jsons: {\r\n            default: {},\r\n        },\r\n\r\n        mapCamera: cc.Camera,\r\n        mipmapCamera: cc.Camera,\r\n        normalSkinData: sp.SkeletonData,\r\n        advanceSkinDataGroup: [sp.SkeletonData],\r\n        boxSkinDataGroup: [sp.SkeletonData],\r\n        commonAtlas: cc.SpriteAtlas,\r\n        gunSkinDataGroup: [sp.SkeletonData]\r\n    },\r\n\r\n    onLoad() {\r\n        if (GameApp.uiManager !== null) {\r\n            return this.node.destroy();\r\n        }\r\n        GameApp.uiManager = this;\r\n        cc.game.addPersistRootNode(this.node);\r\n\r\n        cc.director.getCollisionManager().enabled = true;\r\n        cc.director.getCollisionManager().enabledDrawBoundingBox = true;\r\n        cc.director.getCollisionManager().enabledDebugDraw = true;\r\n        var manager = cc.director.getPhysicsManager();\r\n        manager.enabled = true;\r\n        manager.debugDrawFlags = cc.PhysicsManager.DrawBits.e_aabbBit |\r\n            cc.PhysicsManager.DrawBits.e_pairBit |\r\n            cc.PhysicsManager.DrawBits.e_centerOfMassBit |\r\n            cc.PhysicsManager.DrawBits.e_jointBit |\r\n            cc.PhysicsManager.DrawBits.e_shapeBit;\r\n        let frameSize = cc.view.getFrameSize();\r\n        var canvas = cc.game.canvas;\r\n        canvas.width = frameSize.width * window.devicePixelRatio;\r\n        canvas.height = frameSize.height * window.devicePixelRatio;\r\n\r\n        this.setLoadingMaskVisible(false);\r\n        this.loadingProgress.progress = 0;\r\n        //开始加载;\r\n        this.startLoading();\r\n\r\n        // window.conMag.loadAllConfig(() => {\r\n        //     let all = window.conMag.getAllConfig()\r\n        //     // console.log(\"这是读取的数据\")\r\n        //     // console.log(all[\"Config\"])\r\n        //     var skinJson = all[\"Skin\"]\r\n        //     console.log(skinJson.json['skins'])\r\n        // })\r\n\r\n    },\r\n\r\n    startLoading: function () {\r\n        console.log('开始加载');\r\n        this.loadingProgress.node.active = true;\r\n        this.loadAll(function (completedCount, totalCount) {\r\n            let per = completedCount / totalCount;\r\n            if (per && !isNaN(per)) {\r\n                this.loadingProgress.progress = per\r\n            }\r\n        }.bind(this), function () {\r\n            this.loadingProgress.node.active = false;\r\n            this.splashUI.active = false;\r\n            //读取用户信息;\r\n            let userData = cc.sys.localStorage.getItem(\"EatChicken_UserData\");\r\n            if (userData == null || userData == undefined || userData == '') {\r\n            } else {\r\n                GameApp.dataManager.userData = JSON.parse(userData);\r\n                //console.log(GameApp.dataManager.userData);\r\n            }\r\n            this.showUI(\"LoginUI\")\r\n        }.bind(this))\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param cbProgress        加载中的回调\r\n     * @param cbComplete        加载完成的回调\r\n     */\r\n    loadAll(cbProgress, cbComplete) {\r\n        let paths = [];\r\n        var ii = 0;\r\n        //加载预制体配置路径文件;\r\n        for (let name in PREFAB_PATH) {\r\n            paths.push(PREFAB_PATH[name]);\r\n            ii++\r\n        }\r\n        var prefabCount = ii;\r\n        var jj = 0;\r\n        //加载JSON配置文件;\r\n        for (let name2 in JSON_PATH) {\r\n            paths.push(JSON_PATH[name2]);\r\n            jj++\r\n        }\r\n        let jsonCount = jj;\r\n        cc.loader.loadResArray(paths, function (completedCount, totalCount) {\r\n            // console.log(completedCount + '/' + totalCount)\r\n            cbProgress(completedCount, totalCount);\r\n        }, function (err, prefabs) {\r\n            let names = Object.keys(PREFAB_PATH);\r\n            //for (let i in prefabs) {\r\n            for (let i = 0; i < prefabCount; i++) {\r\n                this._Prefabs[names[i]] = prefabs[i];\r\n            }\r\n            let names2 = Object.keys(JSON_PATH);\r\n            //for (let i in prefabs) {\r\n            for (let j = 0; j < jsonCount; j++) {\r\n                this._Jsons[names2[j]] = prefabs[prefabCount + j].json[names2[j]];\r\n                GameApp.dataManager.jsonData[names2[j]] = this._Jsons[names2[j]]\r\n            }\r\n            // console.log(GameApp.dataManager.jsonData)\r\n            cbComplete();\r\n            // let paths2 = ['data/skins.json'];\r\n\r\n            // cc.loader.loadResArray(paths2, function (completedCount, totalCount) {\r\n            //     cbProgress(completedCount, totalCount);\r\n            // }, function (err, jsons) {\r\n            //     // console.log(jsons[0].json.skins)\r\n            //     GameApp.dataManager.skinsData = jsons[0].json.skins\r\n            //     console.log(GameApp.dataManager.skinsData)\r\n            //     cbComplete();\r\n            // }.bind(this))\r\n\r\n        }.bind(this));\r\n    },\r\n\r\n    load(name, cb) {\r\n        cc.loader.loadRes(PREFAB_PATH[name], function (err, prefab) {\r\n            if (err) {\r\n                cc.error(err.message || err);\r\n                return;\r\n            }\r\n            this._Prefabs[name] = prefab;\r\n            cb && cb(name);\r\n        }.bind(this));\r\n    },\r\n\r\n    showGameObject(name, cb, parentNode) {\r\n        if (!this._Prefabs[name]) {\r\n            this.load(name, function () {\r\n                this.showGameObject(name, cb);\r\n            }.bind(this));\r\n            return;\r\n        }\r\n\r\n        let node = cc.instantiate(this._Prefabs[name]);\r\n        parentNode && parentNode.addChild(node);\r\n        cb && cb(node);\r\n    },\r\n\r\n    showGame(name, cb) {\r\n        //未加载\r\n        if (this._curGameName == name) {\r\n            console.log(\"---showGame.repeat----\")\r\n            //允许刷新Game\r\n            // return;\r\n        }\r\n\r\n        if (!this._Prefabs[name]) {\r\n            this.load(name, function () {\r\n                this.showGame(name, cb);\r\n            }.bind(this));\r\n            return;\r\n        }\r\n\r\n        let node = cc.instantiate(this._Prefabs[name]);\r\n        this.gameRoot.addChild(node);\r\n        this._curGameName = name;\r\n\r\n        cb && cb(node);\r\n    },\r\n\r\n    showUI(name, cb) {\r\n        console.log('showUI');\r\n        //未加载\r\n        if (this._curName == name) {\r\n            console.log(\"---showUI.repeat----\")\r\n            //不允许刷新UI\r\n            return;\r\n        }\r\n\r\n        if (!this._Prefabs[name]) {\r\n            this.load(name, function () {\r\n                this.showUI(name, cb);\r\n            }.bind(this));\r\n            return;\r\n        }\r\n        //已加载 \r\n        // this.uiRoot.destroyAllChildren();\r\n        // this.clearPopups()\r\n        this.clearGames()\r\n        //特殊处理的UI\r\n        // for (let i = this.popupRoot.children.length - 1; i >= 0; i--) {\r\n        //     if (this.popupRoot.children[i]._tag !== 10086) {\r\n        //         this.popupRoot.children[i].destroy();\r\n        //     }\r\n        // }\r\n        this.uiRoot.children.forEach(eachUI => {\r\n            eachUI.runAction(cc.sequence(cc.fadeOut(0.1), cc.callFunc(() => {\r\n                eachUI.destroy()\r\n            })))\r\n        });\r\n        this.clearPopups();\r\n        let node = cc.instantiate(this._Prefabs[name]);\r\n        node.opacity = 0;\r\n        this.uiRoot.addChild(node);\r\n        node.runAction(cc.fadeIn(0.3));\r\n        this._curName = name;\r\n        cb && cb(node);\r\n    },\r\n\r\n    getUI(name) {\r\n        return this.uiRoot.getChildByName(name);\r\n    },\r\n\r\n    popUI() {\r\n        let uis = this.uiRoot.children;\r\n        if (uis.length > 0) {\r\n            uis[uis.length - 1].destroy();\r\n        }\r\n    },\r\n\r\n    isInMapSight(_target) {\r\n        var cameraWidth = this.mapCamera.node.width / 0.9\r\n        var cameraHeight = this.mapCamera.node.height / 0.9\r\n        var thePos = this.mapCamera.getWorldToScreenPoint(_target.convertToWorldSpaceAR(cc.v2(0, 0)))\r\n        if (thePos.x < 0 || thePos.x > cameraWidth || thePos.y < 0 || thePos.y > cameraHeight) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n\r\n    // showTop(cb) {\r\n    //     var name = \"TopUI\"\r\n    //     //未加载\r\n    //     if (!this._Prefabs[name]) {\r\n    //         this.load(name, function () {\r\n    //             this.showTop(name, cb);\r\n    //         }.bind(this));\r\n    //         return;\r\n    //     }\r\n    //     //已加载\r\n    //     if (this.topRoot.childrenCount == 0) {\r\n    //         let node = cc.instantiate(this._Prefabs[name]);\r\n    //         this.topRoot.addChild(node);\r\n    //     } else {\r\n    //         this.topRoot.children[0].active = true\r\n    //     }\r\n\r\n    //     cb && cb(node);\r\n    // },\r\n\r\n    // getTop() {\r\n    //     return this.topRoot.children[0];\r\n    // },\r\n    // hideTop() {\r\n    //     (this.topRoot.childrenCount > 0) && (this.topRoot.children[0].active = false);\r\n    // },\r\n\r\n    showPopup(name, cb, clean = true) {\r\n        if (this._curPopupName == name) {\r\n            console.log(\"---showPopup.repeat----\")\r\n            //允许刷新popup\r\n            // return;\r\n        }\r\n        //未加载\r\n        if (!this._Prefabs[name]) {\r\n            this.load(name, function () {\r\n                this.showPopup(name, cb);\r\n            }.bind(this));\r\n            return;\r\n        }\r\n        if (clean) {\r\n            this.clearPopups()\r\n        }\r\n        //已加载\r\n        let node = cc.instantiate(this._Prefabs[name]);\r\n        // node.opacity = 0\r\n        node.children[0].scaleX = 0\r\n        node.children[0].scaleY = 0\r\n        this.popupRoot.addChild(node);\r\n        node.children[0].runAction(cc.scaleTo(0.5, 1).easing(cc.easeBounceOut(2)))\r\n        this._curPopupName = name\r\n\r\n        cb && cb(node);\r\n    },\r\n\r\n    getPopup(name) {\r\n        return this.popupRoot.getChildByName(name);\r\n    },\r\n\r\n    popPopup() {\r\n        let popups = this.popupRoot.children;\r\n        if (popups.length > 0) {\r\n            popups[popups.length - 1].destroy();\r\n        }\r\n    },\r\n\r\n    closePopup(name) {\r\n        for (let node of this.popupRoot.children) {\r\n            if (node.name === name) {\r\n                node.runAction(cc.sequence(cc.fadeOut(0.1), cc.callFunc(() => {\r\n                    this._curPopupName = \"\"\r\n                    node.active = false;\r\n                    node.destroy();\r\n                })));\r\n                break;\r\n            }\r\n        }\r\n    },\r\n\r\n    clearPopups() {\r\n        console.log('clearPopups')\r\n        for (let node of this.popupRoot.children) {\r\n            node.runAction(cc.sequence(cc.fadeOut(0.1), cc.callFunc(() => {\r\n                node.destroy();\r\n            })))\r\n        }\r\n        this._curPopupName = \"\"\r\n        // this.popupRoot.destroyAllChildren();\r\n    },\r\n\r\n    getGame(name) {\r\n        return this.gameRoot.getChildByName(name);\r\n    },\r\n\r\n    clearGames() {\r\n        this.gameRoot.destroyAllChildren();\r\n        this._curGameName = \"\"\r\n    },\r\n\r\n    showToast(s, callback, num) {\r\n        if (!this.toastPrefab) return;\r\n        var toast = cc.instantiate(this.toastPrefab);\r\n        if (this.toastRoot.childrenCount > 0) {\r\n            for (var i = this.toastRoot.childrenCount - 1; i >= 0; i--) {\r\n                var moveUp = cc.moveBy(0.1, cc.v2(0, toast.height))\r\n                this.toastRoot.children[i].runAction(moveUp)\r\n            }\r\n        }\r\n        this.toastRoot.addChild(toast);\r\n        toast.getComponent('ToastUI').show(s, callback, num);\r\n    },\r\n\r\n    setLoadingMaskVisible(isShow) {\r\n        if (isShow) {\r\n            this.loadingMask.active = true\r\n        } else {\r\n            this.loadingMask.active = false\r\n        }\r\n    },\r\n\r\n    //例外\r\n    update(dt) {\r\n        GameApp.dataManager.globalData.onLineTime += dt;\r\n        switch (GameApp.dataManager.globalData.recordState) {\r\n            case RecordState.READY:\r\n                GameApp.dataManager.globalData.recordTimer = 0;\r\n                break;\r\n            case RecordState.RECORD:\r\n                GameApp.dataManager.globalData.recordTimer += dt;\r\n                break;\r\n            case RecordState.PAUSE:\r\n                break;\r\n        }\r\n    }\r\n\r\n});","let util = {}\n\nlet bannerIdTab = {\n\taddBanner: \"503khkj54l5m1j6i0i\"\n};\n\nutil.m_banner = null\nutil.moregameBtn = null\nutil.vedioAd = null\nutil.recorder = null\nutil.recordNatureStop = false\nlet vedioIdTab = {\n\taddVideo: \"i2nd08ki9p723pt2k4\"\n}\nconst baseurl = \"https://ecwx-1257044218.cos.ap-chengdu.myqcloud.com/\"\nconst shareImgUrl = baseurl + \"bingoballshare.jpg\"// \"http://img5.imgtn.bdimg.com/it/u=2001547842,1349217893&fm=26&gp=0.jpg\"\nconst shareTxts = [\n\t{ idx: 1, txt: \"他拿起喷子一梭子就给我带走了。。。\" },\n\t{ idx: 2, txt: \"老板有没有加特林，哒哒哒冒蓝火那种\" },\n\t{ idx: 3, txt: \"鸡吃撑了，歇会儿\" },\n\t{ idx: 4, txt: \"这里的妹子真Q弹，就是她了！\" },\n]\nutil._getShareObject = function (from, _callSuccess, _callFailed) {\n\tlet title = \"史上最难的游戏，玩过的人都说春运抢票不算难！\"\n\tlet query = null\n\tlet desc = null\n\tlet obj = Tools.getRandomElement(shareTxts)\n\tif (obj) {\n\t\tdesc = obj.txt\n\t\tquery = \"from=\" + from + \"&txt_id=\" + title.idx\n\t}\n\treturn {\n\t\ttitle: title,\n\t\tdesc: desc,\n\t\tquery: query,\n\t\timageUrl: shareImgUrl,\n\t\tsuccess() {\n\t\t\tconsole.log('分享成功');\n\t\t\t_callSuccess && _callSuccess()\n\t\t},\n\t\tfail(e) {\n\t\t\tconsole.log('分享失败');\n\t\t\tconsole.log(e)\n\t\t\t_callFailed && _callFailed()\n\t\t}\n\t}\n}\nutil.shareFromHomePage = function (_callSuccess, _callFailed) {\n\tif (window.wx) {\n\t\twx.shareAppMessage(util._getShareObject(\"home_page\", _callSuccess, _callFailed))\n\t} else {\n\t\t_callSuccess && _callSuccess()\n\t}\n}\nutil.shareRecord = function (path, _callSuccess, _callFailed) {\n\tif (window.tt) {\n\t\t// tt.shareAppMessage(util._getShareObject(\"home_page\"))\n\t\tlet title = \"史上最难的游戏，玩过的人都说春运抢票不算难！\"\n\t\tlet query = null\n\t\tlet desc = null\n\t\tlet obj = Tools.getRandomElement(shareTxts)\n\t\tif (obj) {\n\t\t\tdesc = obj.txt\n\t\t\tquery = \"from=share\" + \"&txt_id=\" + title.idx\n\t\t}\n\t\ttt.shareAppMessage({\n\t\t\tchannel: 'video',\n\t\t\ttitle: title,\n\t\t\tdesc: desc,\n\t\t\timageUrl: shareImgUrl,//放入与游戏相关的百度图片\n\t\t\ttemplateId: '',\n\t\t\tquery: query,\n\t\t\textra: {\n\t\t\t\tvideoPath: path, // 换成录屏得到的视频地址\n\t\t\t\tvideoTopics: ['全民刺激吃鸡', '小游戏'],\n\t\t\t\tcreateChallenge: true\n\t\t\t},\n\t\t\tsuccess() {\n\t\t\t\tconsole.log('分享视频成功');\n\t\t\t\t_callSuccess && _callSuccess()\n\t\t\t},\n\t\t\tfail(e) {\n\t\t\t\tconsole.log('分享视频失败');\n\t\t\t\tconsole.log(e)\n\t\t\t\t_callFailed && _callFailed()\n\t\t\t}\n\t\t})\n\n\n\t}\n}\nutil.addBanner = function (_id, _sy, _WinHeight, _call) {\n\tif (window.tt == null) {\n\t\treturn\n\t}\n\tvar phone = tt.getSystemInfoSync();\n\tvar w = phone.screenWidth\n\tvar h = phone.screenHeight;\n\tif (util.m_banner) {\n\t\tutil.m_banner.destroy()\n\t\tconsole.log(\"m_banner is has create\")\n\t} else {\n\t\tconsole.log(\"m_banner is has not create\")\n\t}\n\tlet bannerAd = tt.createBannerAd({\n\t\tadUnitId: bannerIdTab[_id],\n\t\tstyle: _sy\n\t});\n\tutil.m_banner = bannerAd\n\tbannerAd.onLoad(() => {\n\t\tconsole.log(\"bannerAd 加载成功\")\n\t\tutil.m_banner.show().then(() => {\n\t\t\tconsole.log(\"广告显示成功\");\n\t\t})\n\t});\n\t// 尺寸调整时会触发回调\n\t// 注意：如果在回调里再次调整尺寸，要确保不要触发死循环！！！\n\tbannerAd.onResize(size => {\n\t\t// console.log(\"重置\");\n\t\t// console.log(size.width, size.height);\n\t\tif (size.width == 0) return;\n\t\tif (size.height == 0) return;\n\n\t\t// 如果一开始设置的 banner 宽度超过了系统限制，可以在此处加以调整\n\t\tif (200 != size.width) {\n\t\t\tbannerAd.style.top = h - (size.height);\n\t\t\tbannerAd.style.left = (w - size.width) / 2;\n\t\t}\n\t});\n\t// util.m_banner.onError(err => {\n\t// \tconsole.log(err)\n\t// });\n\n\t// util.m_banner.show().catch(err => console.log(err)).then(() => {\n\t// \tconsole.log(\"banner show success\");\n\t// \tif (_call) {\n\t// \t\t_call();\n\t// \t}\n\t// });\n\t// util.m_banner.onResize(res => {\n\t// \tconsole.log(\"bannerAd onResize bannerAd.style.realHeight:\" + util.m_banner.style.realHeight)\n\t// \tconsole.log(\"bannerAd onResize bannerAd.style.top:\" + util.m_banner.style.top)\n\t// \tutil.m_banner.style.left = w - util.m_banner.style.realWidth / 2 + 0.1\n\t// \tutil.m_banner.style.top = h - util.m_banner.style.realHeight - 10\n\t// \tutil.m_banner.style.width = util.m_banner.style.realWidth\n\t// })\n\n}\nutil.removeBanner = function () {\n\tif (window.tt == null) {\n\t\treturn\n\t}\n\tif (util.m_banner) {\n\t\tutil.m_banner.hide()\n\t\tconsole.log(\"removeBanner\")\n\t}\n}\n//不用\nutil.addMoreGameBtn = function (_url) {\n\tif (window.tt) {\n\t\tvar phone = tt.getSystemInfoSync();\n\t\tvar w = phone.screenWidth\n\t\tvar h = phone.screenHeight;\n\t\tutil.moregameBtn = tt.createMoreGamesButton({\n\t\t\ttype: \"image\",\n\t\t\timage: _url,\n\t\t\tstyle: {\n\t\t\t\tleft: 20,\n\t\t\t\ttop: 50,\n\t\t\t\twidth: 50,\n\t\t\t\theight: 50,\n\t\t\t\tlineHeight: 50,\n\t\t\t\tbackgroundColor: \"\",\n\t\t\t\ttextColor: \"\",\n\t\t\t\ttextAlign: \"center\",\n\t\t\t\tfontSize: 16,\n\t\t\t\tborderRadius: 0,\n\t\t\t\tborderWidth: 0,\n\t\t\t\tborderColor: \"\"\n\t\t\t},\n\t\t\tappLaunchOptions: [\n\t\t\t\t{\n\t\t\t\t\tappId: \"ttXXXXXX\",\n\t\t\t\t\tquery: \"foo=bar&baz=qux\",\n\t\t\t\t\textraData: {}\n\t\t\t\t}\n\t\t\t\t// {...}\n\t\t\t],\n\t\t\tonNavigateToMiniGame(res) {\n\t\t\t\tconsole.log(\"跳转其他小游戏\", res);\n\t\t\t}\n\t\t});\n\t\tconsole.log(util.moregameBtn)\n\t\t// Tools.scaleUpAndDowm(util.moregameBtn.node)\n\t\t// btn.onTap(() => {\n\t\t// \tconsole.log(\"点击更多游戏\");\n\t\t// });\n\t}\n}\nutil.closeMoreGameBtn = function () {\n\tutil.moregameBtn.destroy()\n}\nutil.addVideo = function (_id, _callSuccess, _callFailed) {\n\tif (window.tt == null) {\n\t\treturn\n\t}\n\n\tutil.vedioAd = tt.createRewardedVideoAd({\n\t\tadUnitId: vedioIdTab[_id]\n\t});\n\n\ttry {\n\t\tif (util.vedioAd.errorFunc) {\n\t\t\tconsole.log(\"关闭了error\")\n\t\t\tutil.vedioAd.offError(util.vedioAd.errorFunc);\n\t\t}\n\t\tif (util.vedioAd.closeFunc) {\n\t\t\tconsole.log(\"关闭了close\")\n\t\t\tutil.vedioAd.offClose(util.vedioAd.closeFunc);\n\t\t}\n\t} catch (e) {\n\t\tconsole.warn(\"--------------videoAd offClose or offError error:\");\n\t\tconsole.error(e);\n\t}\n\n\tutil.vedioAd.errorFunc = function (err) {\n\t\tconsole.log(err)\n\t\tif (err.errCode == 1004) {\n\t\t\t_callSuccess && _callSuccess(\"无可观看视频\");\n\t\t} else {\n\t\t\t_callSuccess && _callSuccess(\"视频服务器错误\");\n\t\t}\n\t};\n\tutil.vedioAd.onError(util.vedioAd.errorFunc);\n\tutil.vedioAd.closeFunc = function (res) {\n\t\tconsole.log(\"执行了closeFunc\")\n\t\tif (res && res.isEnded || res === undefined) {\n\t\t\t// util.vedioAd.offLoad()\n\t\t\tconsole.log(\"播放完了\")\n\t\t\t_callSuccess && _callSuccess();\n\t\t} else {\n\t\t\tconsole.log('中途退出')\n\t\t\t_callFailed && _callFailed()\n\t\t}\n\t};\n\tutil.vedioAd.onClose(util.vedioAd.closeFunc);\n\n\n\tutil.vedioAd.show().catch(() => {\n\t\t// 失败重试\n\t\tutil.vedioAd.load()\n\t\t\t.then(() => util.vedioAd.show())\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('激励视频or广告显示失败')\n\t\t\t})\n\t});\n\n}\nutil.startRecord = function (_call, _onNatureClose) {\n\tif (window.tt == null) {\n\t\treturn\n\t}\n\tutil.recorder = tt.getGameRecorderManager();\n\tutil.recorder.onStart(res => {\n\t\tconsole.log('录屏开始');\n\t\tutil.recordNatureStop = false\n\t\t_call && _call()\n\t})\n\tutil.recorder.onStop(res => {\n\t\tconsole.log('录屏自然停止');\n\t\tutil.recordNatureStop = true\n\t\t_onNatureClose && _onNatureClose(res)\n\t})\n\tutil.recorder.onError(res => {\n\t\tconsole.log('录屏错误');\n\t})\n\tutil.recorder.start({\n\t\tduration: 1200,\n\t})\n};\nutil.pauseRecord = function (_call) {\n\tutil.recorder.onPause(res => {\n\t\tconsole.log('录屏暂停');\n\t\t_call && _call()\n\t})\n\n\tutil.recorder.pause()\n};\nutil.resumeRecord = function (_call) {\n\tutil.recorder.onResume(res => {\n\t\tconsole.log('录屏恢复');\n\t\t_call && _call()\n\t})\n\n\tutil.recorder.resume()\n};\nutil.stopRecord = function (_call) {\n\tif (util.recordNatureStop) {\n\t\t_call && _call()\n\t\treturn;\n\t}\n\tutil.recorder.onStop(res => {\n\t\tconsole.log('录屏停止');\n\t\t// util.recordPath = res.videoPath;\n\t\t_call && _call(res)\n\t})\n\n\tutil.recorder.stop()\n};\n\n\nmodule.exports = util","/*\r\n * This script is automatically generated by Cocos Creator and is only used for projects compatible with v2.1.0/v2.1.1/v2.3.0/v2.3.1/v2.3.2 versions.\r\n * You do not need to manually add this script in any other project.\r\n * If you don't use cc.Action in your project, you can delete this script directly.\r\n * If your project is hosted in VCS such as git, submit this script together.\r\n *\r\n * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0/v2.1.1/v2.3.0/v2.3.1/v2.3.2 版本的工程，\r\n * 你无需在任何其它项目中手动添加此脚本。\r\n * 如果你的项目中没用到 Action，可直接删除该脚本。\r\n * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。\r\n */\r\n\r\ncc.RotateBy._reverse = true;\r\n","/*\n * This script is automatically generated by Cocos Creator and is only used for projects compatible with the v2.1.0 ～ 2.2.1 version.\n * You do not need to manually add this script in any other project.\n * If you don't use cc.Toggle in your project, you can delete this script directly.\n * If your project is hosted in VCS such as git, submit this script together.\n *\n * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0 ~ 2.2.1 版本的工程，\n * 你无需在任何其它项目中手动添加此脚本。\n * 如果你的项目中没用到 Toggle，可直接删除该脚本。\n * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。\n */\n\nif (cc.Toggle) {\n    // Whether to trigger 'toggle' and 'checkEvents' events when modifying 'toggle.isChecked' in the code\n    // 在代码中修改 'toggle.isChecked' 时是否触发 'toggle' 与 'checkEvents' 事件\n    cc.Toggle._triggerEventInScript_isChecked = true;\n}\n"],"file":"index.js"}